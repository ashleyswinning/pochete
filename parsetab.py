
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '8EW\x83\x8fR\xa4]\xb0\xbb\x15\x0fv\xb9\xb1\xab'
    
_lr_action_items = {'REAL':([8,15,20,24,34,35,37,46,51,52,53,55,56,57,58,60,61,63,64,66,69,70,73,99,120,],[19,19,19,19,19,19,19,19,19,19,19,-37,19,-42,-38,-41,-39,-40,19,19,19,19,19,19,19,]),'SIM_ATTR':([12,14,39,40,79,],[37,-2,-11,-12,-13,]),'ELIF':([115,133,],[120,120,]),'WHILE':([5,6,7,10,11,16,17,83,94,96,110,113,123,126,127,130,],[8,-9,-7,-6,-8,-10,8,8,-17,8,-18,-19,-25,8,-20,8,]),'SIM_POT':([19,22,28,31,32,47,49,92,93,],[-57,-56,-58,-55,73,-61,-60,73,-59,]),'TRUE':([8,15,34,35,37,46,64,66,99,120,],[21,21,21,21,21,21,21,21,21,21,]),'DEF':([0,],[2,]),'%':([19,22,25,28,31,32,47,49,72,74,84,85,86,92,93,109,],[-57,-56,51,-58,-55,-2,-61,-60,-52,-53,51,51,51,-2,-59,-54,]),')':([14,19,21,22,25,26,27,28,29,30,31,32,33,39,40,47,49,50,54,59,62,65,67,68,71,72,74,75,76,78,79,81,82,84,85,86,87,88,89,90,91,92,93,97,98,102,103,104,105,106,107,108,109,112,],[-2,-57,-31,-56,-2,-2,-2,-58,-2,-30,-55,-2,-32,-11,-12,-61,-60,-47,-48,-34,-36,-26,-27,-43,-44,-52,-53,93,-33,95,-13,-2,100,-2,-2,-2,-35,-2,-2,-2,-2,-2,-59,-14,-16,-51,-49,-50,-29,-28,-45,-46,-54,-15,]),'(':([8,13,15,18,20,24,34,35,37,46,51,52,53,55,56,57,58,60,61,63,64,66,69,70,73,99,120,],[34,38,34,46,34,34,34,34,34,34,34,34,34,-37,34,-42,-38,-41,-39,-40,34,34,34,34,34,34,34,]),'+':([8,15,19,20,22,24,25,28,29,31,32,34,35,37,46,47,49,50,51,52,53,54,55,56,57,58,60,61,63,64,66,69,70,72,73,74,84,85,86,90,91,92,93,99,102,103,104,109,120,],[24,24,-57,24,-56,24,-2,-58,69,-55,-2,24,24,24,24,-61,-60,-47,24,24,24,-48,-37,24,-42,-38,-41,-39,-40,24,24,24,24,-52,24,-53,-2,-2,-2,69,69,-2,-59,24,-51,-49,-50,-54,24,]),'*':([19,22,25,28,31,32,47,49,72,74,84,85,86,92,93,109,],[-57,-56,52,-58,-55,-2,-61,-60,-52,-53,52,52,52,-2,-59,-54,]),'-':([8,15,19,20,22,24,25,28,29,31,32,34,35,37,46,47,49,50,51,52,53,54,55,56,57,58,60,61,63,64,66,69,70,72,73,74,84,85,86,90,91,92,93,99,102,103,104,109,120,],[20,20,-57,20,-56,20,-2,-58,70,-55,-2,20,20,20,20,-61,-60,-47,20,20,20,-48,-37,20,-42,-38,-41,-39,-40,20,20,20,20,-52,20,-53,-2,-2,-2,70,70,-2,-59,20,-51,-49,-50,-54,20,]),',':([14,19,21,22,25,26,27,28,29,30,31,32,33,47,49,50,54,59,62,65,67,68,71,72,74,76,81,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,],[41,-57,-31,-56,-2,-2,-2,-58,-2,-30,-55,-2,-32,-61,-60,-47,-48,-34,-36,-26,-27,-43,-44,-52,-53,-33,99,-2,-2,-2,-35,-2,-2,-2,-2,-2,-59,-51,-49,-50,-29,-28,-45,-46,-54,]),'/':([19,22,25,28,31,32,47,49,72,74,84,85,86,92,93,109,],[-57,-56,53,-58,-55,-2,-61,-60,-52,-53,53,53,53,-2,-59,-54,]),';':([19,21,22,25,26,27,28,29,30,31,32,33,47,49,50,54,59,62,65,67,68,71,72,74,76,77,84,85,86,87,88,89,90,91,92,93,95,100,102,103,104,105,106,107,108,109,114,115,117,118,119,121,124,131,133,134,],[-57,-31,-56,-2,-2,-2,-58,-2,-30,-55,-2,-32,-61,-60,-47,-48,-34,-36,-26,-27,-43,-44,-52,-53,-33,94,-2,-2,-2,-35,-2,-2,-2,-2,-2,-59,110,113,-51,-49,-50,-29,-28,-45,-46,-54,-2,-2,123,-23,-2,-21,127,-24,-2,-22,]),'IF':([5,6,7,10,11,16,17,83,94,96,110,113,123,126,127,130,],[15,-9,-7,-6,-8,-10,15,15,-17,15,-18,-19,-25,15,-20,15,]),'<':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,61,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'$end':([1,36,],[0,-1,]),'SIM_EQ':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,55,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'ELSE':([114,115,119,121,133,134,],[116,-2,116,-21,-2,-22,]),'LITERAL':([8,15,20,24,34,35,37,46,51,52,53,55,56,57,58,60,61,63,64,66,69,70,73,99,120,],[28,28,28,28,28,28,28,28,28,28,28,-37,28,-42,-38,-41,-39,-40,28,28,28,28,28,28,28,]),'SIM_DIF':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,58,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'INPUT':([5,6,7,10,11,16,17,83,94,96,110,113,123,126,127,130,],[13,-9,-7,-6,-8,-10,13,13,-17,13,-18,-19,-25,13,-20,13,]),'[':([4,48,80,122,128,],[5,83,96,126,130,]),']':([6,7,9,10,11,16,17,43,44,45,94,101,110,111,113,123,127,129,132,],[-9,-7,36,-6,-8,-10,-2,-5,-3,-4,-17,114,-18,115,-19,-25,-20,131,133,]),'ID':([2,5,6,7,8,10,11,15,16,17,20,24,34,35,37,38,41,46,51,52,53,55,56,57,58,60,61,63,64,66,69,70,73,83,94,96,99,110,113,120,123,126,127,130,],[3,14,-9,-7,31,-6,-8,31,-10,14,31,31,31,31,31,14,14,31,31,31,31,-37,31,-42,-38,-41,-39,-40,31,31,31,31,31,14,-17,14,31,-18,-19,31,-25,14,-20,14,]),'SIM_GE':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,57,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'INTEIRO':([8,15,20,24,34,35,37,46,51,52,53,55,56,57,58,60,61,63,64,66,69,70,73,99,120,],[22,22,22,22,22,22,22,22,22,22,22,-37,22,-42,-38,-41,-39,-40,22,22,22,22,22,22,22,]),'AND':([19,21,22,25,26,27,28,29,30,31,32,33,47,49,50,54,59,62,68,71,72,74,76,84,85,86,87,88,89,90,91,92,93,102,103,104,107,108,109,],[-57,-31,-56,-2,-2,64,-58,-2,-30,-55,-2,-32,-61,-60,-47,-48,-34,-36,-43,-44,-52,-53,-33,-2,-2,-2,-35,64,64,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),':':([3,19,21,22,23,25,26,27,28,29,30,31,32,33,42,47,49,50,54,59,62,65,67,68,71,72,74,76,84,85,86,87,88,89,90,91,92,93,102,103,104,105,106,107,108,109,116,125,],[4,-57,-31,-56,48,-2,-2,-2,-58,-2,-30,-55,-2,-32,80,-61,-60,-47,-48,-34,-36,-26,-27,-43,-44,-52,-53,-33,-2,-2,-2,-35,-2,-2,-2,-2,-2,-59,-51,-49,-50,-29,-28,-45,-46,-54,122,128,]),'FALSE':([8,15,34,35,37,46,64,66,99,120,],[33,33,33,33,33,33,33,33,33,33,]),'NOT':([8,15,34,35,37,46,64,66,99,120,],[35,35,35,35,35,35,35,35,35,35,]),'OUTPUT':([5,6,7,10,11,16,17,83,94,96,110,113,123,126,127,130,],[18,-9,-7,-6,-8,-10,18,18,-17,18,-18,-19,-25,18,-20,18,]),'>':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,60,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'OR':([19,21,22,25,26,27,28,29,30,31,32,33,47,49,50,54,59,62,68,71,72,74,76,84,85,86,87,88,89,90,91,92,93,102,103,104,107,108,109,],[-57,-31,-56,-2,-2,66,-58,-2,-30,-55,-2,-32,-61,-60,-47,-48,-34,-36,-43,-44,-52,-53,-33,-2,-2,-2,-35,66,66,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),'SIM_LE':([19,22,25,26,28,29,31,32,47,49,50,54,68,71,72,74,84,85,86,90,91,92,93,102,103,104,107,108,109,],[-57,-56,-2,63,-58,-2,-55,-2,-61,-60,-47,-48,-43,-44,-52,-53,-2,-2,-2,-2,-2,-2,-59,-51,-49,-50,-45,-46,-54,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'elif':([115,133,],[119,134,]),'cmdselecao':([5,17,83,96,126,130,],[6,6,6,6,6,6,]),'cmdentrada':([5,17,83,96,126,130,],[7,7,7,7,7,7,]),'listacmd':([5,17,83,96,126,130,],[9,43,101,111,129,132,]),'cmdatribui':([5,17,83,96,126,130,],[10,10,10,10,10,10,]),'listacmd1':([17,],[44,]),'listaexp':([46,99,],[82,112,]),'fator':([8,15,34,35,37,46,51,52,53,56,64,66,69,70,99,120,],[25,25,25,25,25,25,84,85,86,25,25,25,25,25,25,25,]),'aritmetica':([8,15,34,35,37,46,56,64,66,99,120,],[26,26,26,26,26,26,87,26,26,26,26,]),'cmdsaida':([5,17,83,96,126,130,],[11,11,11,11,11,11,]),'valor':([8,15,34,35,37,46,64,66,99,120,],[27,27,27,76,27,27,88,89,27,27,]),'relacional1':([26,],[59,]),'listaindenti1':([14,],[39,]),'empty':([14,17,25,26,27,29,32,81,84,85,86,88,89,90,91,92,114,115,119,133,],[40,45,54,62,67,71,74,98,54,54,54,67,67,71,71,74,118,121,118,121,]),'listaidenti':([5,17,38,41,83,96,126,130,],[12,12,78,79,12,12,12,12,]),'fator1':([32,92,],[72,109,]),'listaexp1':([81,],[97,]),'else':([114,119,],[117,124,]),'aritmetica1':([29,90,91,],[68,107,108,]),'termo':([8,15,34,35,37,46,56,64,66,69,70,99,120,],[29,29,29,29,29,29,29,29,29,90,91,29,29,]),'expressao1':([27,88,89,],[65,105,106,]),'relacional':([8,15,34,35,37,46,64,66,99,120,],[30,30,30,30,30,30,30,30,30,30,]),'elemento':([8,15,20,24,34,35,37,46,51,52,53,56,64,66,69,70,73,99,120,],[32,32,47,49,32,32,32,32,32,32,32,32,32,32,32,32,92,32,32,]),'termo1':([25,84,85,86,],[50,102,103,104,]),'cmdrepeticao':([5,17,83,96,126,130,],[16,16,16,16,16,16,]),'operador':([26,],[56,]),'programa':([0,],[1,]),'comando':([5,17,83,96,126,130,],[17,17,17,17,17,17,]),'expressao':([8,15,34,37,46,99,120,],[23,42,75,77,81,81,125,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> DEF ID : [ listacmd ]','programa',6,'p_programa','parser.py',6),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',10),
  ('listacmd -> comando listacmd1','listacmd',2,'p_listacmd','parser.py',14),
  ('listacmd1 -> empty','listacmd1',1,'p_listacmd1','parser.py',18),
  ('listacmd1 -> listacmd','listacmd1',1,'p_listacmd1','parser.py',19),
  ('comando -> cmdatribui','comando',1,'p_comando','parser.py',23),
  ('comando -> cmdentrada','comando',1,'p_comando','parser.py',24),
  ('comando -> cmdsaida','comando',1,'p_comando','parser.py',25),
  ('comando -> cmdselecao','comando',1,'p_comando','parser.py',26),
  ('comando -> cmdrepeticao','comando',1,'p_comando','parser.py',27),
  ('listaidenti -> ID listaindenti1','listaidenti',2,'p_listaidenti','parser.py',31),
  ('listaindenti1 -> empty','listaindenti1',1,'p_listaindenti1','parser.py',35),
  ('listaindenti1 -> , listaidenti','listaindenti1',2,'p_listaindenti1','parser.py',36),
  ('listaexp -> expressao listaexp1','listaexp',2,'p_listaexp','parser.py',40),
  ('listaexp1 -> , listaexp','listaexp1',2,'p_listaexp1','parser.py',44),
  ('listaexp1 -> empty','listaexp1',1,'p_listaexp1','parser.py',45),
  ('cmdatribui -> listaidenti SIM_ATTR expressao ;','cmdatribui',4,'p_cmdatribui','parser.py',49),
  ('cmdentrada -> INPUT ( listaidenti ) ;','cmdentrada',5,'p_cmdentrada','parser.py',53),
  ('cmdsaida -> OUTPUT ( listaexp ) ;','cmdsaida',5,'p_cmdsaida','parser.py',57),
  ('cmdselecao -> IF expressao : [ listacmd ] elif else ;','cmdselecao',9,'p_cmdselecao','parser.py',61),
  ('elif -> empty','elif',1,'p_elif','parser.py',65),
  ('elif -> ELIF expressao : [ listacmd ] elif','elif',7,'p_elif','parser.py',66),
  ('else -> empty','else',1,'p_else','parser.py',70),
  ('else -> ELSE : [ listacmd ]','else',5,'p_else','parser.py',71),
  ('cmdrepeticao -> WHILE expressao : [ listacmd ] else ;','cmdrepeticao',8,'p_cmdrepeticao','parser.py',75),
  ('expressao -> valor expressao1','expressao',2,'p_expressao','parser.py',79),
  ('expressao1 -> empty','expressao1',1,'p_expressao1','parser.py',83),
  ('expressao1 -> OR valor expressao1','expressao1',3,'p_expressao1','parser.py',84),
  ('expressao1 -> AND valor expressao1','expressao1',3,'p_expressao1','parser.py',85),
  ('valor -> relacional','valor',1,'p_valor','parser.py',89),
  ('valor -> TRUE','valor',1,'p_valor','parser.py',90),
  ('valor -> FALSE','valor',1,'p_valor','parser.py',91),
  ('valor -> NOT valor','valor',2,'p_valor','parser.py',92),
  ('relacional -> aritmetica relacional1','relacional',2,'p_relacional','parser.py',96),
  ('relacional1 -> operador aritmetica','relacional1',2,'p_relacional1','parser.py',100),
  ('relacional1 -> empty','relacional1',1,'p_relacional1','parser.py',101),
  ('operador -> SIM_EQ','operador',1,'p_operador','parser.py',105),
  ('operador -> SIM_DIF','operador',1,'p_operador','parser.py',106),
  ('operador -> <','operador',1,'p_operador','parser.py',107),
  ('operador -> SIM_LE','operador',1,'p_operador','parser.py',108),
  ('operador -> >','operador',1,'p_operador','parser.py',109),
  ('operador -> SIM_GE','operador',1,'p_operador','parser.py',110),
  ('aritmetica -> termo aritmetica1','aritmetica',2,'p_aritmetica','parser.py',114),
  ('aritmetica1 -> empty','aritmetica1',1,'p_aritmetica1','parser.py',118),
  ('aritmetica1 -> + termo aritmetica1','aritmetica1',3,'p_aritmetica1','parser.py',119),
  ('aritmetica1 -> - termo aritmetica1','aritmetica1',3,'p_aritmetica1','parser.py',120),
  ('termo -> fator termo1','termo',2,'p_termo','parser.py',124),
  ('termo1 -> empty','termo1',1,'p_termo1','parser.py',128),
  ('termo1 -> * fator termo1','termo1',3,'p_termo1','parser.py',129),
  ('termo1 -> / fator termo1','termo1',3,'p_termo1','parser.py',130),
  ('termo1 -> % fator termo1','termo1',3,'p_termo1','parser.py',131),
  ('fator -> elemento fator1','fator',2,'p_fator','parser.py',135),
  ('fator1 -> empty','fator1',1,'p_fator1','parser.py',139),
  ('fator1 -> SIM_POT elemento fator1','fator1',3,'p_fator1','parser.py',140),
  ('elemento -> ID','elemento',1,'p_elemento','parser.py',144),
  ('elemento -> INTEIRO','elemento',1,'p_elemento','parser.py',145),
  ('elemento -> REAL','elemento',1,'p_elemento','parser.py',146),
  ('elemento -> LITERAL','elemento',1,'p_elemento','parser.py',147),
  ('elemento -> ( expressao )','elemento',3,'p_elemento','parser.py',148),
  ('elemento -> + elemento','elemento',2,'p_elemento','parser.py',149),
  ('elemento -> - elemento','elemento',2,'p_elemento','parser.py',150),
]
