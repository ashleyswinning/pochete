Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID action2 : [ listacmd ]
Rule 2     programa -> empty
Rule 3     action2 -> <empty>
Rule 4     programa -> DEF ID error [ listacmd ]
Rule 5     programa -> DEF ID empty : error listacmd ]
Rule 6     programa -> DEF ID empty : [ listacmd error
Rule 7     empty -> <empty>
Rule 8     listacmd -> comando listacmd1
Rule 9     listacmd1 -> empty
Rule 10    listacmd1 -> listacmd
Rule 11    comando -> cmdatribui
Rule 12    comando -> cmdentrada
Rule 13    comando -> cmdsaida
Rule 14    comando -> cmdselecao
Rule 15    comando -> cmdrepeticao
Rule 16    listaidenti -> ID listaindenti1
Rule 17    listaindenti1 -> empty
Rule 18    listaindenti1 -> , listaidenti
Rule 19    listaexp -> expressao listaexp1
Rule 20    listaexp1 -> , listaexp
Rule 21    listaexp1 -> empty
Rule 22    listaexp1 -> error listaexp
Rule 23    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 24    cmdentrada -> INPUT ( listaidenti ) ;
Rule 25    cmdentrada -> INPUT ( listaidenti error ;
Rule 26    cmdentrada -> INPUT error listaidenti ) ;
Rule 27    cmdentrada -> INPUT ( listaidenti ) error
Rule 28    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 29    cmdsaida -> OUTPUT ( listaexp error ;
Rule 30    cmdsaida -> OUTPUT error listaexp ) ;
Rule 31    cmdsaida -> OUTPUT ( listaexp ) error
Rule 32    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 33    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 34    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 35    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 36    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 37    elif -> empty
Rule 38    elif -> ELIF expressao : [ listacmd ] elif
Rule 39    elif -> ELIF expressao error [ listacmd ] elif
Rule 40    elif -> ELIF expressao : error listacmd ] elif
Rule 41    elif -> ELIF expressao : [ listacmd error elif
Rule 42    else -> empty
Rule 43    else -> ELSE : [ listacmd ]
Rule 44    else -> ELSE error [ listacmd ]
Rule 45    else -> ELSE : error listacmd ]
Rule 46    else -> ELSE : [ listacmd error
Rule 47    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 48    cmdrepeticao -> WHILE expressao error [ listacmd ] else ;
Rule 49    cmdrepeticao -> WHILE expressao : error listacmd ] else ;
Rule 50    cmdrepeticao -> WHILE expressao : [ listacmd error else ;
Rule 51    cmdrepeticao -> WHILE expressao : [ listacmd ] else error
Rule 52    expressao -> valor expressao1
Rule 53    expressao1 -> empty
Rule 54    expressao1 -> OR valor expressao1
Rule 55    expressao1 -> AND valor expressao1
Rule 56    expressao1 -> error valor expressao1
Rule 57    valor -> relacional
Rule 58    valor -> TRUE
Rule 59    valor -> FALSE
Rule 60    valor -> NOT valor
Rule 61    relacional -> aritmetica relacional1
Rule 62    relacional1 -> operador aritmetica
Rule 63    relacional1 -> empty
Rule 64    operador -> SIM_EQ
Rule 65    operador -> SIM_DIF
Rule 66    operador -> <
Rule 67    operador -> SIM_LE
Rule 68    operador -> >
Rule 69    operador -> SIM_GE
Rule 70    aritmetica -> termo aritmetica1
Rule 71    aritmetica1 -> empty
Rule 72    aritmetica1 -> + termo aritmetica1
Rule 73    aritmetica1 -> - termo aritmetica1
Rule 74    termo -> fator termo1
Rule 75    termo1 -> empty
Rule 76    termo1 -> * fator termo1
Rule 77    termo1 -> / fator termo1
Rule 78    termo1 -> % fator termo1
Rule 79    fator -> elemento fator1
Rule 80    fator1 -> empty
Rule 81    fator1 -> SIM_POT elemento fator1
Rule 82    elemento -> ID
Rule 83    elemento -> INTEIRO
Rule 84    elemento -> REAL
Rule 85    elemento -> LITERAL
Rule 86    elemento -> ( expressao )
Rule 87    elemento -> + elemento
Rule 88    elemento -> - elemento

Terminals, with rules where they appear

%                    : 78
(                    : 24 25 27 28 29 31 86
)                    : 24 26 27 28 30 31 86
*                    : 76
+                    : 72 87
,                    : 18 20
-                    : 73 88
/                    : 77
:                    : 1 5 6 32 34 35 36 38 40 41 43 45 46 47 49 50 51
;                    : 23 24 25 26 28 29 30 32 33 34 35 47 48 49 50
<                    : 66
>                    : 68
AND                  : 55
BINARIO              : 
DEF                  : 1 4 5 6
ELIF                 : 38 39 40 41
ELSE                 : 43 44 45 46
FALSE                : 59
HEXADECIMAL          : 
ID                   : 1 4 5 6 16 82
IF                   : 32 33 34 35 36
INPUT                : 24 25 26 27
INTEIRO              : 83
LITERAL              : 85
NOT                  : 60
OCTAL                : 
OR                   : 54
OUTPUT               : 28 29 30 31
REAL                 : 84
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 23
SIM_DIF              : 65
SIM_EQ               : 64
SIM_GE               : 69
SIM_LE               : 67
SIM_POT              : 81
TRUE                 : 58
WHILE                : 47 48 49 50 51
[                    : 1 4 6 32 33 35 36 38 39 41 43 44 46 47 48 50 51
]                    : 1 4 5 32 33 34 36 38 39 40 43 44 45 47 48 49 51
error                : 4 5 6 22 25 26 27 29 30 31 33 34 35 36 39 40 41 44 45 46 48 49 50 51 56

Nonterminals, with rules where they appear

action2              : 1
aritmetica           : 61 62
aritmetica1          : 70 72 73
cmdatribui           : 11
cmdentrada           : 12
cmdrepeticao         : 15
cmdsaida             : 13
cmdselecao           : 14
comando              : 8
elemento             : 79 81 87 88
elif                 : 32 33 34 35 36 38 39 40 41
else                 : 32 33 34 35 36 47 48 49 50 51
empty                : 2 5 6 9 17 21 37 42 53 63 71 75 80
expressao            : 19 23 32 33 34 35 36 38 39 40 41 47 48 49 50 51 86
expressao1           : 52 54 55 56
fator                : 74 76 77 78
fator1               : 79 81
listacmd             : 1 4 5 6 10 32 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51
listacmd1            : 8
listaexp             : 20 22 28 29 30 31
listaexp1            : 19
listaidenti          : 18 23 24 25 26 27
listaindenti1        : 16
operador             : 62
programa             : 0
relacional           : 57
relacional1          : 61
termo                : 70 72 73
termo1               : 74 76 77 78
valor                : 52 54 55 56 60

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID action2 : [ listacmd ]
    (2) programa -> . empty
    (4) programa -> . DEF ID error [ listacmd ]
    (5) programa -> . DEF ID empty : error listacmd ]
    (6) programa -> . DEF ID empty : [ listacmd error
    (7) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 7 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID action2 : [ listacmd ]
    (4) programa -> DEF . ID error [ listacmd ]
    (5) programa -> DEF . ID empty : error listacmd ]
    (6) programa -> DEF . ID empty : [ listacmd error

    ID              shift and go to state 4


state 4

    (1) programa -> DEF ID . action2 : [ listacmd ]
    (4) programa -> DEF ID . error [ listacmd ]
    (5) programa -> DEF ID . empty : error listacmd ]
    (6) programa -> DEF ID . empty : [ listacmd error
    (3) action2 -> .
    (7) empty -> .

  ! reduce/reduce conflict for : resolved using rule 3 (action2 -> .)
    error           shift and go to state 7
    :               reduce using rule 3 (action2 -> .)

  ! :               [ reduce using rule 7 (empty -> .) ]

    empty                          shift and go to state 6
    action2                        shift and go to state 5

state 5

    (1) programa -> DEF ID action2 . : [ listacmd ]

    :               shift and go to state 8


state 6

    (5) programa -> DEF ID empty . : error listacmd ]
    (6) programa -> DEF ID empty . : [ listacmd error

    :               shift and go to state 9


state 7

    (4) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 10


state 8

    (1) programa -> DEF ID action2 : . [ listacmd ]

    [               shift and go to state 11


state 9

    (5) programa -> DEF ID empty : . error listacmd ]
    (6) programa -> DEF ID empty : . [ listacmd error

    error           shift and go to state 12
    [               shift and go to state 13


state 10

    (4) programa -> DEF ID error [ . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 17
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 11

    (1) programa -> DEF ID action2 : [ . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 27
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 12

    (5) programa -> DEF ID empty : error . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 28
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 13

    (6) programa -> DEF ID empty : [ . listacmd error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 29
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 14

    (14) comando -> cmdselecao .

    INPUT           reduce using rule 14 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 14 (comando -> cmdselecao .)
    IF              reduce using rule 14 (comando -> cmdselecao .)
    WHILE           reduce using rule 14 (comando -> cmdselecao .)
    ID              reduce using rule 14 (comando -> cmdselecao .)
    ]               reduce using rule 14 (comando -> cmdselecao .)
    error           reduce using rule 14 (comando -> cmdselecao .)


state 15

    (12) comando -> cmdentrada .

    INPUT           reduce using rule 12 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 12 (comando -> cmdentrada .)
    IF              reduce using rule 12 (comando -> cmdentrada .)
    WHILE           reduce using rule 12 (comando -> cmdentrada .)
    ID              reduce using rule 12 (comando -> cmdentrada .)
    ]               reduce using rule 12 (comando -> cmdentrada .)
    error           reduce using rule 12 (comando -> cmdentrada .)


state 16

    (47) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE . expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE . expressao : error listacmd ] else ;
    (50) cmdrepeticao -> WHILE . expressao : [ listacmd error else ;
    (51) cmdrepeticao -> WHILE . expressao : [ listacmd ] else error
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 34
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 17

    (4) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 47


state 18

    (11) comando -> cmdatribui .

    INPUT           reduce using rule 11 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 11 (comando -> cmdatribui .)
    IF              reduce using rule 11 (comando -> cmdatribui .)
    WHILE           reduce using rule 11 (comando -> cmdatribui .)
    ID              reduce using rule 11 (comando -> cmdatribui .)
    ]               reduce using rule 11 (comando -> cmdatribui .)
    error           reduce using rule 11 (comando -> cmdatribui .)


state 19

    (13) comando -> cmdsaida .

    INPUT           reduce using rule 13 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 13 (comando -> cmdsaida .)
    IF              reduce using rule 13 (comando -> cmdsaida .)
    WHILE           reduce using rule 13 (comando -> cmdsaida .)
    ID              reduce using rule 13 (comando -> cmdsaida .)
    ]               reduce using rule 13 (comando -> cmdsaida .)
    error           reduce using rule 13 (comando -> cmdsaida .)


state 20

    (23) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 48


state 21

    (24) cmdentrada -> INPUT . ( listaidenti ) ;
    (25) cmdentrada -> INPUT . ( listaidenti error ;
    (26) cmdentrada -> INPUT . error listaidenti ) ;
    (27) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 49
    error           shift and go to state 50


state 22

    (16) listaidenti -> ID . listaindenti1
    (17) listaindenti1 -> . empty
    (18) listaindenti1 -> . , listaidenti
    (7) empty -> .

    ,               shift and go to state 53
    SIM_ATTR        reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    listaindenti1                  shift and go to state 51
    empty                          shift and go to state 52

state 23

    (32) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (35) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (36) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 54
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 24

    (15) comando -> cmdrepeticao .

    INPUT           reduce using rule 15 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 15 (comando -> cmdrepeticao .)
    IF              reduce using rule 15 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 15 (comando -> cmdrepeticao .)
    ID              reduce using rule 15 (comando -> cmdrepeticao .)
    ]               reduce using rule 15 (comando -> cmdrepeticao .)
    error           reduce using rule 15 (comando -> cmdrepeticao .)


state 25

    (8) listacmd -> comando . listacmd1
    (9) listacmd1 -> . empty
    (10) listacmd1 -> . listacmd
    (7) empty -> .
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    ]               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    listacmd1                      shift and go to state 56
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 55
    cmdsaida                       shift and go to state 19
    empty                          shift and go to state 57
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 26

    (28) cmdsaida -> OUTPUT . ( listaexp ) ;
    (29) cmdsaida -> OUTPUT . ( listaexp error ;
    (30) cmdsaida -> OUTPUT . error listaexp ) ;
    (31) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 58
    error           shift and go to state 59


state 27

    (1) programa -> DEF ID action2 : [ listacmd . ]

    ]               shift and go to state 60


state 28

    (5) programa -> DEF ID empty : error listacmd . ]

    ]               shift and go to state 61


state 29

    (6) programa -> DEF ID empty : [ listacmd . error

    error           shift and go to state 62


state 30

    (84) elemento -> REAL .

    SIM_POT         reduce using rule 84 (elemento -> REAL .)
    *               reduce using rule 84 (elemento -> REAL .)
    /               reduce using rule 84 (elemento -> REAL .)
    %               reduce using rule 84 (elemento -> REAL .)
    +               reduce using rule 84 (elemento -> REAL .)
    -               reduce using rule 84 (elemento -> REAL .)
    SIM_EQ          reduce using rule 84 (elemento -> REAL .)
    SIM_DIF         reduce using rule 84 (elemento -> REAL .)
    <               reduce using rule 84 (elemento -> REAL .)
    SIM_LE          reduce using rule 84 (elemento -> REAL .)
    >               reduce using rule 84 (elemento -> REAL .)
    SIM_GE          reduce using rule 84 (elemento -> REAL .)
    OR              reduce using rule 84 (elemento -> REAL .)
    AND             reduce using rule 84 (elemento -> REAL .)
    error           reduce using rule 84 (elemento -> REAL .)
    :               reduce using rule 84 (elemento -> REAL .)
    )               reduce using rule 84 (elemento -> REAL .)
    ;               reduce using rule 84 (elemento -> REAL .)
    ,               reduce using rule 84 (elemento -> REAL .)


state 31

    (88) elemento -> - . elemento
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 63

state 32

    (58) valor -> TRUE .

    OR              reduce using rule 58 (valor -> TRUE .)
    AND             reduce using rule 58 (valor -> TRUE .)
    error           reduce using rule 58 (valor -> TRUE .)
    ,               reduce using rule 58 (valor -> TRUE .)
    )               reduce using rule 58 (valor -> TRUE .)
    :               reduce using rule 58 (valor -> TRUE .)
    ;               reduce using rule 58 (valor -> TRUE .)


state 33

    (83) elemento -> INTEIRO .

    SIM_POT         reduce using rule 83 (elemento -> INTEIRO .)
    *               reduce using rule 83 (elemento -> INTEIRO .)
    /               reduce using rule 83 (elemento -> INTEIRO .)
    %               reduce using rule 83 (elemento -> INTEIRO .)
    +               reduce using rule 83 (elemento -> INTEIRO .)
    -               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 83 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 83 (elemento -> INTEIRO .)
    <               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 83 (elemento -> INTEIRO .)
    >               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 83 (elemento -> INTEIRO .)
    OR              reduce using rule 83 (elemento -> INTEIRO .)
    AND             reduce using rule 83 (elemento -> INTEIRO .)
    error           reduce using rule 83 (elemento -> INTEIRO .)
    :               reduce using rule 83 (elemento -> INTEIRO .)
    )               reduce using rule 83 (elemento -> INTEIRO .)
    ;               reduce using rule 83 (elemento -> INTEIRO .)
    ,               reduce using rule 83 (elemento -> INTEIRO .)


state 34

    (47) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE expressao . error [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao . : error listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao . : [ listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao . : [ listacmd ] else error

    :               shift and go to state 65
    error           shift and go to state 64


state 35

    (87) elemento -> + . elemento
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 66

state 36

    (74) termo -> fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 68
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 67
    empty                          shift and go to state 71

state 37

    (61) relacional -> aritmetica . relacional1
    (62) relacional1 -> . operador aritmetica
    (63) relacional1 -> . empty
    (64) operador -> . SIM_EQ
    (65) operador -> . SIM_DIF
    (66) operador -> . <
    (67) operador -> . SIM_LE
    (68) operador -> . >
    (69) operador -> . SIM_GE
    (7) empty -> .

    SIM_EQ          shift and go to state 72
    SIM_DIF         shift and go to state 75
    <               shift and go to state 78
    SIM_LE          shift and go to state 80
    >               shift and go to state 77
    SIM_GE          shift and go to state 74
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    relacional1                    shift and go to state 76
    operador                       shift and go to state 73
    empty                          shift and go to state 79

state 38

    (86) elemento -> ( . expressao )
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 81
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 39

    (52) expressao -> valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 85
    AND             shift and go to state 82
    error           shift and go to state 83
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 84
    empty                          shift and go to state 86

state 40

    (85) elemento -> LITERAL .

    SIM_POT         reduce using rule 85 (elemento -> LITERAL .)
    *               reduce using rule 85 (elemento -> LITERAL .)
    /               reduce using rule 85 (elemento -> LITERAL .)
    %               reduce using rule 85 (elemento -> LITERAL .)
    +               reduce using rule 85 (elemento -> LITERAL .)
    -               reduce using rule 85 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 85 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 85 (elemento -> LITERAL .)
    <               reduce using rule 85 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 85 (elemento -> LITERAL .)
    >               reduce using rule 85 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 85 (elemento -> LITERAL .)
    OR              reduce using rule 85 (elemento -> LITERAL .)
    AND             reduce using rule 85 (elemento -> LITERAL .)
    error           reduce using rule 85 (elemento -> LITERAL .)
    :               reduce using rule 85 (elemento -> LITERAL .)
    )               reduce using rule 85 (elemento -> LITERAL .)
    ;               reduce using rule 85 (elemento -> LITERAL .)
    ,               reduce using rule 85 (elemento -> LITERAL .)


state 41

    (70) aritmetica -> termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 88
    -               shift and go to state 89
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 87
    empty                          shift and go to state 90

state 42

    (57) valor -> relacional .

    OR              reduce using rule 57 (valor -> relacional .)
    AND             reduce using rule 57 (valor -> relacional .)
    error           reduce using rule 57 (valor -> relacional .)
    ,               reduce using rule 57 (valor -> relacional .)
    )               reduce using rule 57 (valor -> relacional .)
    :               reduce using rule 57 (valor -> relacional .)
    ;               reduce using rule 57 (valor -> relacional .)


state 43

    (82) elemento -> ID .

    SIM_POT         reduce using rule 82 (elemento -> ID .)
    *               reduce using rule 82 (elemento -> ID .)
    /               reduce using rule 82 (elemento -> ID .)
    %               reduce using rule 82 (elemento -> ID .)
    +               reduce using rule 82 (elemento -> ID .)
    -               reduce using rule 82 (elemento -> ID .)
    SIM_EQ          reduce using rule 82 (elemento -> ID .)
    SIM_DIF         reduce using rule 82 (elemento -> ID .)
    <               reduce using rule 82 (elemento -> ID .)
    SIM_LE          reduce using rule 82 (elemento -> ID .)
    >               reduce using rule 82 (elemento -> ID .)
    SIM_GE          reduce using rule 82 (elemento -> ID .)
    OR              reduce using rule 82 (elemento -> ID .)
    AND             reduce using rule 82 (elemento -> ID .)
    error           reduce using rule 82 (elemento -> ID .)
    :               reduce using rule 82 (elemento -> ID .)
    )               reduce using rule 82 (elemento -> ID .)
    ;               reduce using rule 82 (elemento -> ID .)
    ,               reduce using rule 82 (elemento -> ID .)


state 44

    (79) fator -> elemento . fator1
    (80) fator1 -> . empty
    (81) fator1 -> . SIM_POT elemento fator1
    (7) empty -> .

    SIM_POT         shift and go to state 92
    *               reduce using rule 7 (empty -> .)
    /               reduce using rule 7 (empty -> .)
    %               reduce using rule 7 (empty -> .)
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    fator1                         shift and go to state 91
    empty                          shift and go to state 93

state 45

    (59) valor -> FALSE .

    OR              reduce using rule 59 (valor -> FALSE .)
    AND             reduce using rule 59 (valor -> FALSE .)
    error           reduce using rule 59 (valor -> FALSE .)
    ,               reduce using rule 59 (valor -> FALSE .)
    )               reduce using rule 59 (valor -> FALSE .)
    :               reduce using rule 59 (valor -> FALSE .)
    ;               reduce using rule 59 (valor -> FALSE .)


state 46

    (60) valor -> NOT . valor
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 94
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 47

    (4) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID error [ listacmd ] .)


state 48

    (23) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 95
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 49

    (24) cmdentrada -> INPUT ( . listaidenti ) ;
    (25) cmdentrada -> INPUT ( . listaidenti error ;
    (27) cmdentrada -> INPUT ( . listaidenti ) error
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 96

state 50

    (26) cmdentrada -> INPUT error . listaidenti ) ;
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 97

state 51

    (16) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 16 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 16 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 16 (listaidenti -> ID listaindenti1 .)


state 52

    (17) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> empty .)
    )               reduce using rule 17 (listaindenti1 -> empty .)
    error           reduce using rule 17 (listaindenti1 -> empty .)


state 53

    (18) listaindenti1 -> , . listaidenti
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 98

state 54

    (32) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (33) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (34) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (35) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (36) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 100
    error           shift and go to state 99


state 55

    (10) listacmd1 -> listacmd .

    ]               reduce using rule 10 (listacmd1 -> listacmd .)
    error           reduce using rule 10 (listacmd1 -> listacmd .)


state 56

    (8) listacmd -> comando listacmd1 .

    ]               reduce using rule 8 (listacmd -> comando listacmd1 .)
    error           reduce using rule 8 (listacmd -> comando listacmd1 .)


state 57

    (9) listacmd1 -> empty .

    ]               reduce using rule 9 (listacmd1 -> empty .)
    error           reduce using rule 9 (listacmd1 -> empty .)


state 58

    (28) cmdsaida -> OUTPUT ( . listaexp ) ;
    (29) cmdsaida -> OUTPUT ( . listaexp error ;
    (31) cmdsaida -> OUTPUT ( . listaexp ) error
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 101
    listaexp                       shift and go to state 102
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 59

    (30) cmdsaida -> OUTPUT error . listaexp ) ;
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 101
    listaexp                       shift and go to state 103
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 60

    (1) programa -> DEF ID action2 : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID action2 : [ listacmd ] .)


state 61

    (5) programa -> DEF ID empty : error listacmd ] .

    $end            reduce using rule 5 (programa -> DEF ID empty : error listacmd ] .)


state 62

    (6) programa -> DEF ID empty : [ listacmd error .

    $end            reduce using rule 6 (programa -> DEF ID empty : [ listacmd error .)


state 63

    (88) elemento -> - elemento .

    SIM_POT         reduce using rule 88 (elemento -> - elemento .)
    *               reduce using rule 88 (elemento -> - elemento .)
    /               reduce using rule 88 (elemento -> - elemento .)
    %               reduce using rule 88 (elemento -> - elemento .)
    +               reduce using rule 88 (elemento -> - elemento .)
    -               reduce using rule 88 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 88 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 88 (elemento -> - elemento .)
    <               reduce using rule 88 (elemento -> - elemento .)
    SIM_LE          reduce using rule 88 (elemento -> - elemento .)
    >               reduce using rule 88 (elemento -> - elemento .)
    SIM_GE          reduce using rule 88 (elemento -> - elemento .)
    OR              reduce using rule 88 (elemento -> - elemento .)
    AND             reduce using rule 88 (elemento -> - elemento .)
    error           reduce using rule 88 (elemento -> - elemento .)
    :               reduce using rule 88 (elemento -> - elemento .)
    )               reduce using rule 88 (elemento -> - elemento .)
    ;               reduce using rule 88 (elemento -> - elemento .)
    ,               reduce using rule 88 (elemento -> - elemento .)


state 64

    (48) cmdrepeticao -> WHILE expressao error . [ listacmd ] else ;

    [               shift and go to state 104


state 65

    (47) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao : . error listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao : . [ listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao : . [ listacmd ] else error

    [               shift and go to state 106
    error           shift and go to state 105


state 66

    (87) elemento -> + elemento .

    SIM_POT         reduce using rule 87 (elemento -> + elemento .)
    *               reduce using rule 87 (elemento -> + elemento .)
    /               reduce using rule 87 (elemento -> + elemento .)
    %               reduce using rule 87 (elemento -> + elemento .)
    +               reduce using rule 87 (elemento -> + elemento .)
    -               reduce using rule 87 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 87 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 87 (elemento -> + elemento .)
    <               reduce using rule 87 (elemento -> + elemento .)
    SIM_LE          reduce using rule 87 (elemento -> + elemento .)
    >               reduce using rule 87 (elemento -> + elemento .)
    SIM_GE          reduce using rule 87 (elemento -> + elemento .)
    OR              reduce using rule 87 (elemento -> + elemento .)
    AND             reduce using rule 87 (elemento -> + elemento .)
    error           reduce using rule 87 (elemento -> + elemento .)
    :               reduce using rule 87 (elemento -> + elemento .)
    )               reduce using rule 87 (elemento -> + elemento .)
    ;               reduce using rule 87 (elemento -> + elemento .)
    ,               reduce using rule 87 (elemento -> + elemento .)


state 67

    (74) termo -> fator termo1 .

    +               reduce using rule 74 (termo -> fator termo1 .)
    -               reduce using rule 74 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 74 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 74 (termo -> fator termo1 .)
    <               reduce using rule 74 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 74 (termo -> fator termo1 .)
    >               reduce using rule 74 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 74 (termo -> fator termo1 .)
    OR              reduce using rule 74 (termo -> fator termo1 .)
    AND             reduce using rule 74 (termo -> fator termo1 .)
    error           reduce using rule 74 (termo -> fator termo1 .)
    ,               reduce using rule 74 (termo -> fator termo1 .)
    )               reduce using rule 74 (termo -> fator termo1 .)
    :               reduce using rule 74 (termo -> fator termo1 .)
    ;               reduce using rule 74 (termo -> fator termo1 .)


state 68

    (78) termo1 -> % . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 44
    fator                          shift and go to state 107

state 69

    (76) termo1 -> * . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 44
    fator                          shift and go to state 108

state 70

    (77) termo1 -> / . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 44
    fator                          shift and go to state 109

state 71

    (75) termo1 -> empty .

    +               reduce using rule 75 (termo1 -> empty .)
    -               reduce using rule 75 (termo1 -> empty .)
    SIM_EQ          reduce using rule 75 (termo1 -> empty .)
    SIM_DIF         reduce using rule 75 (termo1 -> empty .)
    <               reduce using rule 75 (termo1 -> empty .)
    SIM_LE          reduce using rule 75 (termo1 -> empty .)
    >               reduce using rule 75 (termo1 -> empty .)
    SIM_GE          reduce using rule 75 (termo1 -> empty .)
    OR              reduce using rule 75 (termo1 -> empty .)
    AND             reduce using rule 75 (termo1 -> empty .)
    error           reduce using rule 75 (termo1 -> empty .)
    :               reduce using rule 75 (termo1 -> empty .)
    )               reduce using rule 75 (termo1 -> empty .)
    ;               reduce using rule 75 (termo1 -> empty .)
    ,               reduce using rule 75 (termo1 -> empty .)


state 72

    (64) operador -> SIM_EQ .

    ID              reduce using rule 64 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 64 (operador -> SIM_EQ .)
    REAL            reduce using rule 64 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 64 (operador -> SIM_EQ .)
    (               reduce using rule 64 (operador -> SIM_EQ .)
    +               reduce using rule 64 (operador -> SIM_EQ .)
    -               reduce using rule 64 (operador -> SIM_EQ .)


state 73

    (62) relacional1 -> operador . aritmetica
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    aritmetica                     shift and go to state 110
    termo                          shift and go to state 41
    elemento                       shift and go to state 44

state 74

    (69) operador -> SIM_GE .

    ID              reduce using rule 69 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 69 (operador -> SIM_GE .)
    REAL            reduce using rule 69 (operador -> SIM_GE .)
    LITERAL         reduce using rule 69 (operador -> SIM_GE .)
    (               reduce using rule 69 (operador -> SIM_GE .)
    +               reduce using rule 69 (operador -> SIM_GE .)
    -               reduce using rule 69 (operador -> SIM_GE .)


state 75

    (65) operador -> SIM_DIF .

    ID              reduce using rule 65 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 65 (operador -> SIM_DIF .)
    REAL            reduce using rule 65 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 65 (operador -> SIM_DIF .)
    (               reduce using rule 65 (operador -> SIM_DIF .)
    +               reduce using rule 65 (operador -> SIM_DIF .)
    -               reduce using rule 65 (operador -> SIM_DIF .)


state 76

    (61) relacional -> aritmetica relacional1 .

    OR              reduce using rule 61 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 61 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 61 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 61 (relacional -> aritmetica relacional1 .)


state 77

    (68) operador -> > .

    ID              reduce using rule 68 (operador -> > .)
    INTEIRO         reduce using rule 68 (operador -> > .)
    REAL            reduce using rule 68 (operador -> > .)
    LITERAL         reduce using rule 68 (operador -> > .)
    (               reduce using rule 68 (operador -> > .)
    +               reduce using rule 68 (operador -> > .)
    -               reduce using rule 68 (operador -> > .)


state 78

    (66) operador -> < .

    ID              reduce using rule 66 (operador -> < .)
    INTEIRO         reduce using rule 66 (operador -> < .)
    REAL            reduce using rule 66 (operador -> < .)
    LITERAL         reduce using rule 66 (operador -> < .)
    (               reduce using rule 66 (operador -> < .)
    +               reduce using rule 66 (operador -> < .)
    -               reduce using rule 66 (operador -> < .)


state 79

    (63) relacional1 -> empty .

    OR              reduce using rule 63 (relacional1 -> empty .)
    AND             reduce using rule 63 (relacional1 -> empty .)
    error           reduce using rule 63 (relacional1 -> empty .)
    :               reduce using rule 63 (relacional1 -> empty .)
    )               reduce using rule 63 (relacional1 -> empty .)
    ;               reduce using rule 63 (relacional1 -> empty .)
    ,               reduce using rule 63 (relacional1 -> empty .)


state 80

    (67) operador -> SIM_LE .

    ID              reduce using rule 67 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 67 (operador -> SIM_LE .)
    REAL            reduce using rule 67 (operador -> SIM_LE .)
    LITERAL         reduce using rule 67 (operador -> SIM_LE .)
    (               reduce using rule 67 (operador -> SIM_LE .)
    +               reduce using rule 67 (operador -> SIM_LE .)
    -               reduce using rule 67 (operador -> SIM_LE .)


state 81

    (86) elemento -> ( expressao . )

    )               shift and go to state 111


state 82

    (55) expressao1 -> AND . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 112
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 83

    (56) expressao1 -> error . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 113
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 84

    (52) expressao -> valor expressao1 .

    ,               reduce using rule 52 (expressao -> valor expressao1 .)
    error           reduce using rule 52 (expressao -> valor expressao1 .)
    )               reduce using rule 52 (expressao -> valor expressao1 .)
    ;               reduce using rule 52 (expressao -> valor expressao1 .)
    :               reduce using rule 52 (expressao -> valor expressao1 .)


state 85

    (54) expressao1 -> OR . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 114
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 86

    (53) expressao1 -> empty .

    :               reduce using rule 53 (expressao1 -> empty .)
    error           reduce using rule 53 (expressao1 -> empty .)
    )               reduce using rule 53 (expressao1 -> empty .)
    ;               reduce using rule 53 (expressao1 -> empty .)
    ,               reduce using rule 53 (expressao1 -> empty .)


state 87

    (70) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 70 (aritmetica -> termo aritmetica1 .)


state 88

    (72) aritmetica1 -> + . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 115
    elemento                       shift and go to state 44

state 89

    (73) aritmetica1 -> - . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 116
    elemento                       shift and go to state 44

state 90

    (71) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 71 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 71 (aritmetica1 -> empty .)
    <               reduce using rule 71 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 71 (aritmetica1 -> empty .)
    >               reduce using rule 71 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 71 (aritmetica1 -> empty .)
    OR              reduce using rule 71 (aritmetica1 -> empty .)
    AND             reduce using rule 71 (aritmetica1 -> empty .)
    error           reduce using rule 71 (aritmetica1 -> empty .)
    :               reduce using rule 71 (aritmetica1 -> empty .)
    )               reduce using rule 71 (aritmetica1 -> empty .)
    ;               reduce using rule 71 (aritmetica1 -> empty .)
    ,               reduce using rule 71 (aritmetica1 -> empty .)


state 91

    (79) fator -> elemento fator1 .

    *               reduce using rule 79 (fator -> elemento fator1 .)
    /               reduce using rule 79 (fator -> elemento fator1 .)
    %               reduce using rule 79 (fator -> elemento fator1 .)
    +               reduce using rule 79 (fator -> elemento fator1 .)
    -               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 79 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 79 (fator -> elemento fator1 .)
    <               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 79 (fator -> elemento fator1 .)
    >               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 79 (fator -> elemento fator1 .)
    OR              reduce using rule 79 (fator -> elemento fator1 .)
    AND             reduce using rule 79 (fator -> elemento fator1 .)
    error           reduce using rule 79 (fator -> elemento fator1 .)
    :               reduce using rule 79 (fator -> elemento fator1 .)
    )               reduce using rule 79 (fator -> elemento fator1 .)
    ;               reduce using rule 79 (fator -> elemento fator1 .)
    ,               reduce using rule 79 (fator -> elemento fator1 .)


state 92

    (81) fator1 -> SIM_POT . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    elemento                       shift and go to state 117

state 93

    (80) fator1 -> empty .

    *               reduce using rule 80 (fator1 -> empty .)
    /               reduce using rule 80 (fator1 -> empty .)
    %               reduce using rule 80 (fator1 -> empty .)
    +               reduce using rule 80 (fator1 -> empty .)
    -               reduce using rule 80 (fator1 -> empty .)
    SIM_EQ          reduce using rule 80 (fator1 -> empty .)
    SIM_DIF         reduce using rule 80 (fator1 -> empty .)
    <               reduce using rule 80 (fator1 -> empty .)
    SIM_LE          reduce using rule 80 (fator1 -> empty .)
    >               reduce using rule 80 (fator1 -> empty .)
    SIM_GE          reduce using rule 80 (fator1 -> empty .)
    OR              reduce using rule 80 (fator1 -> empty .)
    AND             reduce using rule 80 (fator1 -> empty .)
    error           reduce using rule 80 (fator1 -> empty .)
    :               reduce using rule 80 (fator1 -> empty .)
    )               reduce using rule 80 (fator1 -> empty .)
    ;               reduce using rule 80 (fator1 -> empty .)
    ,               reduce using rule 80 (fator1 -> empty .)


state 94

    (60) valor -> NOT valor .

    OR              reduce using rule 60 (valor -> NOT valor .)
    AND             reduce using rule 60 (valor -> NOT valor .)
    error           reduce using rule 60 (valor -> NOT valor .)
    ,               reduce using rule 60 (valor -> NOT valor .)
    )               reduce using rule 60 (valor -> NOT valor .)
    :               reduce using rule 60 (valor -> NOT valor .)
    ;               reduce using rule 60 (valor -> NOT valor .)


state 95

    (23) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 118


state 96

    (24) cmdentrada -> INPUT ( listaidenti . ) ;
    (25) cmdentrada -> INPUT ( listaidenti . error ;
    (27) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 119
    error           shift and go to state 120


state 97

    (26) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 121


state 98

    (18) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 18 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 18 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 18 (listaindenti1 -> , listaidenti .)


state 99

    (33) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 122


state 100

    (32) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (34) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (35) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (36) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 124
    error           shift and go to state 123


state 101

    (19) listaexp -> expressao . listaexp1
    (20) listaexp1 -> . , listaexp
    (21) listaexp1 -> . empty
    (22) listaexp1 -> . error listaexp
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 126
    error           shift and go to state 127
    )               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    listaexp1                      shift and go to state 125
    empty                          shift and go to state 128

state 102

    (28) cmdsaida -> OUTPUT ( listaexp . ) ;
    (29) cmdsaida -> OUTPUT ( listaexp . error ;
    (31) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 129
    error           shift and go to state 130


state 103

    (30) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 131


state 104

    (48) cmdrepeticao -> WHILE expressao error [ . listacmd ] else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 132
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 105

    (49) cmdrepeticao -> WHILE expressao : error . listacmd ] else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 133
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 106

    (47) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao : [ . listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao : [ . listacmd ] else error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 134
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 107

    (78) termo1 -> % fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 68
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 135
    empty                          shift and go to state 71

state 108

    (76) termo1 -> * fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 68
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 136
    empty                          shift and go to state 71

state 109

    (77) termo1 -> / fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 69
    /               shift and go to state 70
    %               shift and go to state 68
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 137
    empty                          shift and go to state 71

state 110

    (62) relacional1 -> operador aritmetica .

    OR              reduce using rule 62 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 62 (relacional1 -> operador aritmetica .)
    error           reduce using rule 62 (relacional1 -> operador aritmetica .)
    :               reduce using rule 62 (relacional1 -> operador aritmetica .)
    )               reduce using rule 62 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 62 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 62 (relacional1 -> operador aritmetica .)


state 111

    (86) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 86 (elemento -> ( expressao ) .)
    *               reduce using rule 86 (elemento -> ( expressao ) .)
    /               reduce using rule 86 (elemento -> ( expressao ) .)
    %               reduce using rule 86 (elemento -> ( expressao ) .)
    +               reduce using rule 86 (elemento -> ( expressao ) .)
    -               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 86 (elemento -> ( expressao ) .)
    <               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 86 (elemento -> ( expressao ) .)
    >               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 86 (elemento -> ( expressao ) .)
    OR              reduce using rule 86 (elemento -> ( expressao ) .)
    AND             reduce using rule 86 (elemento -> ( expressao ) .)
    error           reduce using rule 86 (elemento -> ( expressao ) .)
    :               reduce using rule 86 (elemento -> ( expressao ) .)
    )               reduce using rule 86 (elemento -> ( expressao ) .)
    ;               reduce using rule 86 (elemento -> ( expressao ) .)
    ,               reduce using rule 86 (elemento -> ( expressao ) .)


state 112

    (55) expressao1 -> AND valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 85
    AND             shift and go to state 82
    error           shift and go to state 83
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 138
    empty                          shift and go to state 86

state 113

    (56) expressao1 -> error valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 85
    AND             shift and go to state 82
    error           shift and go to state 83
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 139
    empty                          shift and go to state 86

state 114

    (54) expressao1 -> OR valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 85
    AND             shift and go to state 82
    error           shift and go to state 83
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 140
    empty                          shift and go to state 86

state 115

    (72) aritmetica1 -> + termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 88
    -               shift and go to state 89
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 141
    empty                          shift and go to state 90

state 116

    (73) aritmetica1 -> - termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 88
    -               shift and go to state 89
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 142
    empty                          shift and go to state 90

state 117

    (81) fator1 -> SIM_POT elemento . fator1
    (80) fator1 -> . empty
    (81) fator1 -> . SIM_POT elemento fator1
    (7) empty -> .

    SIM_POT         shift and go to state 92
    *               reduce using rule 7 (empty -> .)
    /               reduce using rule 7 (empty -> .)
    %               reduce using rule 7 (empty -> .)
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    fator1                         shift and go to state 143
    empty                          shift and go to state 93

state 118

    (23) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 119

    (24) cmdentrada -> INPUT ( listaidenti ) . ;
    (27) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 145
    error           shift and go to state 144


state 120

    (25) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 146


state 121

    (26) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 147


state 122

    (33) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 148
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 123

    (34) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 149
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 124

    (32) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (35) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (36) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 150
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 125

    (19) listaexp -> expressao listaexp1 .

    )               reduce using rule 19 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 19 (listaexp -> expressao listaexp1 .)


state 126

    (20) listaexp1 -> , . listaexp
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 101
    listaexp                       shift and go to state 151
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 127

    (22) listaexp1 -> error . listaexp
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 101
    listaexp                       shift and go to state 152
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 128

    (21) listaexp1 -> empty .

    )               reduce using rule 21 (listaexp1 -> empty .)
    error           reduce using rule 21 (listaexp1 -> empty .)


state 129

    (28) cmdsaida -> OUTPUT ( listaexp ) . ;
    (31) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 154
    error           shift and go to state 153


state 130

    (29) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 155


state 131

    (30) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 156


state 132

    (48) cmdrepeticao -> WHILE expressao error [ listacmd . ] else ;

    ]               shift and go to state 157


state 133

    (49) cmdrepeticao -> WHILE expressao : error listacmd . ] else ;

    ]               shift and go to state 158


state 134

    (47) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;
    (50) cmdrepeticao -> WHILE expressao : [ listacmd . error else ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd . ] else error

    ]               shift and go to state 160
    error           shift and go to state 159


state 135

    (78) termo1 -> % fator termo1 .

    +               reduce using rule 78 (termo1 -> % fator termo1 .)
    -               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 78 (termo1 -> % fator termo1 .)
    <               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 78 (termo1 -> % fator termo1 .)
    >               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 78 (termo1 -> % fator termo1 .)
    OR              reduce using rule 78 (termo1 -> % fator termo1 .)
    AND             reduce using rule 78 (termo1 -> % fator termo1 .)
    error           reduce using rule 78 (termo1 -> % fator termo1 .)
    :               reduce using rule 78 (termo1 -> % fator termo1 .)
    )               reduce using rule 78 (termo1 -> % fator termo1 .)
    ;               reduce using rule 78 (termo1 -> % fator termo1 .)
    ,               reduce using rule 78 (termo1 -> % fator termo1 .)


state 136

    (76) termo1 -> * fator termo1 .

    +               reduce using rule 76 (termo1 -> * fator termo1 .)
    -               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 76 (termo1 -> * fator termo1 .)
    <               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 76 (termo1 -> * fator termo1 .)
    >               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 76 (termo1 -> * fator termo1 .)
    OR              reduce using rule 76 (termo1 -> * fator termo1 .)
    AND             reduce using rule 76 (termo1 -> * fator termo1 .)
    error           reduce using rule 76 (termo1 -> * fator termo1 .)
    :               reduce using rule 76 (termo1 -> * fator termo1 .)
    )               reduce using rule 76 (termo1 -> * fator termo1 .)
    ;               reduce using rule 76 (termo1 -> * fator termo1 .)
    ,               reduce using rule 76 (termo1 -> * fator termo1 .)


state 137

    (77) termo1 -> / fator termo1 .

    +               reduce using rule 77 (termo1 -> / fator termo1 .)
    -               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 77 (termo1 -> / fator termo1 .)
    <               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 77 (termo1 -> / fator termo1 .)
    >               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 77 (termo1 -> / fator termo1 .)
    OR              reduce using rule 77 (termo1 -> / fator termo1 .)
    AND             reduce using rule 77 (termo1 -> / fator termo1 .)
    error           reduce using rule 77 (termo1 -> / fator termo1 .)
    :               reduce using rule 77 (termo1 -> / fator termo1 .)
    )               reduce using rule 77 (termo1 -> / fator termo1 .)
    ;               reduce using rule 77 (termo1 -> / fator termo1 .)
    ,               reduce using rule 77 (termo1 -> / fator termo1 .)


state 138

    (55) expressao1 -> AND valor expressao1 .

    :               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 55 (expressao1 -> AND valor expressao1 .)


state 139

    (56) expressao1 -> error valor expressao1 .

    :               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 56 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 56 (expressao1 -> error valor expressao1 .)


state 140

    (54) expressao1 -> OR valor expressao1 .

    :               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 54 (expressao1 -> OR valor expressao1 .)


state 141

    (72) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)


state 142

    (73) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)


state 143

    (81) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)


state 144

    (27) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)


state 145

    (24) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 146

    (25) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)


state 147

    (26) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)


state 148

    (33) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 161


state 149

    (34) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 162


state 150

    (32) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (35) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (36) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 164
    error           shift and go to state 163


state 151

    (20) listaexp1 -> , listaexp .

    )               reduce using rule 20 (listaexp1 -> , listaexp .)
    error           reduce using rule 20 (listaexp1 -> , listaexp .)


state 152

    (22) listaexp1 -> error listaexp .

    )               reduce using rule 22 (listaexp1 -> error listaexp .)
    error           reduce using rule 22 (listaexp1 -> error listaexp .)


state 153

    (31) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 154

    (28) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 155

    (29) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 156

    (30) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 157

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 165

state 158

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 168

state 159

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 169

state 160

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] . else error
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 170

state 161

    (33) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 171
    empty                          shift and go to state 173

state 162

    (34) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 174
    empty                          shift and go to state 173

state 163

    (35) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 175
    empty                          shift and go to state 173

state 164

    (32) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (36) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 176
    empty                          shift and go to state 173

state 165

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] else . ;

    ;               shift and go to state 177


state 166

    (43) else -> ELSE . : [ listacmd ]
    (44) else -> ELSE . error [ listacmd ]
    (45) else -> ELSE . : error listacmd ]
    (46) else -> ELSE . : [ listacmd error

    :               shift and go to state 179
    error           shift and go to state 178


state 167

    (42) else -> empty .

    ;               reduce using rule 42 (else -> empty .)
    error           reduce using rule 42 (else -> empty .)


state 168

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] else . ;

    ;               shift and go to state 180


state 169

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error else . ;

    ;               shift and go to state 181


state 170

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else . error

    ;               shift and go to state 183
    error           shift and go to state 182


state 171

    (33) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 184

state 172

    (38) elif -> ELIF . expressao : [ listacmd ] elif
    (39) elif -> ELIF . expressao error [ listacmd ] elif
    (40) elif -> ELIF . expressao : error listacmd ] elif
    (41) elif -> ELIF . expressao : [ listacmd error elif
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 185
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 173

    (37) elif -> empty .

    ELSE            reduce using rule 37 (elif -> empty .)
    ;               reduce using rule 37 (elif -> empty .)
    error           reduce using rule 37 (elif -> empty .)


state 174

    (34) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 186

state 175

    (35) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 187

state 176

    (32) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (36) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 166
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    empty                          shift and go to state 167
    else                           shift and go to state 188

state 177

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .

    INPUT           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    OUTPUT          reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    IF              reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    WHILE           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ID              reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ]               reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    error           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)


state 178

    (44) else -> ELSE error . [ listacmd ]

    [               shift and go to state 189


state 179

    (43) else -> ELSE : . [ listacmd ]
    (45) else -> ELSE : . error listacmd ]
    (46) else -> ELSE : . [ listacmd error

    [               shift and go to state 191
    error           shift and go to state 190


state 180

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] else ; .

    INPUT           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    OUTPUT          reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    IF              reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    WHILE           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ID              reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ]               reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    error           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)


state 181

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error else ; .

    INPUT           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    OUTPUT          reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    IF              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    WHILE           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ID              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ]               reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    error           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)


state 182

    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else error .

    INPUT           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    OUTPUT          reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    IF              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    WHILE           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ID              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ]               reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    error           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)


state 183

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 184

    (33) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 192


state 185

    (38) elif -> ELIF expressao . : [ listacmd ] elif
    (39) elif -> ELIF expressao . error [ listacmd ] elif
    (40) elif -> ELIF expressao . : error listacmd ] elif
    (41) elif -> ELIF expressao . : [ listacmd error elif

    :               shift and go to state 194
    error           shift and go to state 193


state 186

    (34) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 195


state 187

    (35) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 196


state 188

    (32) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (36) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 198
    error           shift and go to state 197


state 189

    (44) else -> ELSE error [ . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 199
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 190

    (45) else -> ELSE : error . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 200
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 191

    (43) else -> ELSE : [ . listacmd ]
    (46) else -> ELSE : [ . listacmd error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 201
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 192

    (33) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 193

    (39) elif -> ELIF expressao error . [ listacmd ] elif

    [               shift and go to state 202


state 194

    (38) elif -> ELIF expressao : . [ listacmd ] elif
    (40) elif -> ELIF expressao : . error listacmd ] elif
    (41) elif -> ELIF expressao : . [ listacmd error elif

    [               shift and go to state 204
    error           shift and go to state 203


state 195

    (34) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 196

    (35) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 197

    (36) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 198

    (32) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 199

    (44) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 205


state 200

    (45) else -> ELSE : error listacmd . ]

    ]               shift and go to state 206


state 201

    (43) else -> ELSE : [ listacmd . ]
    (46) else -> ELSE : [ listacmd . error

    ]               shift and go to state 208
    error           shift and go to state 207


state 202

    (39) elif -> ELIF expressao error [ . listacmd ] elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 209
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 203

    (40) elif -> ELIF expressao : error . listacmd ] elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 210
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 204

    (38) elif -> ELIF expressao : [ . listacmd ] elif
    (41) elif -> ELIF expressao : [ . listacmd error elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    WHILE           shift and go to state 16
    ID              shift and go to state 22

    listaidenti                    shift and go to state 20
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 14
    cmdentrada                     shift and go to state 15
    listacmd                       shift and go to state 211
    cmdsaida                       shift and go to state 19
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 18

state 205

    (44) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 44 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 44 (else -> ELSE error [ listacmd ] .)


state 206

    (45) else -> ELSE : error listacmd ] .

    ;               reduce using rule 45 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 45 (else -> ELSE : error listacmd ] .)


state 207

    (46) else -> ELSE : [ listacmd error .

    ;               reduce using rule 46 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 46 (else -> ELSE : [ listacmd error .)


state 208

    (43) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 43 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 43 (else -> ELSE : [ listacmd ] .)


state 209

    (39) elif -> ELIF expressao error [ listacmd . ] elif

    ]               shift and go to state 212


state 210

    (40) elif -> ELIF expressao : error listacmd . ] elif

    ]               shift and go to state 213


state 211

    (38) elif -> ELIF expressao : [ listacmd . ] elif
    (41) elif -> ELIF expressao : [ listacmd . error elif

    ]               shift and go to state 215
    error           shift and go to state 214


state 212

    (39) elif -> ELIF expressao error [ listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 216
    empty                          shift and go to state 173

state 213

    (40) elif -> ELIF expressao : error listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 217
    empty                          shift and go to state 173

state 214

    (41) elif -> ELIF expressao : [ listacmd error . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 218
    empty                          shift and go to state 173

state 215

    (38) elif -> ELIF expressao : [ listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 172
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 219
    empty                          shift and go to state 173

state 216

    (39) elif -> ELIF expressao error [ listacmd ] elif .

    ELSE            reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)
    ;               reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)
    error           reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)


state 217

    (40) elif -> ELIF expressao : error listacmd ] elif .

    ELSE            reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)
    ;               reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)
    error           reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)


state 218

    (41) elif -> ELIF expressao : [ listacmd error elif .

    ELSE            reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)
    ;               reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)
    error           reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)


state 219

    (38) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 39 resolved as shift
WARNING: shift/reduce conflict for error in state 101 resolved as shift
WARNING: shift/reduce conflict for error in state 112 resolved as shift
WARNING: shift/reduce conflict for error in state 113 resolved as shift
WARNING: shift/reduce conflict for error in state 114 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (action2 -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 4
