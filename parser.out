Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMBOLO
    RESERVADO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID action2 : [ listacmd ]
Rule 2     programa -> empty
Rule 3     action2 -> <empty>
Rule 4     programa -> DEF ID action2 error [ listacmd ]
Rule 5     programa -> DEF ID action2 : error listacmd ]
Rule 6     programa -> DEF ID action2 : [ listacmd error
Rule 7     programa -> DEF
Rule 8     programa -> DEF ID
Rule 9     programa -> DEF ID action2 :
Rule 10    programa -> DEF ID action2 : [
Rule 11    programa -> DEF ID action2 : [ listacmd
Rule 12    empty -> <empty>
Rule 13    listacmd -> comando listacmd1
Rule 14    listacmd1 -> empty
Rule 15    listacmd1 -> listacmd
Rule 16    comando -> cmdatribui
Rule 17    comando -> cmdentrada
Rule 18    comando -> cmdsaida
Rule 19    comando -> cmdselecao
Rule 20    comando -> cmdrepeticao
Rule 21    listaidenti -> ID listaindenti1
Rule 22    listaindenti1 -> empty
Rule 23    listaindenti1 -> , listaidenti
Rule 24    listaexp -> expressao listaexp1
Rule 25    listaexp1 -> , action7 listaexp
Rule 26    listaexp1 -> empty action7
Rule 27    action7 -> <empty>
Rule 28    listaexp1 -> error action7 listaexp
Rule 29    cmdatribui -> listaidenti SIM_ATTR expressao action4 ;
Rule 30    action4 -> <empty>
Rule 31    cmdentrada -> INPUT ( listaidenti action6 ) ;
Rule 32    action6 -> <empty>
Rule 33    cmdentrada -> INPUT ( listaidenti action6 error ;
Rule 34    cmdentrada -> INPUT error listaidenti action6 ) ;
Rule 35    cmdentrada -> INPUT ( listaidenti action6 ) error
Rule 36    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 37    cmdsaida -> OUTPUT ( listaexp error ;
Rule 38    cmdsaida -> OUTPUT error listaexp ) ;
Rule 39    cmdsaida -> OUTPUT ( listaexp ) error
Rule 40    cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ;
Rule 41    action8 -> <empty>
Rule 42    action9 -> <empty>
Rule 43    cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ;
Rule 44    cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ;
Rule 45    cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ;
Rule 46    cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error
Rule 47    elif -> empty
Rule 48    elif -> action10 ELIF expressao action11 : [ listacmd ] elif
Rule 49    action10 -> <empty>
Rule 50    action11 -> <empty>
Rule 51    elif -> action10 ELIF expressao action11 error [ listacmd ] elif
Rule 52    elif -> action10 ELIF expressao action11 : error listacmd ] elif
Rule 53    elif -> action10 ELIF expressao action11 : [ listacmd error elif
Rule 54    else -> empty
Rule 55    else -> action12 ELSE : [ listacmd ]
Rule 56    action12 -> <empty>
Rule 57    else -> ELSE error [ listacmd ]
Rule 58    else -> ELSE : error listacmd ]
Rule 59    else -> ELSE : [ listacmd error
Rule 60    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ;
Rule 61    action13 -> <empty>
Rule 62    action14 -> <empty>
Rule 63    action15 -> <empty>
Rule 64    cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ;
Rule 65    cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ;
Rule 66    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ;
Rule 67    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error
Rule 68    expressao -> valor expressao1
Rule 69    expressao1 -> empty
Rule 70    expressao1 -> OR valor action_16 expressao1
Rule 71    expressao1 -> AND valor action_17 expressao1
Rule 72    action_16 -> <empty>
Rule 73    action_17 -> <empty>
Rule 74    expressao1 -> error valor expressao1
Rule 75    valor -> relacional
Rule 76    valor -> TRUE action18
Rule 77    valor -> FALSE action19
Rule 78    valor -> NOT valor action20
Rule 79    action18 -> <empty>
Rule 80    action19 -> <empty>
Rule 81    action20 -> <empty>
Rule 82    relacional -> aritmetica relacional1
Rule 83    relacional1 -> operador action21 aritmetica action22
Rule 84    relacional1 -> empty
Rule 85    action21 -> <empty>
Rule 86    action22 -> <empty>
Rule 87    operador -> SIM_EQ
Rule 88    operador -> SIM_DIF
Rule 89    operador -> <
Rule 90    operador -> SIM_LE
Rule 91    operador -> >
Rule 92    operador -> SIM_GE
Rule 93    aritmetica -> termo aritmetica1
Rule 94    aritmetica1 -> empty
Rule 95    aritmetica1 -> + termo aritmetica1 p_action23
Rule 96    aritmetica1 -> - termo aritmetica1 p_action24
Rule 97    termo -> fator termo1
Rule 98    termo1 -> empty
Rule 99    termo1 -> * fator termo1 p_action25
Rule 100   termo1 -> / fator termo1 p_action26
Rule 101   termo1 -> % fator termo1 p_action27
Rule 102   fator -> elemento fator1
Rule 103   fator1 -> empty
Rule 104   fator1 -> SIM_POT elemento action28 fator1
Rule 105   action28 -> <empty>
Rule 106   elemento -> ID action29
Rule 107   elemento -> INTEIRO action30
Rule 108   elemento -> BINARIO action31
Rule 109   elemento -> OCTAL action32
Rule 110   elemento -> HEXADECIMAL action33
Rule 111   elemento -> REAL action34
Rule 112   elemento -> LITERAL action35
Rule 113   elemento -> ( expressao )
Rule 114   elemento -> + elemento
Rule 115   elemento -> - elemento action36
Rule 116   action29 -> <empty>
Rule 117   action30 -> <empty>
Rule 118   action31 -> <empty>
Rule 119   action32 -> <empty>
Rule 120   action33 -> <empty>
Rule 121   action34 -> <empty>
Rule 122   action35 -> <empty>
Rule 123   action36 -> <empty>
Rule 124   p_action23 -> <empty>
Rule 125   p_action24 -> <empty>
Rule 126   p_action25 -> <empty>
Rule 127   p_action26 -> <empty>
Rule 128   p_action27 -> <empty>

Terminals, with rules where they appear

%                    : 101
(                    : 31 33 35 36 37 39 113
)                    : 31 34 35 36 38 39 113
*                    : 99
+                    : 95 114
,                    : 23 25
-                    : 96 115
/                    : 100
:                    : 1 5 6 9 10 11 40 44 45 46 48 52 53 55 58 59 60 65 66 67
;                    : 29 31 33 34 36 37 38 40 43 44 45 60 64 65 66
<                    : 89
>                    : 91
AND                  : 71
BINARIO              : 108
DEF                  : 1 4 5 6 7 8 9 10 11
ELIF                 : 48 51 52 53
ELSE                 : 55 57 58 59
FALSE                : 77
HEXADECIMAL          : 110
ID                   : 1 4 5 6 8 9 10 11 21 106
IF                   : 40 43 44 45 46
INPUT                : 31 33 34 35
INTEIRO              : 107
LITERAL              : 112
NOT                  : 78
OCTAL                : 109
OR                   : 70
OUTPUT               : 36 37 38 39
REAL                 : 111
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 29
SIM_DIF              : 88
SIM_EQ               : 87
SIM_GE               : 92
SIM_LE               : 90
SIM_POT              : 104
TRUE                 : 76
WHILE                : 60 64 65 66 67
[                    : 1 4 6 10 11 40 43 45 46 48 51 53 55 57 59 60 64 66 67
]                    : 1 4 5 40 43 44 46 48 51 52 55 57 58 60 64 65 67
error                : 4 5 6 28 33 34 35 37 38 39 43 44 45 46 51 52 53 57 58 59 64 65 66 67 74

Nonterminals, with rules where they appear

action10             : 48 51 52 53
action11             : 48 51 52 53
action12             : 55
action13             : 60 64 65 66 67
action14             : 60 64 65 66 67
action15             : 60 64 65 66 67
action18             : 76
action19             : 77
action2              : 1 4 5 6 9 10 11
action20             : 78
action21             : 83
action22             : 83
action28             : 104
action29             : 106
action30             : 107
action31             : 108
action32             : 109
action33             : 110
action34             : 111
action35             : 112
action36             : 115
action4              : 29
action6              : 31 33 34 35
action7              : 25 26 28
action8              : 40 43 44 45 46
action9              : 40 43 44 45 46
action_16            : 70
action_17            : 71
aritmetica           : 82 83
aritmetica1          : 93 95 96
cmdatribui           : 16
cmdentrada           : 17
cmdrepeticao         : 20
cmdsaida             : 18
cmdselecao           : 19
comando              : 13
elemento             : 102 104 114 115
elif                 : 40 43 44 45 46 48 51 52 53
else                 : 40 43 44 45 46 60 64 65 66 67
empty                : 2 14 22 26 47 54 69 84 94 98 103
expressao            : 24 29 40 43 44 45 46 48 51 52 53 60 64 65 66 67 113
expressao1           : 68 70 71 74
fator                : 97 99 100 101
fator1               : 102 104
listacmd             : 1 4 5 6 11 15 40 43 44 45 46 48 51 52 53 55 57 58 59 60 64 65 66 67
listacmd1            : 13
listaexp             : 25 28 36 37 38 39
listaexp1            : 24
listaidenti          : 23 29 31 33 34 35
listaindenti1        : 21
operador             : 83
p_action23           : 95
p_action24           : 96
p_action25           : 99
p_action26           : 100
p_action27           : 101
programa             : 0
relacional           : 75
relacional1          : 82
termo                : 93 95 96
termo1               : 97 99 100 101
valor                : 68 70 71 74 78

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID action2 : [ listacmd ]
    (2) programa -> . empty
    (4) programa -> . DEF ID action2 error [ listacmd ]
    (5) programa -> . DEF ID action2 : error listacmd ]
    (6) programa -> . DEF ID action2 : [ listacmd error
    (7) programa -> . DEF
    (8) programa -> . DEF ID
    (9) programa -> . DEF ID action2 :
    (10) programa -> . DEF ID action2 : [
    (11) programa -> . DEF ID action2 : [ listacmd
    (12) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 12 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID action2 : [ listacmd ]
    (4) programa -> DEF . ID action2 error [ listacmd ]
    (5) programa -> DEF . ID action2 : error listacmd ]
    (6) programa -> DEF . ID action2 : [ listacmd error
    (7) programa -> DEF .
    (8) programa -> DEF . ID
    (9) programa -> DEF . ID action2 :
    (10) programa -> DEF . ID action2 : [
    (11) programa -> DEF . ID action2 : [ listacmd

    ID              shift and go to state 4
    $end            reduce using rule 7 (programa -> DEF .)


state 4

    (1) programa -> DEF ID . action2 : [ listacmd ]
    (4) programa -> DEF ID . action2 error [ listacmd ]
    (5) programa -> DEF ID . action2 : error listacmd ]
    (6) programa -> DEF ID . action2 : [ listacmd error
    (8) programa -> DEF ID .
    (9) programa -> DEF ID . action2 :
    (10) programa -> DEF ID . action2 : [
    (11) programa -> DEF ID . action2 : [ listacmd
    (3) action2 -> .

    $end            reduce using rule 8 (programa -> DEF ID .)
    :               reduce using rule 3 (action2 -> .)
    error           reduce using rule 3 (action2 -> .)

    action2                        shift and go to state 5

state 5

    (1) programa -> DEF ID action2 . : [ listacmd ]
    (4) programa -> DEF ID action2 . error [ listacmd ]
    (5) programa -> DEF ID action2 . : error listacmd ]
    (6) programa -> DEF ID action2 . : [ listacmd error
    (9) programa -> DEF ID action2 . :
    (10) programa -> DEF ID action2 . : [
    (11) programa -> DEF ID action2 . : [ listacmd

    :               shift and go to state 7
    error           shift and go to state 6


state 6

    (4) programa -> DEF ID action2 error . [ listacmd ]

    [               shift and go to state 8


state 7

    (1) programa -> DEF ID action2 : . [ listacmd ]
    (5) programa -> DEF ID action2 : . error listacmd ]
    (6) programa -> DEF ID action2 : . [ listacmd error
    (9) programa -> DEF ID action2 : .
    (10) programa -> DEF ID action2 : . [
    (11) programa -> DEF ID action2 : . [ listacmd

    [               shift and go to state 10
    error           shift and go to state 9
    $end            reduce using rule 9 (programa -> DEF ID action2 : .)


state 8

    (4) programa -> DEF ID action2 error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 14
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 9

    (5) programa -> DEF ID action2 : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 24
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 10

    (1) programa -> DEF ID action2 : [ . listacmd ]
    (6) programa -> DEF ID action2 : [ . listacmd error
    (10) programa -> DEF ID action2 : [ .
    (11) programa -> DEF ID action2 : [ . listacmd
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    $end            reduce using rule 10 (programa -> DEF ID action2 : [ .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 25
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 11

    (19) comando -> cmdselecao .

    INPUT           reduce using rule 19 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 19 (comando -> cmdselecao .)
    IF              reduce using rule 19 (comando -> cmdselecao .)
    WHILE           reduce using rule 19 (comando -> cmdselecao .)
    ID              reduce using rule 19 (comando -> cmdselecao .)
    ]               reduce using rule 19 (comando -> cmdselecao .)
    error           reduce using rule 19 (comando -> cmdselecao .)
    $end            reduce using rule 19 (comando -> cmdselecao .)


state 12

    (17) comando -> cmdentrada .

    INPUT           reduce using rule 17 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 17 (comando -> cmdentrada .)
    IF              reduce using rule 17 (comando -> cmdentrada .)
    WHILE           reduce using rule 17 (comando -> cmdentrada .)
    ID              reduce using rule 17 (comando -> cmdentrada .)
    ]               reduce using rule 17 (comando -> cmdentrada .)
    error           reduce using rule 17 (comando -> cmdentrada .)
    $end            reduce using rule 17 (comando -> cmdentrada .)


state 13

    (60) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> WHILE . action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE . action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd ] action15 else error
    (61) action13 -> .

    TRUE            reduce using rule 61 (action13 -> .)
    FALSE           reduce using rule 61 (action13 -> .)
    NOT             reduce using rule 61 (action13 -> .)
    ID              reduce using rule 61 (action13 -> .)
    INTEIRO         reduce using rule 61 (action13 -> .)
    BINARIO         reduce using rule 61 (action13 -> .)
    OCTAL           reduce using rule 61 (action13 -> .)
    HEXADECIMAL     reduce using rule 61 (action13 -> .)
    REAL            reduce using rule 61 (action13 -> .)
    LITERAL         reduce using rule 61 (action13 -> .)
    (               reduce using rule 61 (action13 -> .)
    +               reduce using rule 61 (action13 -> .)
    -               reduce using rule 61 (action13 -> .)

    action13                       shift and go to state 26

state 14

    (4) programa -> DEF ID action2 error [ listacmd . ]

    ]               shift and go to state 27


state 15

    (16) comando -> cmdatribui .

    INPUT           reduce using rule 16 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 16 (comando -> cmdatribui .)
    IF              reduce using rule 16 (comando -> cmdatribui .)
    WHILE           reduce using rule 16 (comando -> cmdatribui .)
    ID              reduce using rule 16 (comando -> cmdatribui .)
    ]               reduce using rule 16 (comando -> cmdatribui .)
    error           reduce using rule 16 (comando -> cmdatribui .)
    $end            reduce using rule 16 (comando -> cmdatribui .)


state 16

    (18) comando -> cmdsaida .

    INPUT           reduce using rule 18 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 18 (comando -> cmdsaida .)
    IF              reduce using rule 18 (comando -> cmdsaida .)
    WHILE           reduce using rule 18 (comando -> cmdsaida .)
    ID              reduce using rule 18 (comando -> cmdsaida .)
    ]               reduce using rule 18 (comando -> cmdsaida .)
    error           reduce using rule 18 (comando -> cmdsaida .)
    $end            reduce using rule 18 (comando -> cmdsaida .)


state 17

    (29) cmdatribui -> listaidenti . SIM_ATTR expressao action4 ;

    SIM_ATTR        shift and go to state 28


state 18

    (31) cmdentrada -> INPUT . ( listaidenti action6 ) ;
    (33) cmdentrada -> INPUT . ( listaidenti action6 error ;
    (34) cmdentrada -> INPUT . error listaidenti action6 ) ;
    (35) cmdentrada -> INPUT . ( listaidenti action6 ) error

    (               shift and go to state 29
    error           shift and go to state 30


state 19

    (21) listaidenti -> ID . listaindenti1
    (22) listaindenti1 -> . empty
    (23) listaindenti1 -> . , listaidenti
    (12) empty -> .

    ,               shift and go to state 33
    SIM_ATTR        reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    listaindenti1                  shift and go to state 31
    empty                          shift and go to state 32

state 20

    (40) cmdselecao -> IF . expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> IF . expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF . expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> IF . expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> IF . expressao action8 : [ listacmd ] action9 elif else error
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 40
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 21

    (20) comando -> cmdrepeticao .

    INPUT           reduce using rule 20 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 20 (comando -> cmdrepeticao .)
    IF              reduce using rule 20 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 20 (comando -> cmdrepeticao .)
    ID              reduce using rule 20 (comando -> cmdrepeticao .)
    ]               reduce using rule 20 (comando -> cmdrepeticao .)
    error           reduce using rule 20 (comando -> cmdrepeticao .)
    $end            reduce using rule 20 (comando -> cmdrepeticao .)


state 22

    (13) listacmd -> comando . listacmd1
    (14) listacmd1 -> . empty
    (15) listacmd1 -> . listacmd
    (12) empty -> .
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    ]               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    $end            reduce using rule 12 (empty -> .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 54
    cmdatribui                     shift and go to state 15
    listacmd1                      shift and go to state 55
    cmdsaida                       shift and go to state 16
    empty                          shift and go to state 56
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 23

    (36) cmdsaida -> OUTPUT . ( listaexp ) ;
    (37) cmdsaida -> OUTPUT . ( listaexp error ;
    (38) cmdsaida -> OUTPUT . error listaexp ) ;
    (39) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 57
    error           shift and go to state 58


state 24

    (5) programa -> DEF ID action2 : error listacmd . ]

    ]               shift and go to state 59


state 25

    (1) programa -> DEF ID action2 : [ listacmd . ]
    (6) programa -> DEF ID action2 : [ listacmd . error
    (11) programa -> DEF ID action2 : [ listacmd .

    ]               shift and go to state 61
    error           shift and go to state 60
    $end            reduce using rule 11 (programa -> DEF ID action2 : [ listacmd .)


state 26

    (60) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> WHILE action13 . expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 . expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd ] action15 else error
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 62
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 27

    (4) programa -> DEF ID action2 error [ listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID action2 error [ listacmd ] .)


state 28

    (29) cmdatribui -> listaidenti SIM_ATTR . expressao action4 ;
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 63
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 29

    (31) cmdentrada -> INPUT ( . listaidenti action6 ) ;
    (33) cmdentrada -> INPUT ( . listaidenti action6 error ;
    (35) cmdentrada -> INPUT ( . listaidenti action6 ) error
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 64

state 30

    (34) cmdentrada -> INPUT error . listaidenti action6 ) ;
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 65

state 31

    (21) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 21 (listaidenti -> ID listaindenti1 .)


state 32

    (22) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 22 (listaindenti1 -> empty .)
    )               reduce using rule 22 (listaindenti1 -> empty .)
    error           reduce using rule 22 (listaindenti1 -> empty .)


state 33

    (23) listaindenti1 -> , . listaidenti
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 66

state 34

    (111) elemento -> REAL . action34
    (121) action34 -> .

    SIM_POT         reduce using rule 121 (action34 -> .)
    *               reduce using rule 121 (action34 -> .)
    /               reduce using rule 121 (action34 -> .)
    %               reduce using rule 121 (action34 -> .)
    +               reduce using rule 121 (action34 -> .)
    -               reduce using rule 121 (action34 -> .)
    SIM_EQ          reduce using rule 121 (action34 -> .)
    SIM_DIF         reduce using rule 121 (action34 -> .)
    <               reduce using rule 121 (action34 -> .)
    SIM_LE          reduce using rule 121 (action34 -> .)
    >               reduce using rule 121 (action34 -> .)
    SIM_GE          reduce using rule 121 (action34 -> .)
    OR              reduce using rule 121 (action34 -> .)
    AND             reduce using rule 121 (action34 -> .)
    error           reduce using rule 121 (action34 -> .)
    :               reduce using rule 121 (action34 -> .)
    ;               reduce using rule 121 (action34 -> .)
    )               reduce using rule 121 (action34 -> .)
    ,               reduce using rule 121 (action34 -> .)

    action34                       shift and go to state 67

state 35

    (109) elemento -> OCTAL . action32
    (119) action32 -> .

    SIM_POT         reduce using rule 119 (action32 -> .)
    *               reduce using rule 119 (action32 -> .)
    /               reduce using rule 119 (action32 -> .)
    %               reduce using rule 119 (action32 -> .)
    +               reduce using rule 119 (action32 -> .)
    -               reduce using rule 119 (action32 -> .)
    SIM_EQ          reduce using rule 119 (action32 -> .)
    SIM_DIF         reduce using rule 119 (action32 -> .)
    <               reduce using rule 119 (action32 -> .)
    SIM_LE          reduce using rule 119 (action32 -> .)
    >               reduce using rule 119 (action32 -> .)
    SIM_GE          reduce using rule 119 (action32 -> .)
    OR              reduce using rule 119 (action32 -> .)
    AND             reduce using rule 119 (action32 -> .)
    error           reduce using rule 119 (action32 -> .)
    :               reduce using rule 119 (action32 -> .)
    ;               reduce using rule 119 (action32 -> .)
    )               reduce using rule 119 (action32 -> .)
    ,               reduce using rule 119 (action32 -> .)

    action32                       shift and go to state 68

state 36

    (115) elemento -> - . elemento action36
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 69

state 37

    (110) elemento -> HEXADECIMAL . action33
    (120) action33 -> .

    SIM_POT         reduce using rule 120 (action33 -> .)
    *               reduce using rule 120 (action33 -> .)
    /               reduce using rule 120 (action33 -> .)
    %               reduce using rule 120 (action33 -> .)
    +               reduce using rule 120 (action33 -> .)
    -               reduce using rule 120 (action33 -> .)
    SIM_EQ          reduce using rule 120 (action33 -> .)
    SIM_DIF         reduce using rule 120 (action33 -> .)
    <               reduce using rule 120 (action33 -> .)
    SIM_LE          reduce using rule 120 (action33 -> .)
    >               reduce using rule 120 (action33 -> .)
    SIM_GE          reduce using rule 120 (action33 -> .)
    OR              reduce using rule 120 (action33 -> .)
    AND             reduce using rule 120 (action33 -> .)
    error           reduce using rule 120 (action33 -> .)
    :               reduce using rule 120 (action33 -> .)
    ;               reduce using rule 120 (action33 -> .)
    )               reduce using rule 120 (action33 -> .)
    ,               reduce using rule 120 (action33 -> .)

    action33                       shift and go to state 70

state 38

    (76) valor -> TRUE . action18
    (79) action18 -> .

    OR              reduce using rule 79 (action18 -> .)
    AND             reduce using rule 79 (action18 -> .)
    error           reduce using rule 79 (action18 -> .)
    :               reduce using rule 79 (action18 -> .)
    ;               reduce using rule 79 (action18 -> .)
    )               reduce using rule 79 (action18 -> .)
    ,               reduce using rule 79 (action18 -> .)

    action18                       shift and go to state 71

state 39

    (107) elemento -> INTEIRO . action30
    (117) action30 -> .

    SIM_POT         reduce using rule 117 (action30 -> .)
    *               reduce using rule 117 (action30 -> .)
    /               reduce using rule 117 (action30 -> .)
    %               reduce using rule 117 (action30 -> .)
    +               reduce using rule 117 (action30 -> .)
    -               reduce using rule 117 (action30 -> .)
    SIM_EQ          reduce using rule 117 (action30 -> .)
    SIM_DIF         reduce using rule 117 (action30 -> .)
    <               reduce using rule 117 (action30 -> .)
    SIM_LE          reduce using rule 117 (action30 -> .)
    >               reduce using rule 117 (action30 -> .)
    SIM_GE          reduce using rule 117 (action30 -> .)
    OR              reduce using rule 117 (action30 -> .)
    AND             reduce using rule 117 (action30 -> .)
    error           reduce using rule 117 (action30 -> .)
    :               reduce using rule 117 (action30 -> .)
    ;               reduce using rule 117 (action30 -> .)
    )               reduce using rule 117 (action30 -> .)
    ,               reduce using rule 117 (action30 -> .)

    action30                       shift and go to state 72

state 40

    (40) cmdselecao -> IF expressao . action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> IF expressao . action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF expressao . action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao . action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> IF expressao . action8 : [ listacmd ] action9 elif else error
    (41) action8 -> .

    :               reduce using rule 41 (action8 -> .)
    error           reduce using rule 41 (action8 -> .)

    action8                        shift and go to state 73

state 41

    (114) elemento -> + . elemento
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 74

state 42

    (97) termo -> fator . termo1
    (98) termo1 -> . empty
    (99) termo1 -> . * fator termo1 p_action25
    (100) termo1 -> . / fator termo1 p_action26
    (101) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 77
    /               shift and go to state 78
    %               shift and go to state 76
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 75
    empty                          shift and go to state 79

state 43

    (82) relacional -> aritmetica . relacional1
    (83) relacional1 -> . operador action21 aritmetica action22
    (84) relacional1 -> . empty
    (87) operador -> . SIM_EQ
    (88) operador -> . SIM_DIF
    (89) operador -> . <
    (90) operador -> . SIM_LE
    (91) operador -> . >
    (92) operador -> . SIM_GE
    (12) empty -> .

    SIM_EQ          shift and go to state 80
    SIM_DIF         shift and go to state 83
    <               shift and go to state 86
    SIM_LE          shift and go to state 88
    >               shift and go to state 85
    SIM_GE          shift and go to state 82
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    operador                       shift and go to state 81
    relacional1                    shift and go to state 84
    empty                          shift and go to state 87

state 44

    (113) elemento -> ( . expressao )
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 89
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 45

    (68) expressao -> valor . expressao1
    (69) expressao1 -> . empty
    (70) expressao1 -> . OR valor action_16 expressao1
    (71) expressao1 -> . AND valor action_17 expressao1
    (74) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 93
    AND             shift and go to state 90
    error           shift and go to state 91
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 92
    empty                          shift and go to state 94

state 46

    (112) elemento -> LITERAL . action35
    (122) action35 -> .

    SIM_POT         reduce using rule 122 (action35 -> .)
    *               reduce using rule 122 (action35 -> .)
    /               reduce using rule 122 (action35 -> .)
    %               reduce using rule 122 (action35 -> .)
    +               reduce using rule 122 (action35 -> .)
    -               reduce using rule 122 (action35 -> .)
    SIM_EQ          reduce using rule 122 (action35 -> .)
    SIM_DIF         reduce using rule 122 (action35 -> .)
    <               reduce using rule 122 (action35 -> .)
    SIM_LE          reduce using rule 122 (action35 -> .)
    >               reduce using rule 122 (action35 -> .)
    SIM_GE          reduce using rule 122 (action35 -> .)
    OR              reduce using rule 122 (action35 -> .)
    AND             reduce using rule 122 (action35 -> .)
    error           reduce using rule 122 (action35 -> .)
    :               reduce using rule 122 (action35 -> .)
    ;               reduce using rule 122 (action35 -> .)
    )               reduce using rule 122 (action35 -> .)
    ,               reduce using rule 122 (action35 -> .)

    action35                       shift and go to state 95

state 47

    (93) aritmetica -> termo . aritmetica1
    (94) aritmetica1 -> . empty
    (95) aritmetica1 -> . + termo aritmetica1 p_action23
    (96) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 96
    -               shift and go to state 97
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 98
    empty                          shift and go to state 99

state 48

    (75) valor -> relacional .

    OR              reduce using rule 75 (valor -> relacional .)
    AND             reduce using rule 75 (valor -> relacional .)
    error           reduce using rule 75 (valor -> relacional .)
    :               reduce using rule 75 (valor -> relacional .)
    ,               reduce using rule 75 (valor -> relacional .)
    )               reduce using rule 75 (valor -> relacional .)
    ;               reduce using rule 75 (valor -> relacional .)


state 49

    (106) elemento -> ID . action29
    (116) action29 -> .

    SIM_POT         reduce using rule 116 (action29 -> .)
    *               reduce using rule 116 (action29 -> .)
    /               reduce using rule 116 (action29 -> .)
    %               reduce using rule 116 (action29 -> .)
    +               reduce using rule 116 (action29 -> .)
    -               reduce using rule 116 (action29 -> .)
    SIM_EQ          reduce using rule 116 (action29 -> .)
    SIM_DIF         reduce using rule 116 (action29 -> .)
    <               reduce using rule 116 (action29 -> .)
    SIM_LE          reduce using rule 116 (action29 -> .)
    >               reduce using rule 116 (action29 -> .)
    SIM_GE          reduce using rule 116 (action29 -> .)
    OR              reduce using rule 116 (action29 -> .)
    AND             reduce using rule 116 (action29 -> .)
    error           reduce using rule 116 (action29 -> .)
    :               reduce using rule 116 (action29 -> .)
    ;               reduce using rule 116 (action29 -> .)
    )               reduce using rule 116 (action29 -> .)
    ,               reduce using rule 116 (action29 -> .)

    action29                       shift and go to state 100

state 50

    (77) valor -> FALSE . action19
    (80) action19 -> .

    OR              reduce using rule 80 (action19 -> .)
    AND             reduce using rule 80 (action19 -> .)
    error           reduce using rule 80 (action19 -> .)
    :               reduce using rule 80 (action19 -> .)
    ;               reduce using rule 80 (action19 -> .)
    )               reduce using rule 80 (action19 -> .)
    ,               reduce using rule 80 (action19 -> .)

    action19                       shift and go to state 101

state 51

    (102) fator -> elemento . fator1
    (103) fator1 -> . empty
    (104) fator1 -> . SIM_POT elemento action28 fator1
    (12) empty -> .

    SIM_POT         shift and go to state 103
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 102
    empty                          shift and go to state 104

state 52

    (108) elemento -> BINARIO . action31
    (118) action31 -> .

    SIM_POT         reduce using rule 118 (action31 -> .)
    *               reduce using rule 118 (action31 -> .)
    /               reduce using rule 118 (action31 -> .)
    %               reduce using rule 118 (action31 -> .)
    +               reduce using rule 118 (action31 -> .)
    -               reduce using rule 118 (action31 -> .)
    SIM_EQ          reduce using rule 118 (action31 -> .)
    SIM_DIF         reduce using rule 118 (action31 -> .)
    <               reduce using rule 118 (action31 -> .)
    SIM_LE          reduce using rule 118 (action31 -> .)
    >               reduce using rule 118 (action31 -> .)
    SIM_GE          reduce using rule 118 (action31 -> .)
    OR              reduce using rule 118 (action31 -> .)
    AND             reduce using rule 118 (action31 -> .)
    error           reduce using rule 118 (action31 -> .)
    :               reduce using rule 118 (action31 -> .)
    ;               reduce using rule 118 (action31 -> .)
    )               reduce using rule 118 (action31 -> .)
    ,               reduce using rule 118 (action31 -> .)

    action31                       shift and go to state 105

state 53

    (78) valor -> NOT . valor action20
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 106
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 54

    (15) listacmd1 -> listacmd .

    ]               reduce using rule 15 (listacmd1 -> listacmd .)
    error           reduce using rule 15 (listacmd1 -> listacmd .)
    $end            reduce using rule 15 (listacmd1 -> listacmd .)


state 55

    (13) listacmd -> comando listacmd1 .

    ]               reduce using rule 13 (listacmd -> comando listacmd1 .)
    error           reduce using rule 13 (listacmd -> comando listacmd1 .)
    $end            reduce using rule 13 (listacmd -> comando listacmd1 .)


state 56

    (14) listacmd1 -> empty .

    ]               reduce using rule 14 (listacmd1 -> empty .)
    error           reduce using rule 14 (listacmd1 -> empty .)
    $end            reduce using rule 14 (listacmd1 -> empty .)


state 57

    (36) cmdsaida -> OUTPUT ( . listaexp ) ;
    (37) cmdsaida -> OUTPUT ( . listaexp error ;
    (39) cmdsaida -> OUTPUT ( . listaexp ) error
    (24) listaexp -> . expressao listaexp1
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 108
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 58

    (38) cmdsaida -> OUTPUT error . listaexp ) ;
    (24) listaexp -> . expressao listaexp1
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 109
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 59

    (5) programa -> DEF ID action2 : error listacmd ] .

    $end            reduce using rule 5 (programa -> DEF ID action2 : error listacmd ] .)


state 60

    (6) programa -> DEF ID action2 : [ listacmd error .

    $end            reduce using rule 6 (programa -> DEF ID action2 : [ listacmd error .)


state 61

    (1) programa -> DEF ID action2 : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID action2 : [ listacmd ] .)


state 62

    (60) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> WHILE action13 expressao . action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 expressao . action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd ] action15 else error
    (62) action14 -> .

    :               reduce using rule 62 (action14 -> .)
    error           reduce using rule 62 (action14 -> .)

    action14                       shift and go to state 110

state 63

    (29) cmdatribui -> listaidenti SIM_ATTR expressao . action4 ;
    (30) action4 -> .

    ;               reduce using rule 30 (action4 -> .)

    action4                        shift and go to state 111

state 64

    (31) cmdentrada -> INPUT ( listaidenti . action6 ) ;
    (33) cmdentrada -> INPUT ( listaidenti . action6 error ;
    (35) cmdentrada -> INPUT ( listaidenti . action6 ) error
    (32) action6 -> .

    )               reduce using rule 32 (action6 -> .)
    error           reduce using rule 32 (action6 -> .)

    action6                        shift and go to state 112

state 65

    (34) cmdentrada -> INPUT error listaidenti . action6 ) ;
    (32) action6 -> .

    )               reduce using rule 32 (action6 -> .)

    action6                        shift and go to state 113

state 66

    (23) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 23 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 23 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 23 (listaindenti1 -> , listaidenti .)


state 67

    (111) elemento -> REAL action34 .

    SIM_POT         reduce using rule 111 (elemento -> REAL action34 .)
    *               reduce using rule 111 (elemento -> REAL action34 .)
    /               reduce using rule 111 (elemento -> REAL action34 .)
    %               reduce using rule 111 (elemento -> REAL action34 .)
    +               reduce using rule 111 (elemento -> REAL action34 .)
    -               reduce using rule 111 (elemento -> REAL action34 .)
    SIM_EQ          reduce using rule 111 (elemento -> REAL action34 .)
    SIM_DIF         reduce using rule 111 (elemento -> REAL action34 .)
    <               reduce using rule 111 (elemento -> REAL action34 .)
    SIM_LE          reduce using rule 111 (elemento -> REAL action34 .)
    >               reduce using rule 111 (elemento -> REAL action34 .)
    SIM_GE          reduce using rule 111 (elemento -> REAL action34 .)
    OR              reduce using rule 111 (elemento -> REAL action34 .)
    AND             reduce using rule 111 (elemento -> REAL action34 .)
    error           reduce using rule 111 (elemento -> REAL action34 .)
    :               reduce using rule 111 (elemento -> REAL action34 .)
    ;               reduce using rule 111 (elemento -> REAL action34 .)
    )               reduce using rule 111 (elemento -> REAL action34 .)
    ,               reduce using rule 111 (elemento -> REAL action34 .)


state 68

    (109) elemento -> OCTAL action32 .

    SIM_POT         reduce using rule 109 (elemento -> OCTAL action32 .)
    *               reduce using rule 109 (elemento -> OCTAL action32 .)
    /               reduce using rule 109 (elemento -> OCTAL action32 .)
    %               reduce using rule 109 (elemento -> OCTAL action32 .)
    +               reduce using rule 109 (elemento -> OCTAL action32 .)
    -               reduce using rule 109 (elemento -> OCTAL action32 .)
    SIM_EQ          reduce using rule 109 (elemento -> OCTAL action32 .)
    SIM_DIF         reduce using rule 109 (elemento -> OCTAL action32 .)
    <               reduce using rule 109 (elemento -> OCTAL action32 .)
    SIM_LE          reduce using rule 109 (elemento -> OCTAL action32 .)
    >               reduce using rule 109 (elemento -> OCTAL action32 .)
    SIM_GE          reduce using rule 109 (elemento -> OCTAL action32 .)
    OR              reduce using rule 109 (elemento -> OCTAL action32 .)
    AND             reduce using rule 109 (elemento -> OCTAL action32 .)
    error           reduce using rule 109 (elemento -> OCTAL action32 .)
    :               reduce using rule 109 (elemento -> OCTAL action32 .)
    ;               reduce using rule 109 (elemento -> OCTAL action32 .)
    )               reduce using rule 109 (elemento -> OCTAL action32 .)
    ,               reduce using rule 109 (elemento -> OCTAL action32 .)


state 69

    (115) elemento -> - elemento . action36
    (123) action36 -> .

    SIM_POT         reduce using rule 123 (action36 -> .)
    *               reduce using rule 123 (action36 -> .)
    /               reduce using rule 123 (action36 -> .)
    %               reduce using rule 123 (action36 -> .)
    +               reduce using rule 123 (action36 -> .)
    -               reduce using rule 123 (action36 -> .)
    SIM_EQ          reduce using rule 123 (action36 -> .)
    SIM_DIF         reduce using rule 123 (action36 -> .)
    <               reduce using rule 123 (action36 -> .)
    SIM_LE          reduce using rule 123 (action36 -> .)
    >               reduce using rule 123 (action36 -> .)
    SIM_GE          reduce using rule 123 (action36 -> .)
    OR              reduce using rule 123 (action36 -> .)
    AND             reduce using rule 123 (action36 -> .)
    error           reduce using rule 123 (action36 -> .)
    :               reduce using rule 123 (action36 -> .)
    ;               reduce using rule 123 (action36 -> .)
    )               reduce using rule 123 (action36 -> .)
    ,               reduce using rule 123 (action36 -> .)

    action36                       shift and go to state 114

state 70

    (110) elemento -> HEXADECIMAL action33 .

    SIM_POT         reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    *               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    /               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    %               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    +               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    -               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    SIM_EQ          reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    SIM_DIF         reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    <               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    SIM_LE          reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    >               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    SIM_GE          reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    OR              reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    AND             reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    error           reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    :               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    ;               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    )               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)
    ,               reduce using rule 110 (elemento -> HEXADECIMAL action33 .)


state 71

    (76) valor -> TRUE action18 .

    OR              reduce using rule 76 (valor -> TRUE action18 .)
    AND             reduce using rule 76 (valor -> TRUE action18 .)
    error           reduce using rule 76 (valor -> TRUE action18 .)
    :               reduce using rule 76 (valor -> TRUE action18 .)
    ,               reduce using rule 76 (valor -> TRUE action18 .)
    )               reduce using rule 76 (valor -> TRUE action18 .)
    ;               reduce using rule 76 (valor -> TRUE action18 .)


state 72

    (107) elemento -> INTEIRO action30 .

    SIM_POT         reduce using rule 107 (elemento -> INTEIRO action30 .)
    *               reduce using rule 107 (elemento -> INTEIRO action30 .)
    /               reduce using rule 107 (elemento -> INTEIRO action30 .)
    %               reduce using rule 107 (elemento -> INTEIRO action30 .)
    +               reduce using rule 107 (elemento -> INTEIRO action30 .)
    -               reduce using rule 107 (elemento -> INTEIRO action30 .)
    SIM_EQ          reduce using rule 107 (elemento -> INTEIRO action30 .)
    SIM_DIF         reduce using rule 107 (elemento -> INTEIRO action30 .)
    <               reduce using rule 107 (elemento -> INTEIRO action30 .)
    SIM_LE          reduce using rule 107 (elemento -> INTEIRO action30 .)
    >               reduce using rule 107 (elemento -> INTEIRO action30 .)
    SIM_GE          reduce using rule 107 (elemento -> INTEIRO action30 .)
    OR              reduce using rule 107 (elemento -> INTEIRO action30 .)
    AND             reduce using rule 107 (elemento -> INTEIRO action30 .)
    error           reduce using rule 107 (elemento -> INTEIRO action30 .)
    :               reduce using rule 107 (elemento -> INTEIRO action30 .)
    ;               reduce using rule 107 (elemento -> INTEIRO action30 .)
    )               reduce using rule 107 (elemento -> INTEIRO action30 .)
    ,               reduce using rule 107 (elemento -> INTEIRO action30 .)


state 73

    (40) cmdselecao -> IF expressao action8 . : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> IF expressao action8 . error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF expressao action8 . : error listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 . : [ listacmd error action9 elif else ;
    (46) cmdselecao -> IF expressao action8 . : [ listacmd ] action9 elif else error

    :               shift and go to state 116
    error           shift and go to state 115


state 74

    (114) elemento -> + elemento .

    SIM_POT         reduce using rule 114 (elemento -> + elemento .)
    *               reduce using rule 114 (elemento -> + elemento .)
    /               reduce using rule 114 (elemento -> + elemento .)
    %               reduce using rule 114 (elemento -> + elemento .)
    +               reduce using rule 114 (elemento -> + elemento .)
    -               reduce using rule 114 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 114 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 114 (elemento -> + elemento .)
    <               reduce using rule 114 (elemento -> + elemento .)
    SIM_LE          reduce using rule 114 (elemento -> + elemento .)
    >               reduce using rule 114 (elemento -> + elemento .)
    SIM_GE          reduce using rule 114 (elemento -> + elemento .)
    OR              reduce using rule 114 (elemento -> + elemento .)
    AND             reduce using rule 114 (elemento -> + elemento .)
    error           reduce using rule 114 (elemento -> + elemento .)
    :               reduce using rule 114 (elemento -> + elemento .)
    ;               reduce using rule 114 (elemento -> + elemento .)
    )               reduce using rule 114 (elemento -> + elemento .)
    ,               reduce using rule 114 (elemento -> + elemento .)


state 75

    (97) termo -> fator termo1 .

    +               reduce using rule 97 (termo -> fator termo1 .)
    -               reduce using rule 97 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 97 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 97 (termo -> fator termo1 .)
    <               reduce using rule 97 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 97 (termo -> fator termo1 .)
    >               reduce using rule 97 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 97 (termo -> fator termo1 .)
    OR              reduce using rule 97 (termo -> fator termo1 .)
    AND             reduce using rule 97 (termo -> fator termo1 .)
    error           reduce using rule 97 (termo -> fator termo1 .)
    ,               reduce using rule 97 (termo -> fator termo1 .)
    )               reduce using rule 97 (termo -> fator termo1 .)
    :               reduce using rule 97 (termo -> fator termo1 .)
    ;               reduce using rule 97 (termo -> fator termo1 .)


state 76

    (101) termo1 -> % . fator termo1 p_action27
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 117
    elemento                       shift and go to state 51

state 77

    (99) termo1 -> * . fator termo1 p_action25
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 118
    elemento                       shift and go to state 51

state 78

    (100) termo1 -> / . fator termo1 p_action26
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 119
    elemento                       shift and go to state 51

state 79

    (98) termo1 -> empty .

    +               reduce using rule 98 (termo1 -> empty .)
    -               reduce using rule 98 (termo1 -> empty .)
    SIM_EQ          reduce using rule 98 (termo1 -> empty .)
    SIM_DIF         reduce using rule 98 (termo1 -> empty .)
    <               reduce using rule 98 (termo1 -> empty .)
    SIM_LE          reduce using rule 98 (termo1 -> empty .)
    >               reduce using rule 98 (termo1 -> empty .)
    SIM_GE          reduce using rule 98 (termo1 -> empty .)
    OR              reduce using rule 98 (termo1 -> empty .)
    AND             reduce using rule 98 (termo1 -> empty .)
    error           reduce using rule 98 (termo1 -> empty .)
    :               reduce using rule 98 (termo1 -> empty .)
    ;               reduce using rule 98 (termo1 -> empty .)
    )               reduce using rule 98 (termo1 -> empty .)
    ,               reduce using rule 98 (termo1 -> empty .)


state 80

    (87) operador -> SIM_EQ .

    ID              reduce using rule 87 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 87 (operador -> SIM_EQ .)
    BINARIO         reduce using rule 87 (operador -> SIM_EQ .)
    OCTAL           reduce using rule 87 (operador -> SIM_EQ .)
    HEXADECIMAL     reduce using rule 87 (operador -> SIM_EQ .)
    REAL            reduce using rule 87 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 87 (operador -> SIM_EQ .)
    (               reduce using rule 87 (operador -> SIM_EQ .)
    +               reduce using rule 87 (operador -> SIM_EQ .)
    -               reduce using rule 87 (operador -> SIM_EQ .)


state 81

    (83) relacional1 -> operador . action21 aritmetica action22
    (85) action21 -> .

    ID              reduce using rule 85 (action21 -> .)
    INTEIRO         reduce using rule 85 (action21 -> .)
    BINARIO         reduce using rule 85 (action21 -> .)
    OCTAL           reduce using rule 85 (action21 -> .)
    HEXADECIMAL     reduce using rule 85 (action21 -> .)
    REAL            reduce using rule 85 (action21 -> .)
    LITERAL         reduce using rule 85 (action21 -> .)
    (               reduce using rule 85 (action21 -> .)
    +               reduce using rule 85 (action21 -> .)
    -               reduce using rule 85 (action21 -> .)

    action21                       shift and go to state 120

state 82

    (92) operador -> SIM_GE .

    ID              reduce using rule 92 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 92 (operador -> SIM_GE .)
    BINARIO         reduce using rule 92 (operador -> SIM_GE .)
    OCTAL           reduce using rule 92 (operador -> SIM_GE .)
    HEXADECIMAL     reduce using rule 92 (operador -> SIM_GE .)
    REAL            reduce using rule 92 (operador -> SIM_GE .)
    LITERAL         reduce using rule 92 (operador -> SIM_GE .)
    (               reduce using rule 92 (operador -> SIM_GE .)
    +               reduce using rule 92 (operador -> SIM_GE .)
    -               reduce using rule 92 (operador -> SIM_GE .)


state 83

    (88) operador -> SIM_DIF .

    ID              reduce using rule 88 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 88 (operador -> SIM_DIF .)
    BINARIO         reduce using rule 88 (operador -> SIM_DIF .)
    OCTAL           reduce using rule 88 (operador -> SIM_DIF .)
    HEXADECIMAL     reduce using rule 88 (operador -> SIM_DIF .)
    REAL            reduce using rule 88 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 88 (operador -> SIM_DIF .)
    (               reduce using rule 88 (operador -> SIM_DIF .)
    +               reduce using rule 88 (operador -> SIM_DIF .)
    -               reduce using rule 88 (operador -> SIM_DIF .)


state 84

    (82) relacional -> aritmetica relacional1 .

    OR              reduce using rule 82 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 82 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 82 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 82 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 82 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 82 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 82 (relacional -> aritmetica relacional1 .)


state 85

    (91) operador -> > .

    ID              reduce using rule 91 (operador -> > .)
    INTEIRO         reduce using rule 91 (operador -> > .)
    BINARIO         reduce using rule 91 (operador -> > .)
    OCTAL           reduce using rule 91 (operador -> > .)
    HEXADECIMAL     reduce using rule 91 (operador -> > .)
    REAL            reduce using rule 91 (operador -> > .)
    LITERAL         reduce using rule 91 (operador -> > .)
    (               reduce using rule 91 (operador -> > .)
    +               reduce using rule 91 (operador -> > .)
    -               reduce using rule 91 (operador -> > .)


state 86

    (89) operador -> < .

    ID              reduce using rule 89 (operador -> < .)
    INTEIRO         reduce using rule 89 (operador -> < .)
    BINARIO         reduce using rule 89 (operador -> < .)
    OCTAL           reduce using rule 89 (operador -> < .)
    HEXADECIMAL     reduce using rule 89 (operador -> < .)
    REAL            reduce using rule 89 (operador -> < .)
    LITERAL         reduce using rule 89 (operador -> < .)
    (               reduce using rule 89 (operador -> < .)
    +               reduce using rule 89 (operador -> < .)
    -               reduce using rule 89 (operador -> < .)


state 87

    (84) relacional1 -> empty .

    OR              reduce using rule 84 (relacional1 -> empty .)
    AND             reduce using rule 84 (relacional1 -> empty .)
    error           reduce using rule 84 (relacional1 -> empty .)
    :               reduce using rule 84 (relacional1 -> empty .)
    ;               reduce using rule 84 (relacional1 -> empty .)
    )               reduce using rule 84 (relacional1 -> empty .)
    ,               reduce using rule 84 (relacional1 -> empty .)


state 88

    (90) operador -> SIM_LE .

    ID              reduce using rule 90 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 90 (operador -> SIM_LE .)
    BINARIO         reduce using rule 90 (operador -> SIM_LE .)
    OCTAL           reduce using rule 90 (operador -> SIM_LE .)
    HEXADECIMAL     reduce using rule 90 (operador -> SIM_LE .)
    REAL            reduce using rule 90 (operador -> SIM_LE .)
    LITERAL         reduce using rule 90 (operador -> SIM_LE .)
    (               reduce using rule 90 (operador -> SIM_LE .)
    +               reduce using rule 90 (operador -> SIM_LE .)
    -               reduce using rule 90 (operador -> SIM_LE .)


state 89

    (113) elemento -> ( expressao . )

    )               shift and go to state 121


state 90

    (71) expressao1 -> AND . valor action_17 expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 122
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 91

    (74) expressao1 -> error . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 123
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 92

    (68) expressao -> valor expressao1 .

    ,               reduce using rule 68 (expressao -> valor expressao1 .)
    error           reduce using rule 68 (expressao -> valor expressao1 .)
    )               reduce using rule 68 (expressao -> valor expressao1 .)
    :               reduce using rule 68 (expressao -> valor expressao1 .)
    ;               reduce using rule 68 (expressao -> valor expressao1 .)


state 93

    (70) expressao1 -> OR . valor action_16 expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 124
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 94

    (69) expressao1 -> empty .

    :               reduce using rule 69 (expressao1 -> empty .)
    error           reduce using rule 69 (expressao1 -> empty .)
    ;               reduce using rule 69 (expressao1 -> empty .)
    )               reduce using rule 69 (expressao1 -> empty .)
    ,               reduce using rule 69 (expressao1 -> empty .)


state 95

    (112) elemento -> LITERAL action35 .

    SIM_POT         reduce using rule 112 (elemento -> LITERAL action35 .)
    *               reduce using rule 112 (elemento -> LITERAL action35 .)
    /               reduce using rule 112 (elemento -> LITERAL action35 .)
    %               reduce using rule 112 (elemento -> LITERAL action35 .)
    +               reduce using rule 112 (elemento -> LITERAL action35 .)
    -               reduce using rule 112 (elemento -> LITERAL action35 .)
    SIM_EQ          reduce using rule 112 (elemento -> LITERAL action35 .)
    SIM_DIF         reduce using rule 112 (elemento -> LITERAL action35 .)
    <               reduce using rule 112 (elemento -> LITERAL action35 .)
    SIM_LE          reduce using rule 112 (elemento -> LITERAL action35 .)
    >               reduce using rule 112 (elemento -> LITERAL action35 .)
    SIM_GE          reduce using rule 112 (elemento -> LITERAL action35 .)
    OR              reduce using rule 112 (elemento -> LITERAL action35 .)
    AND             reduce using rule 112 (elemento -> LITERAL action35 .)
    error           reduce using rule 112 (elemento -> LITERAL action35 .)
    :               reduce using rule 112 (elemento -> LITERAL action35 .)
    ;               reduce using rule 112 (elemento -> LITERAL action35 .)
    )               reduce using rule 112 (elemento -> LITERAL action35 .)
    ,               reduce using rule 112 (elemento -> LITERAL action35 .)


state 96

    (95) aritmetica1 -> + . termo aritmetica1 p_action23
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    termo                          shift and go to state 125
    elemento                       shift and go to state 51

state 97

    (96) aritmetica1 -> - . termo aritmetica1 p_action24
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    termo                          shift and go to state 126
    elemento                       shift and go to state 51

state 98

    (93) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 93 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 93 (aritmetica -> termo aritmetica1 .)


state 99

    (94) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 94 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 94 (aritmetica1 -> empty .)
    <               reduce using rule 94 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 94 (aritmetica1 -> empty .)
    >               reduce using rule 94 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 94 (aritmetica1 -> empty .)
    OR              reduce using rule 94 (aritmetica1 -> empty .)
    AND             reduce using rule 94 (aritmetica1 -> empty .)
    error           reduce using rule 94 (aritmetica1 -> empty .)
    :               reduce using rule 94 (aritmetica1 -> empty .)
    ;               reduce using rule 94 (aritmetica1 -> empty .)
    )               reduce using rule 94 (aritmetica1 -> empty .)
    ,               reduce using rule 94 (aritmetica1 -> empty .)


state 100

    (106) elemento -> ID action29 .

    SIM_POT         reduce using rule 106 (elemento -> ID action29 .)
    *               reduce using rule 106 (elemento -> ID action29 .)
    /               reduce using rule 106 (elemento -> ID action29 .)
    %               reduce using rule 106 (elemento -> ID action29 .)
    +               reduce using rule 106 (elemento -> ID action29 .)
    -               reduce using rule 106 (elemento -> ID action29 .)
    SIM_EQ          reduce using rule 106 (elemento -> ID action29 .)
    SIM_DIF         reduce using rule 106 (elemento -> ID action29 .)
    <               reduce using rule 106 (elemento -> ID action29 .)
    SIM_LE          reduce using rule 106 (elemento -> ID action29 .)
    >               reduce using rule 106 (elemento -> ID action29 .)
    SIM_GE          reduce using rule 106 (elemento -> ID action29 .)
    OR              reduce using rule 106 (elemento -> ID action29 .)
    AND             reduce using rule 106 (elemento -> ID action29 .)
    error           reduce using rule 106 (elemento -> ID action29 .)
    :               reduce using rule 106 (elemento -> ID action29 .)
    ;               reduce using rule 106 (elemento -> ID action29 .)
    )               reduce using rule 106 (elemento -> ID action29 .)
    ,               reduce using rule 106 (elemento -> ID action29 .)


state 101

    (77) valor -> FALSE action19 .

    OR              reduce using rule 77 (valor -> FALSE action19 .)
    AND             reduce using rule 77 (valor -> FALSE action19 .)
    error           reduce using rule 77 (valor -> FALSE action19 .)
    :               reduce using rule 77 (valor -> FALSE action19 .)
    ,               reduce using rule 77 (valor -> FALSE action19 .)
    )               reduce using rule 77 (valor -> FALSE action19 .)
    ;               reduce using rule 77 (valor -> FALSE action19 .)


state 102

    (102) fator -> elemento fator1 .

    *               reduce using rule 102 (fator -> elemento fator1 .)
    /               reduce using rule 102 (fator -> elemento fator1 .)
    %               reduce using rule 102 (fator -> elemento fator1 .)
    +               reduce using rule 102 (fator -> elemento fator1 .)
    -               reduce using rule 102 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 102 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 102 (fator -> elemento fator1 .)
    <               reduce using rule 102 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 102 (fator -> elemento fator1 .)
    >               reduce using rule 102 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 102 (fator -> elemento fator1 .)
    OR              reduce using rule 102 (fator -> elemento fator1 .)
    AND             reduce using rule 102 (fator -> elemento fator1 .)
    error           reduce using rule 102 (fator -> elemento fator1 .)
    :               reduce using rule 102 (fator -> elemento fator1 .)
    ;               reduce using rule 102 (fator -> elemento fator1 .)
    )               reduce using rule 102 (fator -> elemento fator1 .)
    ,               reduce using rule 102 (fator -> elemento fator1 .)


state 103

    (104) fator1 -> SIM_POT . elemento action28 fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 127

state 104

    (103) fator1 -> empty .

    *               reduce using rule 103 (fator1 -> empty .)
    /               reduce using rule 103 (fator1 -> empty .)
    %               reduce using rule 103 (fator1 -> empty .)
    +               reduce using rule 103 (fator1 -> empty .)
    -               reduce using rule 103 (fator1 -> empty .)
    SIM_EQ          reduce using rule 103 (fator1 -> empty .)
    SIM_DIF         reduce using rule 103 (fator1 -> empty .)
    <               reduce using rule 103 (fator1 -> empty .)
    SIM_LE          reduce using rule 103 (fator1 -> empty .)
    >               reduce using rule 103 (fator1 -> empty .)
    SIM_GE          reduce using rule 103 (fator1 -> empty .)
    OR              reduce using rule 103 (fator1 -> empty .)
    AND             reduce using rule 103 (fator1 -> empty .)
    error           reduce using rule 103 (fator1 -> empty .)
    :               reduce using rule 103 (fator1 -> empty .)
    ;               reduce using rule 103 (fator1 -> empty .)
    )               reduce using rule 103 (fator1 -> empty .)
    ,               reduce using rule 103 (fator1 -> empty .)


state 105

    (108) elemento -> BINARIO action31 .

    SIM_POT         reduce using rule 108 (elemento -> BINARIO action31 .)
    *               reduce using rule 108 (elemento -> BINARIO action31 .)
    /               reduce using rule 108 (elemento -> BINARIO action31 .)
    %               reduce using rule 108 (elemento -> BINARIO action31 .)
    +               reduce using rule 108 (elemento -> BINARIO action31 .)
    -               reduce using rule 108 (elemento -> BINARIO action31 .)
    SIM_EQ          reduce using rule 108 (elemento -> BINARIO action31 .)
    SIM_DIF         reduce using rule 108 (elemento -> BINARIO action31 .)
    <               reduce using rule 108 (elemento -> BINARIO action31 .)
    SIM_LE          reduce using rule 108 (elemento -> BINARIO action31 .)
    >               reduce using rule 108 (elemento -> BINARIO action31 .)
    SIM_GE          reduce using rule 108 (elemento -> BINARIO action31 .)
    OR              reduce using rule 108 (elemento -> BINARIO action31 .)
    AND             reduce using rule 108 (elemento -> BINARIO action31 .)
    error           reduce using rule 108 (elemento -> BINARIO action31 .)
    :               reduce using rule 108 (elemento -> BINARIO action31 .)
    ;               reduce using rule 108 (elemento -> BINARIO action31 .)
    )               reduce using rule 108 (elemento -> BINARIO action31 .)
    ,               reduce using rule 108 (elemento -> BINARIO action31 .)


state 106

    (78) valor -> NOT valor . action20
    (81) action20 -> .

    OR              reduce using rule 81 (action20 -> .)
    AND             reduce using rule 81 (action20 -> .)
    error           reduce using rule 81 (action20 -> .)
    :               reduce using rule 81 (action20 -> .)
    ;               reduce using rule 81 (action20 -> .)
    )               reduce using rule 81 (action20 -> .)
    ,               reduce using rule 81 (action20 -> .)

    action20                       shift and go to state 128

state 107

    (24) listaexp -> expressao . listaexp1
    (25) listaexp1 -> . , action7 listaexp
    (26) listaexp1 -> . empty action7
    (28) listaexp1 -> . error action7 listaexp
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 130
    error           shift and go to state 131
    )               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    listaexp1                      shift and go to state 129
    empty                          shift and go to state 132

state 108

    (36) cmdsaida -> OUTPUT ( listaexp . ) ;
    (37) cmdsaida -> OUTPUT ( listaexp . error ;
    (39) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 133
    error           shift and go to state 134


state 109

    (38) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 135


state 110

    (60) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> WHILE action13 expressao action14 . error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 expressao action14 . : error listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd ] action15 else error

    :               shift and go to state 137
    error           shift and go to state 136


state 111

    (29) cmdatribui -> listaidenti SIM_ATTR expressao action4 . ;

    ;               shift and go to state 138


state 112

    (31) cmdentrada -> INPUT ( listaidenti action6 . ) ;
    (33) cmdentrada -> INPUT ( listaidenti action6 . error ;
    (35) cmdentrada -> INPUT ( listaidenti action6 . ) error

    )               shift and go to state 139
    error           shift and go to state 140


state 113

    (34) cmdentrada -> INPUT error listaidenti action6 . ) ;

    )               shift and go to state 141


state 114

    (115) elemento -> - elemento action36 .

    SIM_POT         reduce using rule 115 (elemento -> - elemento action36 .)
    *               reduce using rule 115 (elemento -> - elemento action36 .)
    /               reduce using rule 115 (elemento -> - elemento action36 .)
    %               reduce using rule 115 (elemento -> - elemento action36 .)
    +               reduce using rule 115 (elemento -> - elemento action36 .)
    -               reduce using rule 115 (elemento -> - elemento action36 .)
    SIM_EQ          reduce using rule 115 (elemento -> - elemento action36 .)
    SIM_DIF         reduce using rule 115 (elemento -> - elemento action36 .)
    <               reduce using rule 115 (elemento -> - elemento action36 .)
    SIM_LE          reduce using rule 115 (elemento -> - elemento action36 .)
    >               reduce using rule 115 (elemento -> - elemento action36 .)
    SIM_GE          reduce using rule 115 (elemento -> - elemento action36 .)
    OR              reduce using rule 115 (elemento -> - elemento action36 .)
    AND             reduce using rule 115 (elemento -> - elemento action36 .)
    error           reduce using rule 115 (elemento -> - elemento action36 .)
    :               reduce using rule 115 (elemento -> - elemento action36 .)
    ;               reduce using rule 115 (elemento -> - elemento action36 .)
    )               reduce using rule 115 (elemento -> - elemento action36 .)
    ,               reduce using rule 115 (elemento -> - elemento action36 .)


state 115

    (43) cmdselecao -> IF expressao action8 error . [ listacmd ] action9 elif else ;

    [               shift and go to state 142


state 116

    (40) cmdselecao -> IF expressao action8 : . [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF expressao action8 : . error listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 : . [ listacmd error action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : . [ listacmd ] action9 elif else error

    [               shift and go to state 144
    error           shift and go to state 143


state 117

    (101) termo1 -> % fator . termo1 p_action27
    (98) termo1 -> . empty
    (99) termo1 -> . * fator termo1 p_action25
    (100) termo1 -> . / fator termo1 p_action26
    (101) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 77
    /               shift and go to state 78
    %               shift and go to state 76
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 145
    empty                          shift and go to state 79

state 118

    (99) termo1 -> * fator . termo1 p_action25
    (98) termo1 -> . empty
    (99) termo1 -> . * fator termo1 p_action25
    (100) termo1 -> . / fator termo1 p_action26
    (101) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 77
    /               shift and go to state 78
    %               shift and go to state 76
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 146
    empty                          shift and go to state 79

state 119

    (100) termo1 -> / fator . termo1 p_action26
    (98) termo1 -> . empty
    (99) termo1 -> . * fator termo1 p_action25
    (100) termo1 -> . / fator termo1 p_action26
    (101) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 77
    /               shift and go to state 78
    %               shift and go to state 76
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 147
    empty                          shift and go to state 79

state 120

    (83) relacional1 -> operador action21 . aritmetica action22
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 148
    termo                          shift and go to state 47
    elemento                       shift and go to state 51

state 121

    (113) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 113 (elemento -> ( expressao ) .)
    *               reduce using rule 113 (elemento -> ( expressao ) .)
    /               reduce using rule 113 (elemento -> ( expressao ) .)
    %               reduce using rule 113 (elemento -> ( expressao ) .)
    +               reduce using rule 113 (elemento -> ( expressao ) .)
    -               reduce using rule 113 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 113 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 113 (elemento -> ( expressao ) .)
    <               reduce using rule 113 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 113 (elemento -> ( expressao ) .)
    >               reduce using rule 113 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 113 (elemento -> ( expressao ) .)
    OR              reduce using rule 113 (elemento -> ( expressao ) .)
    AND             reduce using rule 113 (elemento -> ( expressao ) .)
    error           reduce using rule 113 (elemento -> ( expressao ) .)
    :               reduce using rule 113 (elemento -> ( expressao ) .)
    ;               reduce using rule 113 (elemento -> ( expressao ) .)
    )               reduce using rule 113 (elemento -> ( expressao ) .)
    ,               reduce using rule 113 (elemento -> ( expressao ) .)


state 122

    (71) expressao1 -> AND valor . action_17 expressao1
    (73) action_17 -> .

    OR              reduce using rule 73 (action_17 -> .)
    AND             reduce using rule 73 (action_17 -> .)
    error           reduce using rule 73 (action_17 -> .)
    :               reduce using rule 73 (action_17 -> .)
    ;               reduce using rule 73 (action_17 -> .)
    )               reduce using rule 73 (action_17 -> .)
    ,               reduce using rule 73 (action_17 -> .)

    action_17                      shift and go to state 149

state 123

    (74) expressao1 -> error valor . expressao1
    (69) expressao1 -> . empty
    (70) expressao1 -> . OR valor action_16 expressao1
    (71) expressao1 -> . AND valor action_17 expressao1
    (74) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 93
    AND             shift and go to state 90
    error           shift and go to state 91
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 150
    empty                          shift and go to state 94

state 124

    (70) expressao1 -> OR valor . action_16 expressao1
    (72) action_16 -> .

    OR              reduce using rule 72 (action_16 -> .)
    AND             reduce using rule 72 (action_16 -> .)
    error           reduce using rule 72 (action_16 -> .)
    :               reduce using rule 72 (action_16 -> .)
    ;               reduce using rule 72 (action_16 -> .)
    )               reduce using rule 72 (action_16 -> .)
    ,               reduce using rule 72 (action_16 -> .)

    action_16                      shift and go to state 151

state 125

    (95) aritmetica1 -> + termo . aritmetica1 p_action23
    (94) aritmetica1 -> . empty
    (95) aritmetica1 -> . + termo aritmetica1 p_action23
    (96) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 96
    -               shift and go to state 97
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 152
    empty                          shift and go to state 99

state 126

    (96) aritmetica1 -> - termo . aritmetica1 p_action24
    (94) aritmetica1 -> . empty
    (95) aritmetica1 -> . + termo aritmetica1 p_action23
    (96) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 96
    -               shift and go to state 97
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 153
    empty                          shift and go to state 99

state 127

    (104) fator1 -> SIM_POT elemento . action28 fator1
    (105) action28 -> .

    SIM_POT         reduce using rule 105 (action28 -> .)
    *               reduce using rule 105 (action28 -> .)
    /               reduce using rule 105 (action28 -> .)
    %               reduce using rule 105 (action28 -> .)
    +               reduce using rule 105 (action28 -> .)
    -               reduce using rule 105 (action28 -> .)
    SIM_EQ          reduce using rule 105 (action28 -> .)
    SIM_DIF         reduce using rule 105 (action28 -> .)
    <               reduce using rule 105 (action28 -> .)
    SIM_LE          reduce using rule 105 (action28 -> .)
    >               reduce using rule 105 (action28 -> .)
    SIM_GE          reduce using rule 105 (action28 -> .)
    OR              reduce using rule 105 (action28 -> .)
    AND             reduce using rule 105 (action28 -> .)
    error           reduce using rule 105 (action28 -> .)
    :               reduce using rule 105 (action28 -> .)
    ;               reduce using rule 105 (action28 -> .)
    )               reduce using rule 105 (action28 -> .)
    ,               reduce using rule 105 (action28 -> .)

    action28                       shift and go to state 154

state 128

    (78) valor -> NOT valor action20 .

    OR              reduce using rule 78 (valor -> NOT valor action20 .)
    AND             reduce using rule 78 (valor -> NOT valor action20 .)
    error           reduce using rule 78 (valor -> NOT valor action20 .)
    :               reduce using rule 78 (valor -> NOT valor action20 .)
    ,               reduce using rule 78 (valor -> NOT valor action20 .)
    )               reduce using rule 78 (valor -> NOT valor action20 .)
    ;               reduce using rule 78 (valor -> NOT valor action20 .)


state 129

    (24) listaexp -> expressao listaexp1 .

    )               reduce using rule 24 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 24 (listaexp -> expressao listaexp1 .)


state 130

    (25) listaexp1 -> , . action7 listaexp
    (27) action7 -> .

    TRUE            reduce using rule 27 (action7 -> .)
    FALSE           reduce using rule 27 (action7 -> .)
    NOT             reduce using rule 27 (action7 -> .)
    ID              reduce using rule 27 (action7 -> .)
    INTEIRO         reduce using rule 27 (action7 -> .)
    BINARIO         reduce using rule 27 (action7 -> .)
    OCTAL           reduce using rule 27 (action7 -> .)
    HEXADECIMAL     reduce using rule 27 (action7 -> .)
    REAL            reduce using rule 27 (action7 -> .)
    LITERAL         reduce using rule 27 (action7 -> .)
    (               reduce using rule 27 (action7 -> .)
    +               reduce using rule 27 (action7 -> .)
    -               reduce using rule 27 (action7 -> .)

    action7                        shift and go to state 155

state 131

    (28) listaexp1 -> error . action7 listaexp
    (27) action7 -> .

    TRUE            reduce using rule 27 (action7 -> .)
    FALSE           reduce using rule 27 (action7 -> .)
    NOT             reduce using rule 27 (action7 -> .)
    ID              reduce using rule 27 (action7 -> .)
    INTEIRO         reduce using rule 27 (action7 -> .)
    BINARIO         reduce using rule 27 (action7 -> .)
    OCTAL           reduce using rule 27 (action7 -> .)
    HEXADECIMAL     reduce using rule 27 (action7 -> .)
    REAL            reduce using rule 27 (action7 -> .)
    LITERAL         reduce using rule 27 (action7 -> .)
    (               reduce using rule 27 (action7 -> .)
    +               reduce using rule 27 (action7 -> .)
    -               reduce using rule 27 (action7 -> .)

    action7                        shift and go to state 156

state 132

    (26) listaexp1 -> empty . action7
    (27) action7 -> .

    )               reduce using rule 27 (action7 -> .)
    error           reduce using rule 27 (action7 -> .)

    action7                        shift and go to state 157

state 133

    (36) cmdsaida -> OUTPUT ( listaexp ) . ;
    (39) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 159
    error           shift and go to state 158


state 134

    (37) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 160


state 135

    (38) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 161


state 136

    (64) cmdrepeticao -> WHILE action13 expressao action14 error . [ listacmd ] action15 else ;

    [               shift and go to state 162


state 137

    (60) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 expressao action14 : . error listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd ] action15 else error

    [               shift and go to state 164
    error           shift and go to state 163


state 138

    (29) cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .

    INPUT           reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    OUTPUT          reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    IF              reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    WHILE           reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    ID              reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    ]               reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    error           reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    $end            reduce using rule 29 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)


state 139

    (31) cmdentrada -> INPUT ( listaidenti action6 ) . ;
    (35) cmdentrada -> INPUT ( listaidenti action6 ) . error

    ;               shift and go to state 166
    error           shift and go to state 165


state 140

    (33) cmdentrada -> INPUT ( listaidenti action6 error . ;

    ;               shift and go to state 167


state 141

    (34) cmdentrada -> INPUT error listaidenti action6 ) . ;

    ;               shift and go to state 168


state 142

    (43) cmdselecao -> IF expressao action8 error [ . listacmd ] action9 elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 169
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 143

    (44) cmdselecao -> IF expressao action8 : error . listacmd ] action9 elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 170
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 144

    (40) cmdselecao -> IF expressao action8 : [ . listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 : [ . listacmd error action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : [ . listacmd ] action9 elif else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 171
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 145

    (101) termo1 -> % fator termo1 . p_action27
    (128) p_action27 -> .

    +               reduce using rule 128 (p_action27 -> .)
    -               reduce using rule 128 (p_action27 -> .)
    SIM_EQ          reduce using rule 128 (p_action27 -> .)
    SIM_DIF         reduce using rule 128 (p_action27 -> .)
    <               reduce using rule 128 (p_action27 -> .)
    SIM_LE          reduce using rule 128 (p_action27 -> .)
    >               reduce using rule 128 (p_action27 -> .)
    SIM_GE          reduce using rule 128 (p_action27 -> .)
    OR              reduce using rule 128 (p_action27 -> .)
    AND             reduce using rule 128 (p_action27 -> .)
    error           reduce using rule 128 (p_action27 -> .)
    :               reduce using rule 128 (p_action27 -> .)
    ;               reduce using rule 128 (p_action27 -> .)
    )               reduce using rule 128 (p_action27 -> .)
    ,               reduce using rule 128 (p_action27 -> .)

    p_action27                     shift and go to state 172

state 146

    (99) termo1 -> * fator termo1 . p_action25
    (126) p_action25 -> .

    +               reduce using rule 126 (p_action25 -> .)
    -               reduce using rule 126 (p_action25 -> .)
    SIM_EQ          reduce using rule 126 (p_action25 -> .)
    SIM_DIF         reduce using rule 126 (p_action25 -> .)
    <               reduce using rule 126 (p_action25 -> .)
    SIM_LE          reduce using rule 126 (p_action25 -> .)
    >               reduce using rule 126 (p_action25 -> .)
    SIM_GE          reduce using rule 126 (p_action25 -> .)
    OR              reduce using rule 126 (p_action25 -> .)
    AND             reduce using rule 126 (p_action25 -> .)
    error           reduce using rule 126 (p_action25 -> .)
    :               reduce using rule 126 (p_action25 -> .)
    ;               reduce using rule 126 (p_action25 -> .)
    )               reduce using rule 126 (p_action25 -> .)
    ,               reduce using rule 126 (p_action25 -> .)

    p_action25                     shift and go to state 173

state 147

    (100) termo1 -> / fator termo1 . p_action26
    (127) p_action26 -> .

    +               reduce using rule 127 (p_action26 -> .)
    -               reduce using rule 127 (p_action26 -> .)
    SIM_EQ          reduce using rule 127 (p_action26 -> .)
    SIM_DIF         reduce using rule 127 (p_action26 -> .)
    <               reduce using rule 127 (p_action26 -> .)
    SIM_LE          reduce using rule 127 (p_action26 -> .)
    >               reduce using rule 127 (p_action26 -> .)
    SIM_GE          reduce using rule 127 (p_action26 -> .)
    OR              reduce using rule 127 (p_action26 -> .)
    AND             reduce using rule 127 (p_action26 -> .)
    error           reduce using rule 127 (p_action26 -> .)
    :               reduce using rule 127 (p_action26 -> .)
    ;               reduce using rule 127 (p_action26 -> .)
    )               reduce using rule 127 (p_action26 -> .)
    ,               reduce using rule 127 (p_action26 -> .)

    p_action26                     shift and go to state 174

state 148

    (83) relacional1 -> operador action21 aritmetica . action22
    (86) action22 -> .

    OR              reduce using rule 86 (action22 -> .)
    AND             reduce using rule 86 (action22 -> .)
    error           reduce using rule 86 (action22 -> .)
    :               reduce using rule 86 (action22 -> .)
    ;               reduce using rule 86 (action22 -> .)
    )               reduce using rule 86 (action22 -> .)
    ,               reduce using rule 86 (action22 -> .)

    action22                       shift and go to state 175

state 149

    (71) expressao1 -> AND valor action_17 . expressao1
    (69) expressao1 -> . empty
    (70) expressao1 -> . OR valor action_16 expressao1
    (71) expressao1 -> . AND valor action_17 expressao1
    (74) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 93
    AND             shift and go to state 90
    error           shift and go to state 91
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 176
    empty                          shift and go to state 94

state 150

    (74) expressao1 -> error valor expressao1 .

    :               reduce using rule 74 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 74 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 74 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 74 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 74 (expressao1 -> error valor expressao1 .)


state 151

    (70) expressao1 -> OR valor action_16 . expressao1
    (69) expressao1 -> . empty
    (70) expressao1 -> . OR valor action_16 expressao1
    (71) expressao1 -> . AND valor action_17 expressao1
    (74) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 93
    AND             shift and go to state 90
    error           shift and go to state 91
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 177
    empty                          shift and go to state 94

state 152

    (95) aritmetica1 -> + termo aritmetica1 . p_action23
    (124) p_action23 -> .

    SIM_EQ          reduce using rule 124 (p_action23 -> .)
    SIM_DIF         reduce using rule 124 (p_action23 -> .)
    <               reduce using rule 124 (p_action23 -> .)
    SIM_LE          reduce using rule 124 (p_action23 -> .)
    >               reduce using rule 124 (p_action23 -> .)
    SIM_GE          reduce using rule 124 (p_action23 -> .)
    OR              reduce using rule 124 (p_action23 -> .)
    AND             reduce using rule 124 (p_action23 -> .)
    error           reduce using rule 124 (p_action23 -> .)
    :               reduce using rule 124 (p_action23 -> .)
    ;               reduce using rule 124 (p_action23 -> .)
    )               reduce using rule 124 (p_action23 -> .)
    ,               reduce using rule 124 (p_action23 -> .)

    p_action23                     shift and go to state 178

state 153

    (96) aritmetica1 -> - termo aritmetica1 . p_action24
    (125) p_action24 -> .

    SIM_EQ          reduce using rule 125 (p_action24 -> .)
    SIM_DIF         reduce using rule 125 (p_action24 -> .)
    <               reduce using rule 125 (p_action24 -> .)
    SIM_LE          reduce using rule 125 (p_action24 -> .)
    >               reduce using rule 125 (p_action24 -> .)
    SIM_GE          reduce using rule 125 (p_action24 -> .)
    OR              reduce using rule 125 (p_action24 -> .)
    AND             reduce using rule 125 (p_action24 -> .)
    error           reduce using rule 125 (p_action24 -> .)
    :               reduce using rule 125 (p_action24 -> .)
    ;               reduce using rule 125 (p_action24 -> .)
    )               reduce using rule 125 (p_action24 -> .)
    ,               reduce using rule 125 (p_action24 -> .)

    p_action24                     shift and go to state 179

state 154

    (104) fator1 -> SIM_POT elemento action28 . fator1
    (103) fator1 -> . empty
    (104) fator1 -> . SIM_POT elemento action28 fator1
    (12) empty -> .

    SIM_POT         shift and go to state 103
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 180
    empty                          shift and go to state 104

state 155

    (25) listaexp1 -> , action7 . listaexp
    (24) listaexp -> . expressao listaexp1
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 181
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 156

    (28) listaexp1 -> error action7 . listaexp
    (24) listaexp -> . expressao listaexp1
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 182
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 157

    (26) listaexp1 -> empty action7 .

    )               reduce using rule 26 (listaexp1 -> empty action7 .)
    error           reduce using rule 26 (listaexp1 -> empty action7 .)


state 158

    (39) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)
    $end            reduce using rule 39 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 159

    (36) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    $end            reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 160

    (37) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)
    $end            reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 161

    (38) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)
    $end            reduce using rule 38 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 162

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ . listacmd ] action15 else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 183
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 163

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error . listacmd ] action15 else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 184
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 164

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd error action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd ] action15 else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 185
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 165

    (35) cmdentrada -> INPUT ( listaidenti action6 ) error .

    INPUT           reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    OUTPUT          reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    IF              reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    WHILE           reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    ID              reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    ]               reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    error           reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    $end            reduce using rule 35 (cmdentrada -> INPUT ( listaidenti action6 ) error .)


state 166

    (31) cmdentrada -> INPUT ( listaidenti action6 ) ; .

    INPUT           reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    OUTPUT          reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    IF              reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    WHILE           reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    ID              reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    ]               reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    error           reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    $end            reduce using rule 31 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)


state 167

    (33) cmdentrada -> INPUT ( listaidenti action6 error ; .

    INPUT           reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    OUTPUT          reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    IF              reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    WHILE           reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    ID              reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    ]               reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    error           reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    $end            reduce using rule 33 (cmdentrada -> INPUT ( listaidenti action6 error ; .)


state 168

    (34) cmdentrada -> INPUT error listaidenti action6 ) ; .

    INPUT           reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    OUTPUT          reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    IF              reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    WHILE           reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    ID              reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    ]               reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    error           reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    $end            reduce using rule 34 (cmdentrada -> INPUT error listaidenti action6 ) ; .)


state 169

    (43) cmdselecao -> IF expressao action8 error [ listacmd . ] action9 elif else ;

    ]               shift and go to state 186


state 170

    (44) cmdselecao -> IF expressao action8 : error listacmd . ] action9 elif else ;

    ]               shift and go to state 187


state 171

    (40) cmdselecao -> IF expressao action8 : [ listacmd . ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 : [ listacmd . error action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd . ] action9 elif else error

    ]               shift and go to state 189
    error           shift and go to state 188


state 172

    (101) termo1 -> % fator termo1 p_action27 .

    +               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    -               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    SIM_EQ          reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    SIM_DIF         reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    <               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    SIM_LE          reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    >               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    SIM_GE          reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    OR              reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    AND             reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    error           reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    :               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    ;               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    )               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)
    ,               reduce using rule 101 (termo1 -> % fator termo1 p_action27 .)


state 173

    (99) termo1 -> * fator termo1 p_action25 .

    +               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    -               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    SIM_EQ          reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    SIM_DIF         reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    <               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    SIM_LE          reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    >               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    SIM_GE          reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    OR              reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    AND             reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    error           reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    :               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    ;               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    )               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)
    ,               reduce using rule 99 (termo1 -> * fator termo1 p_action25 .)


state 174

    (100) termo1 -> / fator termo1 p_action26 .

    +               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    -               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    SIM_EQ          reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    SIM_DIF         reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    <               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    SIM_LE          reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    >               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    SIM_GE          reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    OR              reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    AND             reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    error           reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    :               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    ;               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    )               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)
    ,               reduce using rule 100 (termo1 -> / fator termo1 p_action26 .)


state 175

    (83) relacional1 -> operador action21 aritmetica action22 .

    OR              reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    AND             reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    error           reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    :               reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    ;               reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    )               reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)
    ,               reduce using rule 83 (relacional1 -> operador action21 aritmetica action22 .)


state 176

    (71) expressao1 -> AND valor action_17 expressao1 .

    :               reduce using rule 71 (expressao1 -> AND valor action_17 expressao1 .)
    error           reduce using rule 71 (expressao1 -> AND valor action_17 expressao1 .)
    ;               reduce using rule 71 (expressao1 -> AND valor action_17 expressao1 .)
    )               reduce using rule 71 (expressao1 -> AND valor action_17 expressao1 .)
    ,               reduce using rule 71 (expressao1 -> AND valor action_17 expressao1 .)


state 177

    (70) expressao1 -> OR valor action_16 expressao1 .

    :               reduce using rule 70 (expressao1 -> OR valor action_16 expressao1 .)
    error           reduce using rule 70 (expressao1 -> OR valor action_16 expressao1 .)
    ;               reduce using rule 70 (expressao1 -> OR valor action_16 expressao1 .)
    )               reduce using rule 70 (expressao1 -> OR valor action_16 expressao1 .)
    ,               reduce using rule 70 (expressao1 -> OR valor action_16 expressao1 .)


state 178

    (95) aritmetica1 -> + termo aritmetica1 p_action23 .

    SIM_EQ          reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_DIF         reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    <               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_LE          reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    >               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_GE          reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    OR              reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    AND             reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    error           reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    :               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ;               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    )               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ,               reduce using rule 95 (aritmetica1 -> + termo aritmetica1 p_action23 .)


state 179

    (96) aritmetica1 -> - termo aritmetica1 p_action24 .

    SIM_EQ          reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_DIF         reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    <               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_LE          reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    >               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_GE          reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    OR              reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    AND             reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    error           reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    :               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ;               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    )               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ,               reduce using rule 96 (aritmetica1 -> - termo aritmetica1 p_action24 .)


state 180

    (104) fator1 -> SIM_POT elemento action28 fator1 .

    *               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    /               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    %               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    +               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    -               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_EQ          reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_DIF         reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    <               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_LE          reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    >               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_GE          reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    OR              reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    AND             reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    error           reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    :               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    ;               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    )               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)
    ,               reduce using rule 104 (fator1 -> SIM_POT elemento action28 fator1 .)


state 181

    (25) listaexp1 -> , action7 listaexp .

    )               reduce using rule 25 (listaexp1 -> , action7 listaexp .)
    error           reduce using rule 25 (listaexp1 -> , action7 listaexp .)


state 182

    (28) listaexp1 -> error action7 listaexp .

    )               reduce using rule 28 (listaexp1 -> error action7 listaexp .)
    error           reduce using rule 28 (listaexp1 -> error action7 listaexp .)


state 183

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd . ] action15 else ;

    ]               shift and go to state 190


state 184

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd . ] action15 else ;

    ]               shift and go to state 191


state 185

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . error action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . ] action15 else error

    ]               shift and go to state 193
    error           shift and go to state 192


state 186

    (43) cmdselecao -> IF expressao action8 error [ listacmd ] . action9 elif else ;
    (42) action9 -> .

    ELSE            reduce using rule 42 (action9 -> .)
    ;               reduce using rule 42 (action9 -> .)
    ELIF            reduce using rule 42 (action9 -> .)

    action9                        shift and go to state 194

state 187

    (44) cmdselecao -> IF expressao action8 : error listacmd ] . action9 elif else ;
    (42) action9 -> .

    ELSE            reduce using rule 42 (action9 -> .)
    ;               reduce using rule 42 (action9 -> .)
    ELIF            reduce using rule 42 (action9 -> .)

    action9                        shift and go to state 195

state 188

    (45) cmdselecao -> IF expressao action8 : [ listacmd error . action9 elif else ;
    (42) action9 -> .

    ELSE            reduce using rule 42 (action9 -> .)
    ;               reduce using rule 42 (action9 -> .)
    ELIF            reduce using rule 42 (action9 -> .)

    action9                        shift and go to state 196

state 189

    (40) cmdselecao -> IF expressao action8 : [ listacmd ] . action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd ] . action9 elif else error
    (42) action9 -> .

    ELSE            reduce using rule 42 (action9 -> .)
    ;               reduce using rule 42 (action9 -> .)
    error           reduce using rule 42 (action9 -> .)
    ELIF            reduce using rule 42 (action9 -> .)

    action9                        shift and go to state 197

state 190

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] . action15 else ;
    (63) action15 -> .

    ELSE            reduce using rule 63 (action15 -> .)
    ;               reduce using rule 63 (action15 -> .)

    action15                       shift and go to state 198

state 191

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] . action15 else ;
    (63) action15 -> .

    ELSE            reduce using rule 63 (action15 -> .)
    ;               reduce using rule 63 (action15 -> .)

    action15                       shift and go to state 199

state 192

    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error . action15 else ;
    (63) action15 -> .

    ELSE            reduce using rule 63 (action15 -> .)
    ;               reduce using rule 63 (action15 -> .)

    action15                       shift and go to state 200

state 193

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] . action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] . action15 else error
    (63) action15 -> .

    ELSE            reduce using rule 63 (action15 -> .)
    ;               reduce using rule 63 (action15 -> .)
    error           reduce using rule 63 (action15 -> .)

    action15                       shift and go to state 201

state 194

    (43) cmdselecao -> IF expressao action8 error [ listacmd ] action9 . elif else ;
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 202
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 195

    (44) cmdselecao -> IF expressao action8 : error listacmd ] action9 . elif else ;
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 205
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 196

    (45) cmdselecao -> IF expressao action8 : [ listacmd error action9 . elif else ;
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 206
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 197

    (40) cmdselecao -> IF expressao action8 : [ listacmd ] action9 . elif else ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd ] action9 . elif else error
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 207
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 198

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 210
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 199

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 212
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 200

    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 213
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 201

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 . else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 . else error
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 214
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 202

    (43) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 215
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 203

    (48) elif -> action10 . ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> action10 . ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> action10 . ELIF expressao action11 : error listacmd ] elif
    (53) elif -> action10 . ELIF expressao action11 : [ listacmd error elif

    ELIF            shift and go to state 216


state 204

    (47) elif -> empty .

    ELSE            reduce using rule 47 (elif -> empty .)
    ;               reduce using rule 47 (elif -> empty .)
    error           reduce using rule 47 (elif -> empty .)


state 205

    (44) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 217
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 206

    (45) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif . else ;
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 218
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 207

    (40) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif . else ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif . else error
    (54) else -> . empty
    (55) else -> . action12 ELSE : [ listacmd ]
    (57) else -> . ELSE error [ listacmd ]
    (58) else -> . ELSE : error listacmd ]
    (59) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (56) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 209
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 56 (action12 -> .) ]

    else                           shift and go to state 219
    action12                       shift and go to state 208
    empty                          shift and go to state 211

state 208

    (55) else -> action12 . ELSE : [ listacmd ]

    ELSE            shift and go to state 220


state 209

    (57) else -> ELSE . error [ listacmd ]
    (58) else -> ELSE . : error listacmd ]
    (59) else -> ELSE . : [ listacmd error

    error           shift and go to state 221
    :               shift and go to state 222


state 210

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else . ;

    ;               shift and go to state 223


state 211

    (54) else -> empty .

    ;               reduce using rule 54 (else -> empty .)
    error           reduce using rule 54 (else -> empty .)


state 212

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else . ;

    ;               shift and go to state 224


state 213

    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else . ;

    ;               shift and go to state 225


state 214

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else . ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else . error

    ;               shift and go to state 227
    error           shift and go to state 226


state 215

    (43) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else . ;

    ;               shift and go to state 228


state 216

    (48) elif -> action10 ELIF . expressao action11 : [ listacmd ] elif
    (51) elif -> action10 ELIF . expressao action11 error [ listacmd ] elif
    (52) elif -> action10 ELIF . expressao action11 : error listacmd ] elif
    (53) elif -> action10 ELIF . expressao action11 : [ listacmd error elif
    (68) expressao -> . valor expressao1
    (75) valor -> . relacional
    (76) valor -> . TRUE action18
    (77) valor -> . FALSE action19
    (78) valor -> . NOT valor action20
    (82) relacional -> . aritmetica relacional1
    (93) aritmetica -> . termo aritmetica1
    (97) termo -> . fator termo1
    (102) fator -> . elemento fator1
    (106) elemento -> . ID action29
    (107) elemento -> . INTEIRO action30
    (108) elemento -> . BINARIO action31
    (109) elemento -> . OCTAL action32
    (110) elemento -> . HEXADECIMAL action33
    (111) elemento -> . REAL action34
    (112) elemento -> . LITERAL action35
    (113) elemento -> . ( expressao )
    (114) elemento -> . + elemento
    (115) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 229
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 217

    (44) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else . ;

    ;               shift and go to state 230


state 218

    (45) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else . ;

    ;               shift and go to state 231


state 219

    (40) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else . ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else . error

    ;               shift and go to state 233
    error           shift and go to state 232


state 220

    (55) else -> action12 ELSE . : [ listacmd ]

    :               shift and go to state 234


state 221

    (57) else -> ELSE error . [ listacmd ]

    [               shift and go to state 235


state 222

    (58) else -> ELSE : . error listacmd ]
    (59) else -> ELSE : . [ listacmd error

    error           shift and go to state 236
    [               shift and go to state 237


state 223

    (64) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .

    INPUT           reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    IF              reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    WHILE           reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    ID              reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    ]               reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    error           reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    $end            reduce using rule 64 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)


state 224

    (65) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .

    INPUT           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    IF              reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    WHILE           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    ID              reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    ]               reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    error           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    $end            reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)


state 225

    (66) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .

    INPUT           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    OUTPUT          reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    IF              reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    WHILE           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    ID              reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    ]               reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    error           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    $end            reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)


state 226

    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .

    INPUT           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    OUTPUT          reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    IF              reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    WHILE           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    ID              reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    ]               reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    error           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    $end            reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)


state 227

    (60) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .

    INPUT           reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    IF              reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    WHILE           reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    ID              reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    ]               reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    error           reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    $end            reduce using rule 60 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)


state 228

    (43) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .

    INPUT           reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    IF              reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    ID              reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    ]               reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    error           reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    $end            reduce using rule 43 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)


state 229

    (48) elif -> action10 ELIF expressao . action11 : [ listacmd ] elif
    (51) elif -> action10 ELIF expressao . action11 error [ listacmd ] elif
    (52) elif -> action10 ELIF expressao . action11 : error listacmd ] elif
    (53) elif -> action10 ELIF expressao . action11 : [ listacmd error elif
    (50) action11 -> .

    :               reduce using rule 50 (action11 -> .)
    error           reduce using rule 50 (action11 -> .)

    action11                       shift and go to state 238

state 230

    (44) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .

    INPUT           reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    IF              reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    ID              reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    ]               reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    error           reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    $end            reduce using rule 44 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)


state 231

    (45) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .

    INPUT           reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    OUTPUT          reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    IF              reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    WHILE           reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    ID              reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    ]               reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    error           reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    $end            reduce using rule 45 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)


state 232

    (46) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .

    INPUT           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    OUTPUT          reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    IF              reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    WHILE           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    ID              reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    ]               reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    error           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    $end            reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)


state 233

    (40) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .

    INPUT           reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    IF              reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    ID              reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    ]               reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    error           reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    $end            reduce using rule 40 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)


state 234

    (55) else -> action12 ELSE : . [ listacmd ]

    [               shift and go to state 239


state 235

    (57) else -> ELSE error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 240
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 236

    (58) else -> ELSE : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 241
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 237

    (59) else -> ELSE : [ . listacmd error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 242
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 238

    (48) elif -> action10 ELIF expressao action11 . : [ listacmd ] elif
    (51) elif -> action10 ELIF expressao action11 . error [ listacmd ] elif
    (52) elif -> action10 ELIF expressao action11 . : error listacmd ] elif
    (53) elif -> action10 ELIF expressao action11 . : [ listacmd error elif

    :               shift and go to state 244
    error           shift and go to state 243


state 239

    (55) else -> action12 ELSE : [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 245
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 240

    (57) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 246


state 241

    (58) else -> ELSE : error listacmd . ]

    ]               shift and go to state 247


state 242

    (59) else -> ELSE : [ listacmd . error

    error           shift and go to state 248


state 243

    (51) elif -> action10 ELIF expressao action11 error . [ listacmd ] elif

    [               shift and go to state 249


state 244

    (48) elif -> action10 ELIF expressao action11 : . [ listacmd ] elif
    (52) elif -> action10 ELIF expressao action11 : . error listacmd ] elif
    (53) elif -> action10 ELIF expressao action11 : . [ listacmd error elif

    [               shift and go to state 251
    error           shift and go to state 250


state 245

    (55) else -> action12 ELSE : [ listacmd . ]

    ]               shift and go to state 252


state 246

    (57) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 57 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 57 (else -> ELSE error [ listacmd ] .)


state 247

    (58) else -> ELSE : error listacmd ] .

    ;               reduce using rule 58 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 58 (else -> ELSE : error listacmd ] .)


state 248

    (59) else -> ELSE : [ listacmd error .

    ;               reduce using rule 59 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 59 (else -> ELSE : [ listacmd error .)


state 249

    (51) elif -> action10 ELIF expressao action11 error [ . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 253
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 250

    (52) elif -> action10 ELIF expressao action11 : error . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 254
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 251

    (48) elif -> action10 ELIF expressao action11 : [ . listacmd ] elif
    (53) elif -> action10 ELIF expressao action11 : [ . listacmd error elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (29) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (31) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (33) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (34) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (35) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (36) cmdsaida -> . OUTPUT ( listaexp ) ;
    (37) cmdsaida -> . OUTPUT ( listaexp error ;
    (38) cmdsaida -> . OUTPUT error listaexp ) ;
    (39) cmdsaida -> . OUTPUT ( listaexp ) error
    (40) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (43) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (60) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (64) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 255
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 252

    (55) else -> action12 ELSE : [ listacmd ] .

    ;               reduce using rule 55 (else -> action12 ELSE : [ listacmd ] .)
    error           reduce using rule 55 (else -> action12 ELSE : [ listacmd ] .)


state 253

    (51) elif -> action10 ELIF expressao action11 error [ listacmd . ] elif

    ]               shift and go to state 256


state 254

    (52) elif -> action10 ELIF expressao action11 : error listacmd . ] elif

    ]               shift and go to state 257


state 255

    (48) elif -> action10 ELIF expressao action11 : [ listacmd . ] elif
    (53) elif -> action10 ELIF expressao action11 : [ listacmd . error elif

    ]               shift and go to state 259
    error           shift and go to state 258


state 256

    (51) elif -> action10 ELIF expressao action11 error [ listacmd ] . elif
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 260
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 257

    (52) elif -> action10 ELIF expressao action11 : error listacmd ] . elif
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 261
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 258

    (53) elif -> action10 ELIF expressao action11 : [ listacmd error . elif
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 262
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 259

    (48) elif -> action10 ELIF expressao action11 : [ listacmd ] . elif
    (47) elif -> . empty
    (48) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (51) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (49) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 49 (action10 -> .)

    elif                           shift and go to state 263
    action10                       shift and go to state 203
    empty                          shift and go to state 204

state 260

    (51) elif -> action10 ELIF expressao action11 error [ listacmd ] elif .

    ELSE            reduce using rule 51 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)
    ;               reduce using rule 51 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)
    error           reduce using rule 51 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)


state 261

    (52) elif -> action10 ELIF expressao action11 : error listacmd ] elif .

    ELSE            reduce using rule 52 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)
    ;               reduce using rule 52 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)
    error           reduce using rule 52 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)


state 262

    (53) elif -> action10 ELIF expressao action11 : [ listacmd error elif .

    ELSE            reduce using rule 53 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)
    ;               reduce using rule 53 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)
    error           reduce using rule 53 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)


state 263

    (48) elif -> action10 ELIF expressao action11 : [ listacmd ] elif .

    ELSE            reduce using rule 48 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)
    ;               reduce using rule 48 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)
    error           reduce using rule 48 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 45 resolved as shift
WARNING: shift/reduce conflict for error in state 107 resolved as shift
WARNING: shift/reduce conflict for error in state 123 resolved as shift
WARNING: shift/reduce conflict for error in state 149 resolved as shift
WARNING: shift/reduce conflict for error in state 151 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 198 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 199 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 200 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 201 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 202 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 205 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 206 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 207 resolved as shift
