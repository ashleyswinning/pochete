Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     programa -> error ID : [ listacmd ]
Rule 3     programa -> DEF ID error [ listacmd ]
Rule 4     programa -> DEF ID : error listacmd ]
Rule 5     programa -> DEF ID : [ listacmd error
Rule 6     empty -> <empty>
Rule 7     listacmd -> comando listacmd1
Rule 8     listacmd1 -> empty
Rule 9     listacmd1 -> listacmd
Rule 10    comando -> cmdatribui
Rule 11    comando -> cmdentrada
Rule 12    comando -> cmdsaida
Rule 13    comando -> cmdselecao
Rule 14    comando -> cmdrepeticao
Rule 15    listaidenti -> ID listaindenti1
Rule 16    listaindenti1 -> empty
Rule 17    listaindenti1 -> , listaidenti
Rule 18    listaindenti1 -> error listaidenti
Rule 19    listaexp -> expressao listaexp1
Rule 20    listaexp1 -> , listaexp
Rule 21    listaexp1 -> empty
Rule 22    listaexp1 -> error listaexp
Rule 23    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 24    cmdatribui -> listaidenti SIM_ATTR expressao error
Rule 25    cmdentrada -> INPUT ( listaidenti ) ;
Rule 26    cmdentrada -> INPUT ( listaidenti error ;
Rule 27    cmdentrada -> INPUT error listaidenti ) ;
Rule 28    cmdentrada -> INPUT ( listaidenti ) error
Rule 29    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 30    cmdsaida -> OUTPUT ( listaexp error ;
Rule 31    cmdsaida -> OUTPUT error listaexp ) ;
Rule 32    cmdsaida -> OUTPUT ( listaexp ) error
Rule 33    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 34    cmdselecao -> error expressao : [ listacmd ] elif else ;
Rule 35    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 36    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 37    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 38    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 39    elif -> empty
Rule 40    elif -> ELIF expressao : [ listacmd ] elif
Rule 41    elif -> error expressao : [ listacmd ] elif
Rule 42    elif -> ELIF expressao error [ listacmd ] elif
Rule 43    elif -> ELIF expressao : error listacmd ] elif
Rule 44    elif -> ELIF expressao : [ listacmd error elif
Rule 45    else -> empty
Rule 46    else -> ELSE : [ listacmd ]
Rule 47    else -> error : [ listacmd ]
Rule 48    else -> ELSE error [ listacmd ]
Rule 49    else -> ELSE : error listacmd ]
Rule 50    else -> ELSE : [ listacmd error
Rule 51    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 52    cmdrepeticao -> error expressao : [ listacmd ] else ;
Rule 53    cmdrepeticao -> WHILE expressao error [ listacmd ] else ;
Rule 54    cmdrepeticao -> WHILE expressao : error listacmd ] else ;
Rule 55    cmdrepeticao -> WHILE expressao : [ listacmd error else ;
Rule 56    cmdrepeticao -> WHILE expressao : [ listacmd ] else error
Rule 57    expressao -> valor expressao1
Rule 58    expressao1 -> empty
Rule 59    expressao1 -> OR valor expressao1
Rule 60    expressao1 -> AND valor expressao1
Rule 61    expressao1 -> error valor expressao1
Rule 62    valor -> relacional
Rule 63    valor -> TRUE
Rule 64    valor -> FALSE
Rule 65    valor -> NOT valor
Rule 66    valor -> error
Rule 67    valor -> error valor
Rule 68    relacional -> aritmetica relacional1
Rule 69    relacional1 -> operador aritmetica
Rule 70    relacional1 -> empty
Rule 71    operador -> SIM_EQ
Rule 72    operador -> SIM_DIF
Rule 73    operador -> <
Rule 74    operador -> SIM_LE
Rule 75    operador -> >
Rule 76    operador -> SIM_GE
Rule 77    operador -> error
Rule 78    aritmetica -> termo aritmetica1
Rule 79    aritmetica1 -> empty
Rule 80    aritmetica1 -> + termo aritmetica1
Rule 81    aritmetica1 -> - termo aritmetica1
Rule 82    termo -> fator termo1
Rule 83    termo1 -> empty
Rule 84    termo1 -> * fator termo1
Rule 85    termo1 -> / fator termo1
Rule 86    termo1 -> % fator termo1
Rule 87    fator -> elemento fator1
Rule 88    fator1 -> empty
Rule 89    fator1 -> SIM_POT elemento fator1
Rule 90    elemento -> ID
Rule 91    elemento -> INTEIRO
Rule 92    elemento -> REAL
Rule 93    elemento -> LITERAL
Rule 94    elemento -> ( expressao )
Rule 95    elemento -> + elemento
Rule 96    elemento -> - elemento
Rule 97    elemento -> error
Rule 98    elemento -> error expressao error
Rule 99    elemento -> error elemento

Terminals, with rules where they appear

%                    : 86
(                    : 25 26 28 29 30 32 94
)                    : 25 27 28 29 31 32 94
*                    : 84
+                    : 80 95
,                    : 17 20
-                    : 81 96
/                    : 85
:                    : 1 2 4 5 33 34 36 37 38 40 41 43 44 46 47 49 50 51 52 54 55 56
;                    : 23 25 26 27 29 30 31 33 34 35 36 37 51 52 53 54 55
<                    : 73
>                    : 75
AND                  : 60
BINARIO              : 
DEF                  : 1 3 4 5
ELIF                 : 40 42 43 44
ELSE                 : 46 48 49 50
FALSE                : 64
HEXADECIMAL          : 
ID                   : 1 2 3 4 5 15 90
IF                   : 33 35 36 37 38
INPUT                : 25 26 27 28
INTEIRO              : 91
LITERAL              : 93
NOT                  : 65
OCTAL                : 
OR                   : 59
OUTPUT               : 29 30 31 32
REAL                 : 92
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 23 24
SIM_DIF              : 72
SIM_EQ               : 71
SIM_GE               : 76
SIM_LE               : 74
SIM_POT              : 89
TRUE                 : 63
WHILE                : 51 53 54 55 56
[                    : 1 2 3 5 33 34 35 37 38 40 41 42 44 46 47 48 50 51 52 53 55 56
]                    : 1 2 3 4 33 34 35 36 38 40 41 42 43 46 47 48 49 51 52 53 54 56
error                : 2 3 4 5 18 22 24 26 27 28 30 31 32 34 35 36 37 38 41 42 43 44 47 48 49 50 52 53 54 55 56 61 66 67 77 97 98 98 99

Nonterminals, with rules where they appear

aritmetica           : 68 69
aritmetica1          : 78 80 81
cmdatribui           : 10
cmdentrada           : 11
cmdrepeticao         : 14
cmdsaida             : 12
cmdselecao           : 13
comando              : 7
elemento             : 87 89 95 96 99
elif                 : 33 34 35 36 37 38 40 41 42 43 44
else                 : 33 34 35 36 37 38 51 52 53 54 55 56
empty                : 8 16 21 39 45 58 70 79 83 88
expressao            : 19 23 24 33 34 35 36 37 38 40 41 42 43 44 51 52 53 54 55 56 94 98
expressao1           : 57 59 60 61
fator                : 82 84 85 86
fator1               : 87 89
listacmd             : 1 2 3 4 5 9 33 34 35 36 37 38 40 41 42 43 44 46 47 48 49 50 51 52 53 54 55 56
listacmd1            : 7
listaexp             : 20 22 29 30 31 32
listaexp1            : 19
listaidenti          : 17 18 23 24 25 26 27 28
listaindenti1        : 15
operador             : 69
programa             : 0
relacional           : 62
relacional1          : 68
termo                : 78 80 81
termo1               : 82 84 85 86
valor                : 57 59 60 61 65 67

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]
    (2) programa -> . error ID : [ listacmd ]
    (3) programa -> . DEF ID error [ listacmd ]
    (4) programa -> . DEF ID : error listacmd ]
    (5) programa -> . DEF ID : [ listacmd error

    DEF             shift and go to state 3
    error           shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> error . ID : [ listacmd ]

    ID              shift and go to state 4


state 3

    (1) programa -> DEF . ID : [ listacmd ]
    (3) programa -> DEF . ID error [ listacmd ]
    (4) programa -> DEF . ID : error listacmd ]
    (5) programa -> DEF . ID : [ listacmd error

    ID              shift and go to state 5


state 4

    (2) programa -> error ID . : [ listacmd ]

    :               shift and go to state 6


state 5

    (1) programa -> DEF ID . : [ listacmd ]
    (3) programa -> DEF ID . error [ listacmd ]
    (4) programa -> DEF ID . : error listacmd ]
    (5) programa -> DEF ID . : [ listacmd error

    :               shift and go to state 8
    error           shift and go to state 7


state 6

    (2) programa -> error ID : . [ listacmd ]

    [               shift and go to state 9


state 7

    (3) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 10


state 8

    (1) programa -> DEF ID : . [ listacmd ]
    (4) programa -> DEF ID : . error listacmd ]
    (5) programa -> DEF ID : . [ listacmd error

    [               shift and go to state 12
    error           shift and go to state 11


state 9

    (2) programa -> error ID : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 16
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 10

    (3) programa -> DEF ID error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 27
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 11

    (4) programa -> DEF ID : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 28
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 12

    (1) programa -> DEF ID : [ . listacmd ]
    (5) programa -> DEF ID : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 29
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 13

    (13) comando -> cmdselecao .

    INPUT           reduce using rule 13 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 13 (comando -> cmdselecao .)
    IF              reduce using rule 13 (comando -> cmdselecao .)
    error           reduce using rule 13 (comando -> cmdselecao .)
    WHILE           reduce using rule 13 (comando -> cmdselecao .)
    ID              reduce using rule 13 (comando -> cmdselecao .)
    ]               reduce using rule 13 (comando -> cmdselecao .)


state 14

    (11) comando -> cmdentrada .

    INPUT           reduce using rule 11 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 11 (comando -> cmdentrada .)
    IF              reduce using rule 11 (comando -> cmdentrada .)
    error           reduce using rule 11 (comando -> cmdentrada .)
    WHILE           reduce using rule 11 (comando -> cmdentrada .)
    ID              reduce using rule 11 (comando -> cmdentrada .)
    ]               reduce using rule 11 (comando -> cmdentrada .)


state 15

    (51) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> WHILE . expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE . expressao : error listacmd ] else ;
    (55) cmdrepeticao -> WHILE . expressao : [ listacmd error else ;
    (56) cmdrepeticao -> WHILE . expressao : [ listacmd ] else error
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 34
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 16

    (2) programa -> error ID : [ listacmd . ]

    ]               shift and go to state 48


state 17

    (10) comando -> cmdatribui .

    INPUT           reduce using rule 10 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 10 (comando -> cmdatribui .)
    IF              reduce using rule 10 (comando -> cmdatribui .)
    error           reduce using rule 10 (comando -> cmdatribui .)
    WHILE           reduce using rule 10 (comando -> cmdatribui .)
    ID              reduce using rule 10 (comando -> cmdatribui .)
    ]               reduce using rule 10 (comando -> cmdatribui .)


state 18

    (12) comando -> cmdsaida .

    INPUT           reduce using rule 12 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 12 (comando -> cmdsaida .)
    IF              reduce using rule 12 (comando -> cmdsaida .)
    error           reduce using rule 12 (comando -> cmdsaida .)
    WHILE           reduce using rule 12 (comando -> cmdsaida .)
    ID              reduce using rule 12 (comando -> cmdsaida .)
    ]               reduce using rule 12 (comando -> cmdsaida .)


state 19

    (23) cmdatribui -> listaidenti . SIM_ATTR expressao ;
    (24) cmdatribui -> listaidenti . SIM_ATTR expressao error

    SIM_ATTR        shift and go to state 49


state 20

    (34) cmdselecao -> error . expressao : [ listacmd ] elif else ;
    (52) cmdrepeticao -> error . expressao : [ listacmd ] else ;
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 50
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 21

    (25) cmdentrada -> INPUT . ( listaidenti ) ;
    (26) cmdentrada -> INPUT . ( listaidenti error ;
    (27) cmdentrada -> INPUT . error listaidenti ) ;
    (28) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 51
    error           shift and go to state 52


state 22

    (15) listaidenti -> ID . listaindenti1
    (16) listaindenti1 -> . empty
    (17) listaindenti1 -> . , listaidenti
    (18) listaindenti1 -> . error listaidenti
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 53
    error           shift and go to state 54
    SIM_ATTR        reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaindenti1                  shift and go to state 55
    empty                          shift and go to state 56

state 23

    (33) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (37) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (38) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 57
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 24

    (14) comando -> cmdrepeticao .

    INPUT           reduce using rule 14 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 14 (comando -> cmdrepeticao .)
    IF              reduce using rule 14 (comando -> cmdrepeticao .)
    error           reduce using rule 14 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 14 (comando -> cmdrepeticao .)
    ID              reduce using rule 14 (comando -> cmdrepeticao .)
    ]               reduce using rule 14 (comando -> cmdrepeticao .)


state 25

    (7) listacmd -> comando . listacmd1
    (8) listacmd1 -> . empty
    (9) listacmd1 -> . listacmd
    (6) empty -> .
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

  ! shift/reduce conflict for error resolved as shift
    ]               reduce using rule 6 (empty -> .)
    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    listacmd1                      shift and go to state 59
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 58
    cmdsaida                       shift and go to state 18
    empty                          shift and go to state 60
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 26

    (29) cmdsaida -> OUTPUT . ( listaexp ) ;
    (30) cmdsaida -> OUTPUT . ( listaexp error ;
    (31) cmdsaida -> OUTPUT . error listaexp ) ;
    (32) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 61
    error           shift and go to state 62


state 27

    (3) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 63


state 28

    (4) programa -> DEF ID : error listacmd . ]

    ]               shift and go to state 64


state 29

    (1) programa -> DEF ID : [ listacmd . ]
    (5) programa -> DEF ID : [ listacmd . error

    ]               shift and go to state 66
    error           shift and go to state 65


state 30

    (92) elemento -> REAL .

    SIM_POT         reduce using rule 92 (elemento -> REAL .)
    *               reduce using rule 92 (elemento -> REAL .)
    /               reduce using rule 92 (elemento -> REAL .)
    %               reduce using rule 92 (elemento -> REAL .)
    +               reduce using rule 92 (elemento -> REAL .)
    -               reduce using rule 92 (elemento -> REAL .)
    SIM_EQ          reduce using rule 92 (elemento -> REAL .)
    SIM_DIF         reduce using rule 92 (elemento -> REAL .)
    <               reduce using rule 92 (elemento -> REAL .)
    SIM_LE          reduce using rule 92 (elemento -> REAL .)
    >               reduce using rule 92 (elemento -> REAL .)
    SIM_GE          reduce using rule 92 (elemento -> REAL .)
    error           reduce using rule 92 (elemento -> REAL .)
    OR              reduce using rule 92 (elemento -> REAL .)
    AND             reduce using rule 92 (elemento -> REAL .)
    :               reduce using rule 92 (elemento -> REAL .)
    )               reduce using rule 92 (elemento -> REAL .)
    ;               reduce using rule 92 (elemento -> REAL .)
    ,               reduce using rule 92 (elemento -> REAL .)


state 31

    (96) elemento -> - . elemento
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 68

state 32

    (63) valor -> TRUE .

    OR              reduce using rule 63 (valor -> TRUE .)
    AND             reduce using rule 63 (valor -> TRUE .)
    error           reduce using rule 63 (valor -> TRUE .)
    ,               reduce using rule 63 (valor -> TRUE .)
    )               reduce using rule 63 (valor -> TRUE .)
    ;               reduce using rule 63 (valor -> TRUE .)
    :               reduce using rule 63 (valor -> TRUE .)


state 33

    (91) elemento -> INTEIRO .

    SIM_POT         reduce using rule 91 (elemento -> INTEIRO .)
    *               reduce using rule 91 (elemento -> INTEIRO .)
    /               reduce using rule 91 (elemento -> INTEIRO .)
    %               reduce using rule 91 (elemento -> INTEIRO .)
    +               reduce using rule 91 (elemento -> INTEIRO .)
    -               reduce using rule 91 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 91 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 91 (elemento -> INTEIRO .)
    <               reduce using rule 91 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 91 (elemento -> INTEIRO .)
    >               reduce using rule 91 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 91 (elemento -> INTEIRO .)
    error           reduce using rule 91 (elemento -> INTEIRO .)
    OR              reduce using rule 91 (elemento -> INTEIRO .)
    AND             reduce using rule 91 (elemento -> INTEIRO .)
    :               reduce using rule 91 (elemento -> INTEIRO .)
    )               reduce using rule 91 (elemento -> INTEIRO .)
    ;               reduce using rule 91 (elemento -> INTEIRO .)
    ,               reduce using rule 91 (elemento -> INTEIRO .)


state 34

    (51) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;
    (53) cmdrepeticao -> WHILE expressao . error [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE expressao . : error listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao . : [ listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao . : [ listacmd ] else error

    :               shift and go to state 70
    error           shift and go to state 69


state 35

    (95) elemento -> + . elemento
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 71

state 36

    (82) termo -> fator . termo1
    (83) termo1 -> . empty
    (84) termo1 -> . * fator termo1
    (85) termo1 -> . / fator termo1
    (86) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 74
    /               shift and go to state 75
    %               shift and go to state 73
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 72
    empty                          shift and go to state 76

state 37

    (68) relacional -> aritmetica . relacional1
    (69) relacional1 -> . operador aritmetica
    (70) relacional1 -> . empty
    (71) operador -> . SIM_EQ
    (72) operador -> . SIM_DIF
    (73) operador -> . <
    (74) operador -> . SIM_LE
    (75) operador -> . >
    (76) operador -> . SIM_GE
    (77) operador -> . error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    SIM_EQ          shift and go to state 77
    SIM_DIF         shift and go to state 80
    <               shift and go to state 84
    SIM_LE          shift and go to state 86
    >               shift and go to state 83
    SIM_GE          shift and go to state 79
    error           shift and go to state 81
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    relacional1                    shift and go to state 82
    operador                       shift and go to state 78
    empty                          shift and go to state 85

state 38

    (94) elemento -> ( . expressao )
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 87
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 39

    (57) expressao -> valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 91
    AND             shift and go to state 88
    error           shift and go to state 89
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 90
    empty                          shift and go to state 92

state 40

    (93) elemento -> LITERAL .

    SIM_POT         reduce using rule 93 (elemento -> LITERAL .)
    *               reduce using rule 93 (elemento -> LITERAL .)
    /               reduce using rule 93 (elemento -> LITERAL .)
    %               reduce using rule 93 (elemento -> LITERAL .)
    +               reduce using rule 93 (elemento -> LITERAL .)
    -               reduce using rule 93 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 93 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 93 (elemento -> LITERAL .)
    <               reduce using rule 93 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 93 (elemento -> LITERAL .)
    >               reduce using rule 93 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 93 (elemento -> LITERAL .)
    error           reduce using rule 93 (elemento -> LITERAL .)
    OR              reduce using rule 93 (elemento -> LITERAL .)
    AND             reduce using rule 93 (elemento -> LITERAL .)
    :               reduce using rule 93 (elemento -> LITERAL .)
    )               reduce using rule 93 (elemento -> LITERAL .)
    ;               reduce using rule 93 (elemento -> LITERAL .)
    ,               reduce using rule 93 (elemento -> LITERAL .)


state 41

    (78) aritmetica -> termo . aritmetica1
    (79) aritmetica1 -> . empty
    (80) aritmetica1 -> . + termo aritmetica1
    (81) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 94
    -               shift and go to state 95
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 93
    empty                          shift and go to state 96

state 42

    (62) valor -> relacional .

    OR              reduce using rule 62 (valor -> relacional .)
    AND             reduce using rule 62 (valor -> relacional .)
    error           reduce using rule 62 (valor -> relacional .)
    ,               reduce using rule 62 (valor -> relacional .)
    )               reduce using rule 62 (valor -> relacional .)
    ;               reduce using rule 62 (valor -> relacional .)
    :               reduce using rule 62 (valor -> relacional .)


state 43

    (90) elemento -> ID .

    SIM_POT         reduce using rule 90 (elemento -> ID .)
    *               reduce using rule 90 (elemento -> ID .)
    /               reduce using rule 90 (elemento -> ID .)
    %               reduce using rule 90 (elemento -> ID .)
    +               reduce using rule 90 (elemento -> ID .)
    -               reduce using rule 90 (elemento -> ID .)
    SIM_EQ          reduce using rule 90 (elemento -> ID .)
    SIM_DIF         reduce using rule 90 (elemento -> ID .)
    <               reduce using rule 90 (elemento -> ID .)
    SIM_LE          reduce using rule 90 (elemento -> ID .)
    >               reduce using rule 90 (elemento -> ID .)
    SIM_GE          reduce using rule 90 (elemento -> ID .)
    error           reduce using rule 90 (elemento -> ID .)
    OR              reduce using rule 90 (elemento -> ID .)
    AND             reduce using rule 90 (elemento -> ID .)
    :               reduce using rule 90 (elemento -> ID .)
    )               reduce using rule 90 (elemento -> ID .)
    ;               reduce using rule 90 (elemento -> ID .)
    ,               reduce using rule 90 (elemento -> ID .)


state 44

    (87) fator -> elemento . fator1
    (88) fator1 -> . empty
    (89) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 98
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 97
    empty                          shift and go to state 99

state 45

    (64) valor -> FALSE .

    OR              reduce using rule 64 (valor -> FALSE .)
    AND             reduce using rule 64 (valor -> FALSE .)
    error           reduce using rule 64 (valor -> FALSE .)
    ,               reduce using rule 64 (valor -> FALSE .)
    )               reduce using rule 64 (valor -> FALSE .)
    ;               reduce using rule 64 (valor -> FALSE .)
    :               reduce using rule 64 (valor -> FALSE .)


state 46

    (66) valor -> error .
    (67) valor -> error . valor
    (97) elemento -> error .
    (98) elemento -> error . expressao error
    (99) elemento -> error . elemento
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (57) expressao -> . valor expressao1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1

  ! reduce/reduce conflict for error resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for OR resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for : resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for ) resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for ; resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for , resolved using rule 66 (valor -> error .)
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    OR              reduce using rule 66 (valor -> error .)
    AND             reduce using rule 66 (valor -> error .)
    ,               reduce using rule 66 (valor -> error .)
    )               reduce using rule 66 (valor -> error .)
    ;               reduce using rule 66 (valor -> error .)
    :               reduce using rule 66 (valor -> error .)
    SIM_POT         reduce using rule 97 (elemento -> error .)
    *               reduce using rule 97 (elemento -> error .)
    /               reduce using rule 97 (elemento -> error .)
    %               reduce using rule 97 (elemento -> error .)
    SIM_EQ          reduce using rule 97 (elemento -> error .)
    SIM_DIF         reduce using rule 97 (elemento -> error .)
    <               reduce using rule 97 (elemento -> error .)
    SIM_LE          reduce using rule 97 (elemento -> error .)
    >               reduce using rule 97 (elemento -> error .)
    SIM_GE          reduce using rule 97 (elemento -> error .)
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

  ! error           [ reduce using rule 66 (valor -> error .) ]
  ! +               [ reduce using rule 97 (elemento -> error .) ]
  ! -               [ reduce using rule 97 (elemento -> error .) ]
  ! error           [ reduce using rule 97 (elemento -> error .) ]
  ! OR              [ reduce using rule 97 (elemento -> error .) ]
  ! AND             [ reduce using rule 97 (elemento -> error .) ]
  ! :               [ reduce using rule 97 (elemento -> error .) ]
  ! )               [ reduce using rule 97 (elemento -> error .) ]
  ! ;               [ reduce using rule 97 (elemento -> error .) ]
  ! ,               [ reduce using rule 97 (elemento -> error .) ]

    expressao                      shift and go to state 100
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 101
    relacional                     shift and go to state 42
    elemento                       shift and go to state 102

state 47

    (65) valor -> NOT . valor
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 103
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 48

    (2) programa -> error ID : [ listacmd ] .

    $end            reduce using rule 2 (programa -> error ID : [ listacmd ] .)


state 49

    (23) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (24) cmdatribui -> listaidenti SIM_ATTR . expressao error
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 104
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 50

    (34) cmdselecao -> error expressao . : [ listacmd ] elif else ;
    (52) cmdrepeticao -> error expressao . : [ listacmd ] else ;

    :               shift and go to state 105


state 51

    (25) cmdentrada -> INPUT ( . listaidenti ) ;
    (26) cmdentrada -> INPUT ( . listaidenti error ;
    (28) cmdentrada -> INPUT ( . listaidenti ) error
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 106

state 52

    (27) cmdentrada -> INPUT error . listaidenti ) ;
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 107

state 53

    (17) listaindenti1 -> , . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 108

state 54

    (18) listaindenti1 -> error . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 109

state 55

    (15) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 15 (listaidenti -> ID listaindenti1 .)


state 56

    (16) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 16 (listaindenti1 -> empty .)
    )               reduce using rule 16 (listaindenti1 -> empty .)
    error           reduce using rule 16 (listaindenti1 -> empty .)


state 57

    (33) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (35) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (36) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (37) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (38) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 111
    error           shift and go to state 110


state 58

    (9) listacmd1 -> listacmd .

    ]               reduce using rule 9 (listacmd1 -> listacmd .)
    error           reduce using rule 9 (listacmd1 -> listacmd .)


state 59

    (7) listacmd -> comando listacmd1 .

    ]               reduce using rule 7 (listacmd -> comando listacmd1 .)
    error           reduce using rule 7 (listacmd -> comando listacmd1 .)


state 60

    (8) listacmd1 -> empty .

    ]               reduce using rule 8 (listacmd1 -> empty .)
    error           reduce using rule 8 (listacmd1 -> empty .)


state 61

    (29) cmdsaida -> OUTPUT ( . listaexp ) ;
    (30) cmdsaida -> OUTPUT ( . listaexp error ;
    (32) cmdsaida -> OUTPUT ( . listaexp ) error
    (19) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 112
    listaexp                       shift and go to state 113
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 62

    (31) cmdsaida -> OUTPUT error . listaexp ) ;
    (19) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 112
    listaexp                       shift and go to state 114
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 63

    (3) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 3 (programa -> DEF ID error [ listacmd ] .)


state 64

    (4) programa -> DEF ID : error listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID : error listacmd ] .)


state 65

    (5) programa -> DEF ID : [ listacmd error .

    $end            reduce using rule 5 (programa -> DEF ID : [ listacmd error .)


state 66

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 67

    (97) elemento -> error .
    (98) elemento -> error . expressao error
    (99) elemento -> error . elemento
    (57) expressao -> . valor expressao1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 97 (elemento -> error .)
    *               reduce using rule 97 (elemento -> error .)
    /               reduce using rule 97 (elemento -> error .)
    %               reduce using rule 97 (elemento -> error .)
    SIM_EQ          reduce using rule 97 (elemento -> error .)
    SIM_DIF         reduce using rule 97 (elemento -> error .)
    <               reduce using rule 97 (elemento -> error .)
    SIM_LE          reduce using rule 97 (elemento -> error .)
    >               reduce using rule 97 (elemento -> error .)
    SIM_GE          reduce using rule 97 (elemento -> error .)
    OR              reduce using rule 97 (elemento -> error .)
    AND             reduce using rule 97 (elemento -> error .)
    :               reduce using rule 97 (elemento -> error .)
    )               reduce using rule 97 (elemento -> error .)
    ;               reduce using rule 97 (elemento -> error .)
    ,               reduce using rule 97 (elemento -> error .)
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 115
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47

  ! +               [ reduce using rule 97 (elemento -> error .) ]
  ! -               [ reduce using rule 97 (elemento -> error .) ]
  ! error           [ reduce using rule 97 (elemento -> error .) ]

    expressao                      shift and go to state 100
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 102

state 68

    (96) elemento -> - elemento .

    SIM_POT         reduce using rule 96 (elemento -> - elemento .)
    *               reduce using rule 96 (elemento -> - elemento .)
    /               reduce using rule 96 (elemento -> - elemento .)
    %               reduce using rule 96 (elemento -> - elemento .)
    +               reduce using rule 96 (elemento -> - elemento .)
    -               reduce using rule 96 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 96 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 96 (elemento -> - elemento .)
    <               reduce using rule 96 (elemento -> - elemento .)
    SIM_LE          reduce using rule 96 (elemento -> - elemento .)
    >               reduce using rule 96 (elemento -> - elemento .)
    SIM_GE          reduce using rule 96 (elemento -> - elemento .)
    error           reduce using rule 96 (elemento -> - elemento .)
    OR              reduce using rule 96 (elemento -> - elemento .)
    AND             reduce using rule 96 (elemento -> - elemento .)
    :               reduce using rule 96 (elemento -> - elemento .)
    )               reduce using rule 96 (elemento -> - elemento .)
    ;               reduce using rule 96 (elemento -> - elemento .)
    ,               reduce using rule 96 (elemento -> - elemento .)


state 69

    (53) cmdrepeticao -> WHILE expressao error . [ listacmd ] else ;

    [               shift and go to state 116


state 70

    (51) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE expressao : . error listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao : . [ listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao : . [ listacmd ] else error

    [               shift and go to state 118
    error           shift and go to state 117


state 71

    (95) elemento -> + elemento .

    SIM_POT         reduce using rule 95 (elemento -> + elemento .)
    *               reduce using rule 95 (elemento -> + elemento .)
    /               reduce using rule 95 (elemento -> + elemento .)
    %               reduce using rule 95 (elemento -> + elemento .)
    +               reduce using rule 95 (elemento -> + elemento .)
    -               reduce using rule 95 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 95 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 95 (elemento -> + elemento .)
    <               reduce using rule 95 (elemento -> + elemento .)
    SIM_LE          reduce using rule 95 (elemento -> + elemento .)
    >               reduce using rule 95 (elemento -> + elemento .)
    SIM_GE          reduce using rule 95 (elemento -> + elemento .)
    error           reduce using rule 95 (elemento -> + elemento .)
    OR              reduce using rule 95 (elemento -> + elemento .)
    AND             reduce using rule 95 (elemento -> + elemento .)
    :               reduce using rule 95 (elemento -> + elemento .)
    )               reduce using rule 95 (elemento -> + elemento .)
    ;               reduce using rule 95 (elemento -> + elemento .)
    ,               reduce using rule 95 (elemento -> + elemento .)


state 72

    (82) termo -> fator termo1 .

    +               reduce using rule 82 (termo -> fator termo1 .)
    -               reduce using rule 82 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 82 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 82 (termo -> fator termo1 .)
    <               reduce using rule 82 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 82 (termo -> fator termo1 .)
    >               reduce using rule 82 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 82 (termo -> fator termo1 .)
    error           reduce using rule 82 (termo -> fator termo1 .)
    OR              reduce using rule 82 (termo -> fator termo1 .)
    AND             reduce using rule 82 (termo -> fator termo1 .)
    :               reduce using rule 82 (termo -> fator termo1 .)
    )               reduce using rule 82 (termo -> fator termo1 .)
    ;               reduce using rule 82 (termo -> fator termo1 .)
    ,               reduce using rule 82 (termo -> fator termo1 .)


state 73

    (86) termo1 -> % . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 119

state 74

    (84) termo1 -> * . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 120

state 75

    (85) termo1 -> / . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 121

state 76

    (83) termo1 -> empty .

    +               reduce using rule 83 (termo1 -> empty .)
    -               reduce using rule 83 (termo1 -> empty .)
    SIM_EQ          reduce using rule 83 (termo1 -> empty .)
    SIM_DIF         reduce using rule 83 (termo1 -> empty .)
    <               reduce using rule 83 (termo1 -> empty .)
    SIM_LE          reduce using rule 83 (termo1 -> empty .)
    >               reduce using rule 83 (termo1 -> empty .)
    SIM_GE          reduce using rule 83 (termo1 -> empty .)
    error           reduce using rule 83 (termo1 -> empty .)
    OR              reduce using rule 83 (termo1 -> empty .)
    AND             reduce using rule 83 (termo1 -> empty .)
    :               reduce using rule 83 (termo1 -> empty .)
    )               reduce using rule 83 (termo1 -> empty .)
    ;               reduce using rule 83 (termo1 -> empty .)
    ,               reduce using rule 83 (termo1 -> empty .)


state 77

    (71) operador -> SIM_EQ .

    ID              reduce using rule 71 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 71 (operador -> SIM_EQ .)
    REAL            reduce using rule 71 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 71 (operador -> SIM_EQ .)
    (               reduce using rule 71 (operador -> SIM_EQ .)
    +               reduce using rule 71 (operador -> SIM_EQ .)
    -               reduce using rule 71 (operador -> SIM_EQ .)
    error           reduce using rule 71 (operador -> SIM_EQ .)


state 78

    (69) relacional1 -> operador . aritmetica
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    aritmetica                     shift and go to state 122
    termo                          shift and go to state 41
    elemento                       shift and go to state 44

state 79

    (76) operador -> SIM_GE .

    ID              reduce using rule 76 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 76 (operador -> SIM_GE .)
    REAL            reduce using rule 76 (operador -> SIM_GE .)
    LITERAL         reduce using rule 76 (operador -> SIM_GE .)
    (               reduce using rule 76 (operador -> SIM_GE .)
    +               reduce using rule 76 (operador -> SIM_GE .)
    -               reduce using rule 76 (operador -> SIM_GE .)
    error           reduce using rule 76 (operador -> SIM_GE .)


state 80

    (72) operador -> SIM_DIF .

    ID              reduce using rule 72 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 72 (operador -> SIM_DIF .)
    REAL            reduce using rule 72 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 72 (operador -> SIM_DIF .)
    (               reduce using rule 72 (operador -> SIM_DIF .)
    +               reduce using rule 72 (operador -> SIM_DIF .)
    -               reduce using rule 72 (operador -> SIM_DIF .)
    error           reduce using rule 72 (operador -> SIM_DIF .)


state 81

    (77) operador -> error .

    ID              reduce using rule 77 (operador -> error .)
    INTEIRO         reduce using rule 77 (operador -> error .)
    REAL            reduce using rule 77 (operador -> error .)
    LITERAL         reduce using rule 77 (operador -> error .)
    (               reduce using rule 77 (operador -> error .)
    +               reduce using rule 77 (operador -> error .)
    -               reduce using rule 77 (operador -> error .)
    error           reduce using rule 77 (operador -> error .)


state 82

    (68) relacional -> aritmetica relacional1 .

    OR              reduce using rule 68 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 68 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 68 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 68 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 68 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 68 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 68 (relacional -> aritmetica relacional1 .)


state 83

    (75) operador -> > .

    ID              reduce using rule 75 (operador -> > .)
    INTEIRO         reduce using rule 75 (operador -> > .)
    REAL            reduce using rule 75 (operador -> > .)
    LITERAL         reduce using rule 75 (operador -> > .)
    (               reduce using rule 75 (operador -> > .)
    +               reduce using rule 75 (operador -> > .)
    -               reduce using rule 75 (operador -> > .)
    error           reduce using rule 75 (operador -> > .)


state 84

    (73) operador -> < .

    ID              reduce using rule 73 (operador -> < .)
    INTEIRO         reduce using rule 73 (operador -> < .)
    REAL            reduce using rule 73 (operador -> < .)
    LITERAL         reduce using rule 73 (operador -> < .)
    (               reduce using rule 73 (operador -> < .)
    +               reduce using rule 73 (operador -> < .)
    -               reduce using rule 73 (operador -> < .)
    error           reduce using rule 73 (operador -> < .)


state 85

    (70) relacional1 -> empty .

    OR              reduce using rule 70 (relacional1 -> empty .)
    AND             reduce using rule 70 (relacional1 -> empty .)
    error           reduce using rule 70 (relacional1 -> empty .)
    :               reduce using rule 70 (relacional1 -> empty .)
    )               reduce using rule 70 (relacional1 -> empty .)
    ;               reduce using rule 70 (relacional1 -> empty .)
    ,               reduce using rule 70 (relacional1 -> empty .)


state 86

    (74) operador -> SIM_LE .

    ID              reduce using rule 74 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 74 (operador -> SIM_LE .)
    REAL            reduce using rule 74 (operador -> SIM_LE .)
    LITERAL         reduce using rule 74 (operador -> SIM_LE .)
    (               reduce using rule 74 (operador -> SIM_LE .)
    +               reduce using rule 74 (operador -> SIM_LE .)
    -               reduce using rule 74 (operador -> SIM_LE .)
    error           reduce using rule 74 (operador -> SIM_LE .)


state 87

    (94) elemento -> ( expressao . )

    )               shift and go to state 123


state 88

    (60) expressao1 -> AND . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 124
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 89

    (61) expressao1 -> error . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 125
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 90

    (57) expressao -> valor expressao1 .

    error           reduce using rule 57 (expressao -> valor expressao1 .)
    ;               reduce using rule 57 (expressao -> valor expressao1 .)
    ,               reduce using rule 57 (expressao -> valor expressao1 .)
    )               reduce using rule 57 (expressao -> valor expressao1 .)
    :               reduce using rule 57 (expressao -> valor expressao1 .)


state 91

    (59) expressao1 -> OR . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 126
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 92

    (58) expressao1 -> empty .

    :               reduce using rule 58 (expressao1 -> empty .)
    error           reduce using rule 58 (expressao1 -> empty .)
    )               reduce using rule 58 (expressao1 -> empty .)
    ;               reduce using rule 58 (expressao1 -> empty .)
    ,               reduce using rule 58 (expressao1 -> empty .)


state 93

    (78) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 78 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 78 (aritmetica -> termo aritmetica1 .)


state 94

    (80) aritmetica1 -> + . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    termo                          shift and go to state 127
    elemento                       shift and go to state 44

state 95

    (81) aritmetica1 -> - . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    termo                          shift and go to state 128
    elemento                       shift and go to state 44

state 96

    (79) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 79 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 79 (aritmetica1 -> empty .)
    <               reduce using rule 79 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 79 (aritmetica1 -> empty .)
    >               reduce using rule 79 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 79 (aritmetica1 -> empty .)
    error           reduce using rule 79 (aritmetica1 -> empty .)
    OR              reduce using rule 79 (aritmetica1 -> empty .)
    AND             reduce using rule 79 (aritmetica1 -> empty .)
    :               reduce using rule 79 (aritmetica1 -> empty .)
    )               reduce using rule 79 (aritmetica1 -> empty .)
    ;               reduce using rule 79 (aritmetica1 -> empty .)
    ,               reduce using rule 79 (aritmetica1 -> empty .)


state 97

    (87) fator -> elemento fator1 .

    *               reduce using rule 87 (fator -> elemento fator1 .)
    /               reduce using rule 87 (fator -> elemento fator1 .)
    %               reduce using rule 87 (fator -> elemento fator1 .)
    +               reduce using rule 87 (fator -> elemento fator1 .)
    -               reduce using rule 87 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 87 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 87 (fator -> elemento fator1 .)
    <               reduce using rule 87 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 87 (fator -> elemento fator1 .)
    >               reduce using rule 87 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 87 (fator -> elemento fator1 .)
    error           reduce using rule 87 (fator -> elemento fator1 .)
    OR              reduce using rule 87 (fator -> elemento fator1 .)
    AND             reduce using rule 87 (fator -> elemento fator1 .)
    ,               reduce using rule 87 (fator -> elemento fator1 .)
    )               reduce using rule 87 (fator -> elemento fator1 .)
    :               reduce using rule 87 (fator -> elemento fator1 .)
    ;               reduce using rule 87 (fator -> elemento fator1 .)


state 98

    (89) fator1 -> SIM_POT . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 129

state 99

    (88) fator1 -> empty .

    *               reduce using rule 88 (fator1 -> empty .)
    /               reduce using rule 88 (fator1 -> empty .)
    %               reduce using rule 88 (fator1 -> empty .)
    +               reduce using rule 88 (fator1 -> empty .)
    -               reduce using rule 88 (fator1 -> empty .)
    SIM_EQ          reduce using rule 88 (fator1 -> empty .)
    SIM_DIF         reduce using rule 88 (fator1 -> empty .)
    <               reduce using rule 88 (fator1 -> empty .)
    SIM_LE          reduce using rule 88 (fator1 -> empty .)
    >               reduce using rule 88 (fator1 -> empty .)
    SIM_GE          reduce using rule 88 (fator1 -> empty .)
    error           reduce using rule 88 (fator1 -> empty .)
    OR              reduce using rule 88 (fator1 -> empty .)
    AND             reduce using rule 88 (fator1 -> empty .)
    :               reduce using rule 88 (fator1 -> empty .)
    )               reduce using rule 88 (fator1 -> empty .)
    ;               reduce using rule 88 (fator1 -> empty .)
    ,               reduce using rule 88 (fator1 -> empty .)


state 100

    (98) elemento -> error expressao . error

    error           shift and go to state 130


state 101

    (67) valor -> error valor .
    (57) expressao -> valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
    ,               reduce using rule 67 (valor -> error valor .)
    )               reduce using rule 67 (valor -> error valor .)
    ;               reduce using rule 67 (valor -> error valor .)
    :               reduce using rule 67 (valor -> error valor .)
    OR              shift and go to state 91
    AND             shift and go to state 88
    error           shift and go to state 89

  ! OR              [ reduce using rule 67 (valor -> error valor .) ]
  ! AND             [ reduce using rule 67 (valor -> error valor .) ]
  ! error           [ reduce using rule 67 (valor -> error valor .) ]
  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 90
    empty                          shift and go to state 92

state 102

    (99) elemento -> error elemento .
    (87) fator -> elemento . fator1
    (88) fator1 -> . empty
    (89) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

  ! shift/reduce conflict for SIM_POT resolved as shift
  ! reduce/reduce conflict for * resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for / resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for % resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for + resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for - resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_EQ resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_DIF resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for < resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_LE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for > resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_GE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for error resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for : resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ) resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ; resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for , resolved using rule 6 (empty -> .)
    SIM_POT         shift and go to state 98
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! SIM_POT         [ reduce using rule 99 (elemento -> error elemento .) ]
  ! *               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! /               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! %               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! +               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! -               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! SIM_EQ          [ reduce using rule 99 (elemento -> error elemento .) ]
  ! SIM_DIF         [ reduce using rule 99 (elemento -> error elemento .) ]
  ! <               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! SIM_LE          [ reduce using rule 99 (elemento -> error elemento .) ]
  ! >               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! SIM_GE          [ reduce using rule 99 (elemento -> error elemento .) ]
  ! error           [ reduce using rule 99 (elemento -> error elemento .) ]
  ! OR              [ reduce using rule 99 (elemento -> error elemento .) ]
  ! AND             [ reduce using rule 99 (elemento -> error elemento .) ]
  ! :               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! )               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! ;               [ reduce using rule 99 (elemento -> error elemento .) ]
  ! ,               [ reduce using rule 99 (elemento -> error elemento .) ]

    fator1                         shift and go to state 97
    empty                          shift and go to state 99

state 103

    (65) valor -> NOT valor .

    OR              reduce using rule 65 (valor -> NOT valor .)
    AND             reduce using rule 65 (valor -> NOT valor .)
    error           reduce using rule 65 (valor -> NOT valor .)
    ,               reduce using rule 65 (valor -> NOT valor .)
    )               reduce using rule 65 (valor -> NOT valor .)
    ;               reduce using rule 65 (valor -> NOT valor .)
    :               reduce using rule 65 (valor -> NOT valor .)


state 104

    (23) cmdatribui -> listaidenti SIM_ATTR expressao . ;
    (24) cmdatribui -> listaidenti SIM_ATTR expressao . error

    ;               shift and go to state 131
    error           shift and go to state 132


state 105

    (34) cmdselecao -> error expressao : . [ listacmd ] elif else ;
    (52) cmdrepeticao -> error expressao : . [ listacmd ] else ;

    [               shift and go to state 133


state 106

    (25) cmdentrada -> INPUT ( listaidenti . ) ;
    (26) cmdentrada -> INPUT ( listaidenti . error ;
    (28) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 134
    error           shift and go to state 135


state 107

    (27) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 136


state 108

    (17) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 17 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 17 (listaindenti1 -> , listaidenti .)


state 109

    (18) listaindenti1 -> error listaidenti .

    SIM_ATTR        reduce using rule 18 (listaindenti1 -> error listaidenti .)
    )               reduce using rule 18 (listaindenti1 -> error listaidenti .)
    error           reduce using rule 18 (listaindenti1 -> error listaidenti .)


state 110

    (35) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 137


state 111

    (33) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (36) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (37) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (38) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 139
    error           shift and go to state 138


state 112

    (19) listaexp -> expressao . listaexp1
    (20) listaexp1 -> . , listaexp
    (21) listaexp1 -> . empty
    (22) listaexp1 -> . error listaexp
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 141
    error           shift and go to state 142
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaexp1                      shift and go to state 140
    empty                          shift and go to state 143

state 113

    (29) cmdsaida -> OUTPUT ( listaexp . ) ;
    (30) cmdsaida -> OUTPUT ( listaexp . error ;
    (32) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 144
    error           shift and go to state 145


state 114

    (31) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 146


state 115

    (97) elemento -> error .
    (98) elemento -> error . expressao error
    (99) elemento -> error . elemento
    (66) valor -> error .
    (67) valor -> error . valor
    (57) expressao -> . valor expressao1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1

  ! reduce/reduce conflict for OR resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 66 (valor -> error .)
  ! reduce/reduce conflict for error resolved using rule 66 (valor -> error .)
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 97 (elemento -> error .)
    *               reduce using rule 97 (elemento -> error .)
    /               reduce using rule 97 (elemento -> error .)
    %               reduce using rule 97 (elemento -> error .)
    SIM_EQ          reduce using rule 97 (elemento -> error .)
    SIM_DIF         reduce using rule 97 (elemento -> error .)
    <               reduce using rule 97 (elemento -> error .)
    SIM_LE          reduce using rule 97 (elemento -> error .)
    >               reduce using rule 97 (elemento -> error .)
    SIM_GE          reduce using rule 97 (elemento -> error .)
    :               reduce using rule 97 (elemento -> error .)
    )               reduce using rule 97 (elemento -> error .)
    ;               reduce using rule 97 (elemento -> error .)
    ,               reduce using rule 97 (elemento -> error .)
    OR              reduce using rule 66 (valor -> error .)
    AND             reduce using rule 66 (valor -> error .)
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 115
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47

  ! +               [ reduce using rule 97 (elemento -> error .) ]
  ! -               [ reduce using rule 97 (elemento -> error .) ]
  ! error           [ reduce using rule 97 (elemento -> error .) ]
  ! OR              [ reduce using rule 97 (elemento -> error .) ]
  ! AND             [ reduce using rule 97 (elemento -> error .) ]
  ! error           [ reduce using rule 66 (valor -> error .) ]

    expressao                      shift and go to state 100
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 101
    relacional                     shift and go to state 42
    elemento                       shift and go to state 102

state 116

    (53) cmdrepeticao -> WHILE expressao error [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 147
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 117

    (54) cmdrepeticao -> WHILE expressao : error . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 148
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 118

    (51) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao : [ . listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao : [ . listacmd ] else error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 149
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 119

    (86) termo1 -> % fator . termo1
    (83) termo1 -> . empty
    (84) termo1 -> . * fator termo1
    (85) termo1 -> . / fator termo1
    (86) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 74
    /               shift and go to state 75
    %               shift and go to state 73
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 150
    empty                          shift and go to state 76

state 120

    (84) termo1 -> * fator . termo1
    (83) termo1 -> . empty
    (84) termo1 -> . * fator termo1
    (85) termo1 -> . / fator termo1
    (86) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 74
    /               shift and go to state 75
    %               shift and go to state 73
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 151
    empty                          shift and go to state 76

state 121

    (85) termo1 -> / fator . termo1
    (83) termo1 -> . empty
    (84) termo1 -> . * fator termo1
    (85) termo1 -> . / fator termo1
    (86) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 74
    /               shift and go to state 75
    %               shift and go to state 73
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 152
    empty                          shift and go to state 76

state 122

    (69) relacional1 -> operador aritmetica .

    OR              reduce using rule 69 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 69 (relacional1 -> operador aritmetica .)
    error           reduce using rule 69 (relacional1 -> operador aritmetica .)
    :               reduce using rule 69 (relacional1 -> operador aritmetica .)
    )               reduce using rule 69 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 69 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 69 (relacional1 -> operador aritmetica .)


state 123

    (94) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 94 (elemento -> ( expressao ) .)
    *               reduce using rule 94 (elemento -> ( expressao ) .)
    /               reduce using rule 94 (elemento -> ( expressao ) .)
    %               reduce using rule 94 (elemento -> ( expressao ) .)
    +               reduce using rule 94 (elemento -> ( expressao ) .)
    -               reduce using rule 94 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 94 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 94 (elemento -> ( expressao ) .)
    <               reduce using rule 94 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 94 (elemento -> ( expressao ) .)
    >               reduce using rule 94 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 94 (elemento -> ( expressao ) .)
    error           reduce using rule 94 (elemento -> ( expressao ) .)
    OR              reduce using rule 94 (elemento -> ( expressao ) .)
    AND             reduce using rule 94 (elemento -> ( expressao ) .)
    :               reduce using rule 94 (elemento -> ( expressao ) .)
    )               reduce using rule 94 (elemento -> ( expressao ) .)
    ;               reduce using rule 94 (elemento -> ( expressao ) .)
    ,               reduce using rule 94 (elemento -> ( expressao ) .)


state 124

    (60) expressao1 -> AND valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 91
    AND             shift and go to state 88
    error           shift and go to state 89
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 153
    empty                          shift and go to state 92

state 125

    (61) expressao1 -> error valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 91
    AND             shift and go to state 88
    error           shift and go to state 89
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 154
    empty                          shift and go to state 92

state 126

    (59) expressao1 -> OR valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 91
    AND             shift and go to state 88
    error           shift and go to state 89
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 155
    empty                          shift and go to state 92

state 127

    (80) aritmetica1 -> + termo . aritmetica1
    (79) aritmetica1 -> . empty
    (80) aritmetica1 -> . + termo aritmetica1
    (81) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 94
    -               shift and go to state 95
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 156
    empty                          shift and go to state 96

state 128

    (81) aritmetica1 -> - termo . aritmetica1
    (79) aritmetica1 -> . empty
    (80) aritmetica1 -> . + termo aritmetica1
    (81) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 94
    -               shift and go to state 95
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 157
    empty                          shift and go to state 96

state 129

    (89) fator1 -> SIM_POT elemento . fator1
    (88) fator1 -> . empty
    (89) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 98
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 158
    empty                          shift and go to state 99

state 130

    (98) elemento -> error expressao error .

    SIM_POT         reduce using rule 98 (elemento -> error expressao error .)
    *               reduce using rule 98 (elemento -> error expressao error .)
    /               reduce using rule 98 (elemento -> error expressao error .)
    %               reduce using rule 98 (elemento -> error expressao error .)
    +               reduce using rule 98 (elemento -> error expressao error .)
    -               reduce using rule 98 (elemento -> error expressao error .)
    SIM_EQ          reduce using rule 98 (elemento -> error expressao error .)
    SIM_DIF         reduce using rule 98 (elemento -> error expressao error .)
    <               reduce using rule 98 (elemento -> error expressao error .)
    SIM_LE          reduce using rule 98 (elemento -> error expressao error .)
    >               reduce using rule 98 (elemento -> error expressao error .)
    SIM_GE          reduce using rule 98 (elemento -> error expressao error .)
    error           reduce using rule 98 (elemento -> error expressao error .)
    OR              reduce using rule 98 (elemento -> error expressao error .)
    AND             reduce using rule 98 (elemento -> error expressao error .)
    :               reduce using rule 98 (elemento -> error expressao error .)
    )               reduce using rule 98 (elemento -> error expressao error .)
    ;               reduce using rule 98 (elemento -> error expressao error .)
    ,               reduce using rule 98 (elemento -> error expressao error .)


state 131

    (23) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 132

    (24) cmdatribui -> listaidenti SIM_ATTR expressao error .

    INPUT           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    OUTPUT          reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    IF              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    error           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    WHILE           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ID              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ]               reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)


state 133

    (34) cmdselecao -> error expressao : [ . listacmd ] elif else ;
    (52) cmdrepeticao -> error expressao : [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 159
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 134

    (25) cmdentrada -> INPUT ( listaidenti ) . ;
    (28) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 161
    error           shift and go to state 160


state 135

    (26) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 162


state 136

    (27) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 163


state 137

    (35) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 164
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 138

    (36) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 165
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 139

    (33) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (37) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (38) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 166
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 140

    (19) listaexp -> expressao listaexp1 .

    )               reduce using rule 19 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 19 (listaexp -> expressao listaexp1 .)


state 141

    (20) listaexp1 -> , . listaexp
    (19) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 112
    listaexp                       shift and go to state 167
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 142

    (22) listaexp1 -> error . listaexp
    (19) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 112
    listaexp                       shift and go to state 168
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 143

    (21) listaexp1 -> empty .

    )               reduce using rule 21 (listaexp1 -> empty .)
    error           reduce using rule 21 (listaexp1 -> empty .)


state 144

    (29) cmdsaida -> OUTPUT ( listaexp ) . ;
    (32) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 170
    error           shift and go to state 169


state 145

    (30) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 171


state 146

    (31) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 172


state 147

    (53) cmdrepeticao -> WHILE expressao error [ listacmd . ] else ;

    ]               shift and go to state 173


state 148

    (54) cmdrepeticao -> WHILE expressao : error listacmd . ] else ;

    ]               shift and go to state 174


state 149

    (51) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;
    (55) cmdrepeticao -> WHILE expressao : [ listacmd . error else ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd . ] else error

    ]               shift and go to state 176
    error           shift and go to state 175


state 150

    (86) termo1 -> % fator termo1 .

    +               reduce using rule 86 (termo1 -> % fator termo1 .)
    -               reduce using rule 86 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 86 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 86 (termo1 -> % fator termo1 .)
    <               reduce using rule 86 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 86 (termo1 -> % fator termo1 .)
    >               reduce using rule 86 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 86 (termo1 -> % fator termo1 .)
    error           reduce using rule 86 (termo1 -> % fator termo1 .)
    OR              reduce using rule 86 (termo1 -> % fator termo1 .)
    AND             reduce using rule 86 (termo1 -> % fator termo1 .)
    :               reduce using rule 86 (termo1 -> % fator termo1 .)
    )               reduce using rule 86 (termo1 -> % fator termo1 .)
    ;               reduce using rule 86 (termo1 -> % fator termo1 .)
    ,               reduce using rule 86 (termo1 -> % fator termo1 .)


state 151

    (84) termo1 -> * fator termo1 .

    +               reduce using rule 84 (termo1 -> * fator termo1 .)
    -               reduce using rule 84 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 84 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 84 (termo1 -> * fator termo1 .)
    <               reduce using rule 84 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 84 (termo1 -> * fator termo1 .)
    >               reduce using rule 84 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 84 (termo1 -> * fator termo1 .)
    error           reduce using rule 84 (termo1 -> * fator termo1 .)
    OR              reduce using rule 84 (termo1 -> * fator termo1 .)
    AND             reduce using rule 84 (termo1 -> * fator termo1 .)
    :               reduce using rule 84 (termo1 -> * fator termo1 .)
    )               reduce using rule 84 (termo1 -> * fator termo1 .)
    ;               reduce using rule 84 (termo1 -> * fator termo1 .)
    ,               reduce using rule 84 (termo1 -> * fator termo1 .)


state 152

    (85) termo1 -> / fator termo1 .

    +               reduce using rule 85 (termo1 -> / fator termo1 .)
    -               reduce using rule 85 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 85 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 85 (termo1 -> / fator termo1 .)
    <               reduce using rule 85 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 85 (termo1 -> / fator termo1 .)
    >               reduce using rule 85 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 85 (termo1 -> / fator termo1 .)
    error           reduce using rule 85 (termo1 -> / fator termo1 .)
    OR              reduce using rule 85 (termo1 -> / fator termo1 .)
    AND             reduce using rule 85 (termo1 -> / fator termo1 .)
    :               reduce using rule 85 (termo1 -> / fator termo1 .)
    )               reduce using rule 85 (termo1 -> / fator termo1 .)
    ;               reduce using rule 85 (termo1 -> / fator termo1 .)
    ,               reduce using rule 85 (termo1 -> / fator termo1 .)


state 153

    (60) expressao1 -> AND valor expressao1 .

    :               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 60 (expressao1 -> AND valor expressao1 .)


state 154

    (61) expressao1 -> error valor expressao1 .

    :               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 61 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 61 (expressao1 -> error valor expressao1 .)


state 155

    (59) expressao1 -> OR valor expressao1 .

    :               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 59 (expressao1 -> OR valor expressao1 .)


state 156

    (80) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 80 (aritmetica1 -> + termo aritmetica1 .)


state 157

    (81) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 81 (aritmetica1 -> - termo aritmetica1 .)


state 158

    (89) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 89 (fator1 -> SIM_POT elemento fator1 .)


state 159

    (34) cmdselecao -> error expressao : [ listacmd . ] elif else ;
    (52) cmdrepeticao -> error expressao : [ listacmd . ] else ;

    ]               shift and go to state 177


state 160

    (28) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)


state 161

    (25) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 162

    (26) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)


state 163

    (27) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)


state 164

    (35) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 178


state 165

    (36) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 179


state 166

    (33) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (37) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (38) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 181
    error           shift and go to state 180


state 167

    (20) listaexp1 -> , listaexp .

    )               reduce using rule 20 (listaexp1 -> , listaexp .)
    error           reduce using rule 20 (listaexp1 -> , listaexp .)


state 168

    (22) listaexp1 -> error listaexp .

    )               reduce using rule 22 (listaexp1 -> error listaexp .)
    error           reduce using rule 22 (listaexp1 -> error listaexp .)


state 169

    (32) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 170

    (29) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 171

    (30) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 172

    (31) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 173

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 182

state 174

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 186

state 175

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 187

state 176

    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] . else error
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    empty                          shift and go to state 185
    else                           shift and go to state 188

state 177

    (34) cmdselecao -> error expressao : [ listacmd ] . elif else ;
    (52) cmdrepeticao -> error expressao : [ listacmd ] . else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 192
    ELSE            shift and go to state 184
    ;               reduce using rule 6 (empty -> .)

  ! ELSE            [ reduce using rule 6 (empty -> .) ]
  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 189
    empty                          shift and go to state 193
    else                           shift and go to state 191

state 178

    (35) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 194
    empty                          shift and go to state 196

state 179

    (36) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 197
    empty                          shift and go to state 196

state 180

    (37) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 198
    empty                          shift and go to state 196

state 181

    (33) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (38) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 199
    empty                          shift and go to state 196

state 182

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] else . ;

    ;               shift and go to state 200


state 183

    (47) else -> error . : [ listacmd ]

    :               shift and go to state 201


state 184

    (46) else -> ELSE . : [ listacmd ]
    (48) else -> ELSE . error [ listacmd ]
    (49) else -> ELSE . : error listacmd ]
    (50) else -> ELSE . : [ listacmd error

    :               shift and go to state 203
    error           shift and go to state 202


state 185

    (45) else -> empty .

    ;               reduce using rule 45 (else -> empty .)
    error           reduce using rule 45 (else -> empty .)


state 186

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] else . ;

    ;               shift and go to state 204


state 187

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error else . ;

    ;               shift and go to state 205


state 188

    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] else . error

    ;               shift and go to state 207
    error           shift and go to state 206


state 189

    (34) cmdselecao -> error expressao : [ listacmd ] elif . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 208

state 190

    (40) elif -> ELIF . expressao : [ listacmd ] elif
    (42) elif -> ELIF . expressao error [ listacmd ] elif
    (43) elif -> ELIF . expressao : error listacmd ] elif
    (44) elif -> ELIF . expressao : [ listacmd error elif
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 209
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 191

    (52) cmdrepeticao -> error expressao : [ listacmd ] else . ;

    ;               shift and go to state 210


state 192

    (41) elif -> error . expressao : [ listacmd ] elif
    (47) else -> error . : [ listacmd ]
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    :               shift and go to state 201
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 211
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 193

    (39) elif -> empty .
    (45) else -> empty .

  ! reduce/reduce conflict for ; resolved using rule 39 (elif -> empty .)
    ELSE            reduce using rule 39 (elif -> empty .)
    error           reduce using rule 39 (elif -> empty .)
    ;               reduce using rule 39 (elif -> empty .)

  ! ;               [ reduce using rule 45 (else -> empty .) ]


state 194

    (35) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 212

state 195

    (41) elif -> error . expressao : [ listacmd ] elif
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) valor -> . error
    (67) valor -> . error valor
    (68) relacional -> . aritmetica relacional1
    (78) aritmetica -> . termo aritmetica1
    (82) termo -> . fator termo1
    (87) fator -> . elemento fator1
    (90) elemento -> . ID
    (91) elemento -> . INTEIRO
    (92) elemento -> . REAL
    (93) elemento -> . LITERAL
    (94) elemento -> . ( expressao )
    (95) elemento -> . + elemento
    (96) elemento -> . - elemento
    (97) elemento -> . error
    (98) elemento -> . error expressao error
    (99) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 211
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 196

    (39) elif -> empty .

    ELSE            reduce using rule 39 (elif -> empty .)
    error           reduce using rule 39 (elif -> empty .)
    ;               reduce using rule 39 (elif -> empty .)


state 197

    (36) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 213

state 198

    (37) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 185
    else                           shift and go to state 214

state 199

    (33) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (38) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (45) else -> . empty
    (46) else -> . ELSE : [ listacmd ]
    (47) else -> . error : [ listacmd ]
    (48) else -> . ELSE error [ listacmd ]
    (49) else -> . ELSE : error listacmd ]
    (50) else -> . ELSE : [ listacmd error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELSE            shift and go to state 184
    error           shift and go to state 183
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    empty                          shift and go to state 185
    else                           shift and go to state 215

state 200

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .

    INPUT           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    OUTPUT          reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    IF              reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    error           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    WHILE           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ID              reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ]               reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)


state 201

    (47) else -> error : . [ listacmd ]

    [               shift and go to state 216


state 202

    (48) else -> ELSE error . [ listacmd ]

    [               shift and go to state 217


state 203

    (46) else -> ELSE : . [ listacmd ]
    (49) else -> ELSE : . error listacmd ]
    (50) else -> ELSE : . [ listacmd error

    [               shift and go to state 219
    error           shift and go to state 218


state 204

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] else ; .

    INPUT           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    OUTPUT          reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    IF              reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    error           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    WHILE           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ID              reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ]               reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)


state 205

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error else ; .

    INPUT           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    OUTPUT          reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    IF              reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    error           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    WHILE           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ID              reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ]               reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)


state 206

    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] else error .

    INPUT           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    OUTPUT          reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    IF              reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    error           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    WHILE           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ID              reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ]               reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)


state 207

    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 208

    (34) cmdselecao -> error expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 220


state 209

    (40) elif -> ELIF expressao . : [ listacmd ] elif
    (42) elif -> ELIF expressao . error [ listacmd ] elif
    (43) elif -> ELIF expressao . : error listacmd ] elif
    (44) elif -> ELIF expressao . : [ listacmd error elif

    :               shift and go to state 222
    error           shift and go to state 221


state 210

    (52) cmdrepeticao -> error expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    IF              reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    error           reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    ID              reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)
    ]               reduce using rule 52 (cmdrepeticao -> error expressao : [ listacmd ] else ; .)


state 211

    (41) elif -> error expressao . : [ listacmd ] elif

    :               shift and go to state 223


state 212

    (35) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 224


state 213

    (36) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 225


state 214

    (37) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 226


state 215

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (38) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 228
    error           shift and go to state 227


state 216

    (47) else -> error : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 229
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 217

    (48) else -> ELSE error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 230
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 218

    (49) else -> ELSE : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 231
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 219

    (46) else -> ELSE : [ . listacmd ]
    (50) else -> ELSE : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 232
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 220

    (34) cmdselecao -> error expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)


state 221

    (42) elif -> ELIF expressao error . [ listacmd ] elif

    [               shift and go to state 233


state 222

    (40) elif -> ELIF expressao : . [ listacmd ] elif
    (43) elif -> ELIF expressao : . error listacmd ] elif
    (44) elif -> ELIF expressao : . [ listacmd error elif

    [               shift and go to state 235
    error           shift and go to state 234


state 223

    (41) elif -> error expressao : . [ listacmd ] elif

    [               shift and go to state 236


state 224

    (35) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 225

    (36) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 226

    (37) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 227

    (38) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 228

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 229

    (47) else -> error : [ listacmd . ]

    ]               shift and go to state 237


state 230

    (48) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 238


state 231

    (49) else -> ELSE : error listacmd . ]

    ]               shift and go to state 239


state 232

    (46) else -> ELSE : [ listacmd . ]
    (50) else -> ELSE : [ listacmd . error

    ]               shift and go to state 241
    error           shift and go to state 240


state 233

    (42) elif -> ELIF expressao error [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 242
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 234

    (43) elif -> ELIF expressao : error . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 243
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 235

    (40) elif -> ELIF expressao : [ . listacmd ] elif
    (44) elif -> ELIF expressao : [ . listacmd error elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 244
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 236

    (41) elif -> error expressao : [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (52) cmdrepeticao -> . error expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 245
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 237

    (47) else -> error : [ listacmd ] .

    ;               reduce using rule 47 (else -> error : [ listacmd ] .)
    error           reduce using rule 47 (else -> error : [ listacmd ] .)


state 238

    (48) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 48 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 48 (else -> ELSE error [ listacmd ] .)


state 239

    (49) else -> ELSE : error listacmd ] .

    ;               reduce using rule 49 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 49 (else -> ELSE : error listacmd ] .)


state 240

    (50) else -> ELSE : [ listacmd error .

    ;               reduce using rule 50 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 50 (else -> ELSE : [ listacmd error .)


state 241

    (46) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 46 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 46 (else -> ELSE : [ listacmd ] .)


state 242

    (42) elif -> ELIF expressao error [ listacmd . ] elif

    ]               shift and go to state 246


state 243

    (43) elif -> ELIF expressao : error listacmd . ] elif

    ]               shift and go to state 247


state 244

    (40) elif -> ELIF expressao : [ listacmd . ] elif
    (44) elif -> ELIF expressao : [ listacmd . error elif

    ]               shift and go to state 249
    error           shift and go to state 248


state 245

    (41) elif -> error expressao : [ listacmd . ] elif

    ]               shift and go to state 250


state 246

    (42) elif -> ELIF expressao error [ listacmd ] . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 251
    empty                          shift and go to state 196

state 247

    (43) elif -> ELIF expressao : error listacmd ] . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 252
    empty                          shift and go to state 196

state 248

    (44) elif -> ELIF expressao : [ listacmd error . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 253
    empty                          shift and go to state 196

state 249

    (40) elif -> ELIF expressao : [ listacmd ] . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 254
    empty                          shift and go to state 196

state 250

    (41) elif -> error expressao : [ listacmd ] . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (41) elif -> . error expressao : [ listacmd ] elif
    (42) elif -> . ELIF expressao error [ listacmd ] elif
    (43) elif -> . ELIF expressao : error listacmd ] elif
    (44) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ELIF            shift and go to state 190
    error           shift and go to state 195
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    elif                           shift and go to state 255
    empty                          shift and go to state 196

state 251

    (42) elif -> ELIF expressao error [ listacmd ] elif .

    ELSE            reduce using rule 42 (elif -> ELIF expressao error [ listacmd ] elif .)
    error           reduce using rule 42 (elif -> ELIF expressao error [ listacmd ] elif .)
    ;               reduce using rule 42 (elif -> ELIF expressao error [ listacmd ] elif .)


state 252

    (43) elif -> ELIF expressao : error listacmd ] elif .

    ELSE            reduce using rule 43 (elif -> ELIF expressao : error listacmd ] elif .)
    error           reduce using rule 43 (elif -> ELIF expressao : error listacmd ] elif .)
    ;               reduce using rule 43 (elif -> ELIF expressao : error listacmd ] elif .)


state 253

    (44) elif -> ELIF expressao : [ listacmd error elif .

    ELSE            reduce using rule 44 (elif -> ELIF expressao : [ listacmd error elif .)
    error           reduce using rule 44 (elif -> ELIF expressao : [ listacmd error elif .)
    ;               reduce using rule 44 (elif -> ELIF expressao : [ listacmd error elif .)


state 254

    (40) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)


state 255

    (41) elif -> error expressao : [ listacmd ] elif .

    ELSE            reduce using rule 41 (elif -> error expressao : [ listacmd ] elif .)
    error           reduce using rule 41 (elif -> error expressao : [ listacmd ] elif .)
    ;               reduce using rule 41 (elif -> error expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 22 resolved as shift
WARNING: shift/reduce conflict for error in state 25 resolved as shift
WARNING: shift/reduce conflict for error in state 37 resolved as shift
WARNING: shift/reduce conflict for error in state 39 resolved as shift
WARNING: shift/reduce conflict for error in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 46 resolved as shift
WARNING: shift/reduce conflict for - in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 67 resolved as shift
WARNING: shift/reduce conflict for - in state 67 resolved as shift
WARNING: shift/reduce conflict for error in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 101 resolved as shift
WARNING: shift/reduce conflict for AND in state 101 resolved as shift
WARNING: shift/reduce conflict for error in state 101 resolved as shift
WARNING: shift/reduce conflict for error in state 101 resolved as shift
WARNING: shift/reduce conflict for SIM_POT in state 102 resolved as shift
WARNING: shift/reduce conflict for error in state 112 resolved as shift
WARNING: shift/reduce conflict for + in state 115 resolved as shift
WARNING: shift/reduce conflict for - in state 115 resolved as shift
WARNING: shift/reduce conflict for error in state 115 resolved as shift
WARNING: shift/reduce conflict for error in state 124 resolved as shift
WARNING: shift/reduce conflict for error in state 125 resolved as shift
WARNING: shift/reduce conflict for error in state 126 resolved as shift
WARNING: shift/reduce conflict for error in state 176 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 177 resolved as shift
WARNING: shift/reduce conflict for error in state 177 resolved as shift
WARNING: shift/reduce conflict for error in state 178 resolved as shift
WARNING: shift/reduce conflict for error in state 179 resolved as shift
WARNING: shift/reduce conflict for error in state 180 resolved as shift
WARNING: shift/reduce conflict for error in state 181 resolved as shift
WARNING: shift/reduce conflict for error in state 199 resolved as shift
WARNING: shift/reduce conflict for error in state 246 resolved as shift
WARNING: shift/reduce conflict for error in state 247 resolved as shift
WARNING: shift/reduce conflict for error in state 248 resolved as shift
WARNING: shift/reduce conflict for error in state 249 resolved as shift
WARNING: shift/reduce conflict for error in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 46
WARNING: reduce/reduce conflict in state 102 resolved using rule (empty -> <empty>)
WARNING: rejected rule (elemento -> error elemento) in state 102
WARNING: reduce/reduce conflict in state 115 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 115
WARNING: reduce/reduce conflict in state 193 resolved using rule (elif -> empty)
WARNING: rejected rule (else -> empty) in state 193
WARNING: Rule (elemento -> error elemento) is never reduced
