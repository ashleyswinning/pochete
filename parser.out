Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    SIMBOLO
    RESERVADO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID action2 : [ listacmd ]
Rule 2     programa -> empty
Rule 3     action2 -> <empty>
Rule 4     programa -> DEF ID action2 error [ listacmd ]
Rule 5     programa -> DEF ID action2 : error listacmd ]
Rule 6     programa -> DEF ID action2 : [ listacmd error
Rule 7     programa -> DEF
Rule 8     programa -> DEF ID
Rule 9     programa -> DEF ID action2 :
Rule 10    programa -> DEF ID action2 : [
Rule 11    programa -> DEF ID action2 : [ listacmd
Rule 12    empty -> <empty>
Rule 13    listacmd -> comando listacmd1
Rule 14    listacmd1 -> empty
Rule 15    listacmd1 -> listacmd
Rule 16    comando -> cmdatribui
Rule 17    comando -> cmdentrada
Rule 18    comando -> cmdsaida
Rule 19    comando -> cmdselecao
Rule 20    comando -> cmdrepeticao
Rule 21    listaidenti -> ID listaindenti1
Rule 22    listaindenti1 -> empty action5
Rule 23    listaindenti1 -> , action5 listaidenti
Rule 24    action5 -> <empty>
Rule 25    listaexp -> expressao listaexp1
Rule 26    listaexp1 -> , action7 listaexp
Rule 27    listaexp1 -> empty action7
Rule 28    action7 -> <empty>
Rule 29    listaexp1 -> error action7 listaexp
Rule 30    cmdatribui -> listaidenti SIM_ATTR expressao action4 ;
Rule 31    action4 -> <empty>
Rule 32    cmdentrada -> INPUT ( listaidenti action6 ) ;
Rule 33    action6 -> <empty>
Rule 34    cmdentrada -> INPUT ( listaidenti action6 error ;
Rule 35    cmdentrada -> INPUT error listaidenti action6 ) ;
Rule 36    cmdentrada -> INPUT ( listaidenti action6 ) error
Rule 37    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 38    cmdsaida -> OUTPUT ( listaexp error ;
Rule 39    cmdsaida -> OUTPUT error listaexp ) ;
Rule 40    cmdsaida -> OUTPUT ( listaexp ) error
Rule 41    cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ;
Rule 42    action8 -> <empty>
Rule 43    action9 -> <empty>
Rule 44    cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ;
Rule 45    cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ;
Rule 46    cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ;
Rule 47    cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error
Rule 48    elif -> empty
Rule 49    elif -> action10 ELIF expressao action11 : [ listacmd ] elif
Rule 50    action10 -> <empty>
Rule 51    action11 -> <empty>
Rule 52    elif -> action10 ELIF expressao action11 error [ listacmd ] elif
Rule 53    elif -> action10 ELIF expressao action11 : error listacmd ] elif
Rule 54    elif -> action10 ELIF expressao action11 : [ listacmd error elif
Rule 55    else -> empty
Rule 56    else -> action12 ELSE : [ listacmd ]
Rule 57    action12 -> <empty>
Rule 58    else -> ELSE error [ listacmd ]
Rule 59    else -> ELSE : error listacmd ]
Rule 60    else -> ELSE : [ listacmd error
Rule 61    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ;
Rule 62    action13 -> <empty>
Rule 63    action14 -> <empty>
Rule 64    action15 -> <empty>
Rule 65    cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ;
Rule 66    cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ;
Rule 67    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ;
Rule 68    cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error
Rule 69    expressao -> valor expressao1
Rule 70    expressao1 -> empty
Rule 71    expressao1 -> OR valor action_16 expressao1
Rule 72    expressao1 -> AND valor action_17 expressao1
Rule 73    action_16 -> <empty>
Rule 74    action_17 -> <empty>
Rule 75    expressao1 -> error valor expressao1
Rule 76    valor -> relacional
Rule 77    valor -> TRUE action18
Rule 78    valor -> FALSE action19
Rule 79    valor -> NOT valor action20
Rule 80    action18 -> <empty>
Rule 81    action19 -> <empty>
Rule 82    action20 -> <empty>
Rule 83    relacional -> aritmetica relacional1
Rule 84    relacional1 -> operador action21 aritmetica action22
Rule 85    relacional1 -> empty
Rule 86    action21 -> <empty>
Rule 87    action22 -> <empty>
Rule 88    operador -> SIM_EQ
Rule 89    operador -> SIM_DIF
Rule 90    operador -> <
Rule 91    operador -> SIM_LE
Rule 92    operador -> >
Rule 93    operador -> SIM_GE
Rule 94    aritmetica -> termo aritmetica1
Rule 95    aritmetica1 -> empty
Rule 96    aritmetica1 -> + termo aritmetica1 p_action23
Rule 97    aritmetica1 -> - termo aritmetica1 p_action24
Rule 98    termo -> fator termo1
Rule 99    termo1 -> empty
Rule 100   termo1 -> * fator termo1 p_action25
Rule 101   termo1 -> / fator termo1 p_action26
Rule 102   termo1 -> % fator termo1 p_action27
Rule 103   fator -> elemento fator1
Rule 104   fator1 -> empty
Rule 105   fator1 -> SIM_POT elemento action28 fator1
Rule 106   action28 -> <empty>
Rule 107   elemento -> ID action29
Rule 108   elemento -> INTEIRO action30
Rule 109   elemento -> BINARIO action31
Rule 110   elemento -> OCTAL action32
Rule 111   elemento -> HEXADECIMAL action33
Rule 112   elemento -> REAL action34
Rule 113   elemento -> LITERAL action35
Rule 114   elemento -> ( expressao )
Rule 115   elemento -> + elemento
Rule 116   elemento -> - elemento action36
Rule 117   action29 -> <empty>
Rule 118   action30 -> <empty>
Rule 119   action31 -> <empty>
Rule 120   action32 -> <empty>
Rule 121   action33 -> <empty>
Rule 122   action34 -> <empty>
Rule 123   action35 -> <empty>
Rule 124   action36 -> <empty>
Rule 125   p_action23 -> <empty>
Rule 126   p_action24 -> <empty>
Rule 127   p_action25 -> <empty>
Rule 128   p_action26 -> <empty>
Rule 129   p_action27 -> <empty>

Terminals, with rules where they appear

%                    : 102
(                    : 32 34 36 37 38 40 114
)                    : 32 35 36 37 39 40 114
*                    : 100
+                    : 96 115
,                    : 23 26
-                    : 97 116
/                    : 101
:                    : 1 5 6 9 10 11 41 45 46 47 49 53 54 56 59 60 61 66 67 68
;                    : 30 32 34 35 37 38 39 41 44 45 46 61 65 66 67
<                    : 90
>                    : 92
AND                  : 72
BINARIO              : 109
DEF                  : 1 4 5 6 7 8 9 10 11
ELIF                 : 49 52 53 54
ELSE                 : 56 58 59 60
FALSE                : 78
HEXADECIMAL          : 111
ID                   : 1 4 5 6 8 9 10 11 21 107
IF                   : 41 44 45 46 47
INPUT                : 32 34 35 36
INTEIRO              : 108
LITERAL              : 113
NOT                  : 79
OCTAL                : 110
OR                   : 71
OUTPUT               : 37 38 39 40
REAL                 : 112
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 30
SIM_DIF              : 89
SIM_EQ               : 88
SIM_GE               : 93
SIM_LE               : 91
SIM_POT              : 105
TRUE                 : 77
WHILE                : 61 65 66 67 68
[                    : 1 4 6 10 11 41 44 46 47 49 52 54 56 58 60 61 65 67 68
]                    : 1 4 5 41 44 45 47 49 52 53 56 58 59 61 65 66 68
error                : 4 5 6 29 34 35 36 38 39 40 44 45 46 47 52 53 54 58 59 60 65 66 67 68 75

Nonterminals, with rules where they appear

action10             : 49 52 53 54
action11             : 49 52 53 54
action12             : 56
action13             : 61 65 66 67 68
action14             : 61 65 66 67 68
action15             : 61 65 66 67 68
action18             : 77
action19             : 78
action2              : 1 4 5 6 9 10 11
action20             : 79
action21             : 84
action22             : 84
action28             : 105
action29             : 107
action30             : 108
action31             : 109
action32             : 110
action33             : 111
action34             : 112
action35             : 113
action36             : 116
action4              : 30
action5              : 22 23
action6              : 32 34 35 36
action7              : 26 27 29
action8              : 41 44 45 46 47
action9              : 41 44 45 46 47
action_16            : 71
action_17            : 72
aritmetica           : 83 84
aritmetica1          : 94 96 97
cmdatribui           : 16
cmdentrada           : 17
cmdrepeticao         : 20
cmdsaida             : 18
cmdselecao           : 19
comando              : 13
elemento             : 103 105 115 116
elif                 : 41 44 45 46 47 49 52 53 54
else                 : 41 44 45 46 47 61 65 66 67 68
empty                : 2 14 22 27 48 55 70 85 95 99 104
expressao            : 25 30 41 44 45 46 47 49 52 53 54 61 65 66 67 68 114
expressao1           : 69 71 72 75
fator                : 98 100 101 102
fator1               : 103 105
listacmd             : 1 4 5 6 11 15 41 44 45 46 47 49 52 53 54 56 58 59 60 61 65 66 67 68
listacmd1            : 13
listaexp             : 26 29 37 38 39 40
listaexp1            : 25
listaidenti          : 23 30 32 34 35 36
listaindenti1        : 21
operador             : 84
p_action23           : 96
p_action24           : 97
p_action25           : 100
p_action26           : 101
p_action27           : 102
programa             : 0
relacional           : 76
relacional1          : 83
termo                : 94 96 97
termo1               : 98 100 101 102
valor                : 69 71 72 75 79

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID action2 : [ listacmd ]
    (2) programa -> . empty
    (4) programa -> . DEF ID action2 error [ listacmd ]
    (5) programa -> . DEF ID action2 : error listacmd ]
    (6) programa -> . DEF ID action2 : [ listacmd error
    (7) programa -> . DEF
    (8) programa -> . DEF ID
    (9) programa -> . DEF ID action2 :
    (10) programa -> . DEF ID action2 : [
    (11) programa -> . DEF ID action2 : [ listacmd
    (12) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 12 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID action2 : [ listacmd ]
    (4) programa -> DEF . ID action2 error [ listacmd ]
    (5) programa -> DEF . ID action2 : error listacmd ]
    (6) programa -> DEF . ID action2 : [ listacmd error
    (7) programa -> DEF .
    (8) programa -> DEF . ID
    (9) programa -> DEF . ID action2 :
    (10) programa -> DEF . ID action2 : [
    (11) programa -> DEF . ID action2 : [ listacmd

    ID              shift and go to state 4
    $end            reduce using rule 7 (programa -> DEF .)


state 4

    (1) programa -> DEF ID . action2 : [ listacmd ]
    (4) programa -> DEF ID . action2 error [ listacmd ]
    (5) programa -> DEF ID . action2 : error listacmd ]
    (6) programa -> DEF ID . action2 : [ listacmd error
    (8) programa -> DEF ID .
    (9) programa -> DEF ID . action2 :
    (10) programa -> DEF ID . action2 : [
    (11) programa -> DEF ID . action2 : [ listacmd
    (3) action2 -> .

    $end            reduce using rule 8 (programa -> DEF ID .)
    :               reduce using rule 3 (action2 -> .)
    error           reduce using rule 3 (action2 -> .)

    action2                        shift and go to state 5

state 5

    (1) programa -> DEF ID action2 . : [ listacmd ]
    (4) programa -> DEF ID action2 . error [ listacmd ]
    (5) programa -> DEF ID action2 . : error listacmd ]
    (6) programa -> DEF ID action2 . : [ listacmd error
    (9) programa -> DEF ID action2 . :
    (10) programa -> DEF ID action2 . : [
    (11) programa -> DEF ID action2 . : [ listacmd

    :               shift and go to state 7
    error           shift and go to state 6


state 6

    (4) programa -> DEF ID action2 error . [ listacmd ]

    [               shift and go to state 8


state 7

    (1) programa -> DEF ID action2 : . [ listacmd ]
    (5) programa -> DEF ID action2 : . error listacmd ]
    (6) programa -> DEF ID action2 : . [ listacmd error
    (9) programa -> DEF ID action2 : .
    (10) programa -> DEF ID action2 : . [
    (11) programa -> DEF ID action2 : . [ listacmd

    [               shift and go to state 10
    error           shift and go to state 9
    $end            reduce using rule 9 (programa -> DEF ID action2 : .)


state 8

    (4) programa -> DEF ID action2 error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 14
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 9

    (5) programa -> DEF ID action2 : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 24
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 10

    (1) programa -> DEF ID action2 : [ . listacmd ]
    (6) programa -> DEF ID action2 : [ . listacmd error
    (10) programa -> DEF ID action2 : [ .
    (11) programa -> DEF ID action2 : [ . listacmd
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    $end            reduce using rule 10 (programa -> DEF ID action2 : [ .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 25
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 11

    (19) comando -> cmdselecao .

    INPUT           reduce using rule 19 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 19 (comando -> cmdselecao .)
    IF              reduce using rule 19 (comando -> cmdselecao .)
    WHILE           reduce using rule 19 (comando -> cmdselecao .)
    ID              reduce using rule 19 (comando -> cmdselecao .)
    ]               reduce using rule 19 (comando -> cmdselecao .)
    error           reduce using rule 19 (comando -> cmdselecao .)
    $end            reduce using rule 19 (comando -> cmdselecao .)


state 12

    (17) comando -> cmdentrada .

    INPUT           reduce using rule 17 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 17 (comando -> cmdentrada .)
    IF              reduce using rule 17 (comando -> cmdentrada .)
    WHILE           reduce using rule 17 (comando -> cmdentrada .)
    ID              reduce using rule 17 (comando -> cmdentrada .)
    ]               reduce using rule 17 (comando -> cmdentrada .)
    error           reduce using rule 17 (comando -> cmdentrada .)
    $end            reduce using rule 17 (comando -> cmdentrada .)


state 13

    (61) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE . action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE . action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE . action13 expressao action14 : [ listacmd ] action15 else error
    (62) action13 -> .

    TRUE            reduce using rule 62 (action13 -> .)
    FALSE           reduce using rule 62 (action13 -> .)
    NOT             reduce using rule 62 (action13 -> .)
    ID              reduce using rule 62 (action13 -> .)
    INTEIRO         reduce using rule 62 (action13 -> .)
    BINARIO         reduce using rule 62 (action13 -> .)
    OCTAL           reduce using rule 62 (action13 -> .)
    HEXADECIMAL     reduce using rule 62 (action13 -> .)
    REAL            reduce using rule 62 (action13 -> .)
    LITERAL         reduce using rule 62 (action13 -> .)
    (               reduce using rule 62 (action13 -> .)
    +               reduce using rule 62 (action13 -> .)
    -               reduce using rule 62 (action13 -> .)

    action13                       shift and go to state 26

state 14

    (4) programa -> DEF ID action2 error [ listacmd . ]

    ]               shift and go to state 27


state 15

    (16) comando -> cmdatribui .

    INPUT           reduce using rule 16 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 16 (comando -> cmdatribui .)
    IF              reduce using rule 16 (comando -> cmdatribui .)
    WHILE           reduce using rule 16 (comando -> cmdatribui .)
    ID              reduce using rule 16 (comando -> cmdatribui .)
    ]               reduce using rule 16 (comando -> cmdatribui .)
    error           reduce using rule 16 (comando -> cmdatribui .)
    $end            reduce using rule 16 (comando -> cmdatribui .)


state 16

    (18) comando -> cmdsaida .

    INPUT           reduce using rule 18 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 18 (comando -> cmdsaida .)
    IF              reduce using rule 18 (comando -> cmdsaida .)
    WHILE           reduce using rule 18 (comando -> cmdsaida .)
    ID              reduce using rule 18 (comando -> cmdsaida .)
    ]               reduce using rule 18 (comando -> cmdsaida .)
    error           reduce using rule 18 (comando -> cmdsaida .)
    $end            reduce using rule 18 (comando -> cmdsaida .)


state 17

    (30) cmdatribui -> listaidenti . SIM_ATTR expressao action4 ;

    SIM_ATTR        shift and go to state 28


state 18

    (32) cmdentrada -> INPUT . ( listaidenti action6 ) ;
    (34) cmdentrada -> INPUT . ( listaidenti action6 error ;
    (35) cmdentrada -> INPUT . error listaidenti action6 ) ;
    (36) cmdentrada -> INPUT . ( listaidenti action6 ) error

    (               shift and go to state 29
    error           shift and go to state 30


state 19

    (21) listaidenti -> ID . listaindenti1
    (22) listaindenti1 -> . empty action5
    (23) listaindenti1 -> . , action5 listaidenti
    (12) empty -> .

    ,               shift and go to state 31
    SIM_ATTR        reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    listaindenti1                  shift and go to state 32
    empty                          shift and go to state 33

state 20

    (41) cmdselecao -> IF . expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF . expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> IF . expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> IF . expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> IF . expressao action8 : [ listacmd ] action9 elif else error
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 40
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 21

    (20) comando -> cmdrepeticao .

    INPUT           reduce using rule 20 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 20 (comando -> cmdrepeticao .)
    IF              reduce using rule 20 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 20 (comando -> cmdrepeticao .)
    ID              reduce using rule 20 (comando -> cmdrepeticao .)
    ]               reduce using rule 20 (comando -> cmdrepeticao .)
    error           reduce using rule 20 (comando -> cmdrepeticao .)
    $end            reduce using rule 20 (comando -> cmdrepeticao .)


state 22

    (13) listacmd -> comando . listacmd1
    (14) listacmd1 -> . empty
    (15) listacmd1 -> . listacmd
    (12) empty -> .
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    ]               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    $end            reduce using rule 12 (empty -> .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 54
    cmdatribui                     shift and go to state 15
    listacmd1                      shift and go to state 55
    cmdsaida                       shift and go to state 16
    empty                          shift and go to state 56
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 23

    (37) cmdsaida -> OUTPUT . ( listaexp ) ;
    (38) cmdsaida -> OUTPUT . ( listaexp error ;
    (39) cmdsaida -> OUTPUT . error listaexp ) ;
    (40) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 57
    error           shift and go to state 58


state 24

    (5) programa -> DEF ID action2 : error listacmd . ]

    ]               shift and go to state 59


state 25

    (1) programa -> DEF ID action2 : [ listacmd . ]
    (6) programa -> DEF ID action2 : [ listacmd . error
    (11) programa -> DEF ID action2 : [ listacmd .

    ]               shift and go to state 61
    error           shift and go to state 60
    $end            reduce using rule 11 (programa -> DEF ID action2 : [ listacmd .)


state 26

    (61) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 . expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 . expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE action13 . expressao action14 : [ listacmd ] action15 else error
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 62
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 27

    (4) programa -> DEF ID action2 error [ listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID action2 error [ listacmd ] .)


state 28

    (30) cmdatribui -> listaidenti SIM_ATTR . expressao action4 ;
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 63
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 29

    (32) cmdentrada -> INPUT ( . listaidenti action6 ) ;
    (34) cmdentrada -> INPUT ( . listaidenti action6 error ;
    (36) cmdentrada -> INPUT ( . listaidenti action6 ) error
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 64

state 30

    (35) cmdentrada -> INPUT error . listaidenti action6 ) ;
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 65

state 31

    (23) listaindenti1 -> , . action5 listaidenti
    (24) action5 -> .

    ID              reduce using rule 24 (action5 -> .)

    action5                        shift and go to state 66

state 32

    (21) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 21 (listaidenti -> ID listaindenti1 .)


state 33

    (22) listaindenti1 -> empty . action5
    (24) action5 -> .

    SIM_ATTR        reduce using rule 24 (action5 -> .)
    )               reduce using rule 24 (action5 -> .)
    error           reduce using rule 24 (action5 -> .)

    action5                        shift and go to state 67

state 34

    (112) elemento -> REAL . action34
    (122) action34 -> .

    SIM_POT         reduce using rule 122 (action34 -> .)
    *               reduce using rule 122 (action34 -> .)
    /               reduce using rule 122 (action34 -> .)
    %               reduce using rule 122 (action34 -> .)
    +               reduce using rule 122 (action34 -> .)
    -               reduce using rule 122 (action34 -> .)
    SIM_EQ          reduce using rule 122 (action34 -> .)
    SIM_DIF         reduce using rule 122 (action34 -> .)
    <               reduce using rule 122 (action34 -> .)
    SIM_LE          reduce using rule 122 (action34 -> .)
    >               reduce using rule 122 (action34 -> .)
    SIM_GE          reduce using rule 122 (action34 -> .)
    OR              reduce using rule 122 (action34 -> .)
    AND             reduce using rule 122 (action34 -> .)
    error           reduce using rule 122 (action34 -> .)
    :               reduce using rule 122 (action34 -> .)
    ;               reduce using rule 122 (action34 -> .)
    )               reduce using rule 122 (action34 -> .)
    ,               reduce using rule 122 (action34 -> .)

    action34                       shift and go to state 68

state 35

    (110) elemento -> OCTAL . action32
    (120) action32 -> .

    SIM_POT         reduce using rule 120 (action32 -> .)
    *               reduce using rule 120 (action32 -> .)
    /               reduce using rule 120 (action32 -> .)
    %               reduce using rule 120 (action32 -> .)
    +               reduce using rule 120 (action32 -> .)
    -               reduce using rule 120 (action32 -> .)
    SIM_EQ          reduce using rule 120 (action32 -> .)
    SIM_DIF         reduce using rule 120 (action32 -> .)
    <               reduce using rule 120 (action32 -> .)
    SIM_LE          reduce using rule 120 (action32 -> .)
    >               reduce using rule 120 (action32 -> .)
    SIM_GE          reduce using rule 120 (action32 -> .)
    OR              reduce using rule 120 (action32 -> .)
    AND             reduce using rule 120 (action32 -> .)
    error           reduce using rule 120 (action32 -> .)
    :               reduce using rule 120 (action32 -> .)
    ;               reduce using rule 120 (action32 -> .)
    )               reduce using rule 120 (action32 -> .)
    ,               reduce using rule 120 (action32 -> .)

    action32                       shift and go to state 69

state 36

    (116) elemento -> - . elemento action36
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 70

state 37

    (111) elemento -> HEXADECIMAL . action33
    (121) action33 -> .

    SIM_POT         reduce using rule 121 (action33 -> .)
    *               reduce using rule 121 (action33 -> .)
    /               reduce using rule 121 (action33 -> .)
    %               reduce using rule 121 (action33 -> .)
    +               reduce using rule 121 (action33 -> .)
    -               reduce using rule 121 (action33 -> .)
    SIM_EQ          reduce using rule 121 (action33 -> .)
    SIM_DIF         reduce using rule 121 (action33 -> .)
    <               reduce using rule 121 (action33 -> .)
    SIM_LE          reduce using rule 121 (action33 -> .)
    >               reduce using rule 121 (action33 -> .)
    SIM_GE          reduce using rule 121 (action33 -> .)
    OR              reduce using rule 121 (action33 -> .)
    AND             reduce using rule 121 (action33 -> .)
    error           reduce using rule 121 (action33 -> .)
    :               reduce using rule 121 (action33 -> .)
    ;               reduce using rule 121 (action33 -> .)
    )               reduce using rule 121 (action33 -> .)
    ,               reduce using rule 121 (action33 -> .)

    action33                       shift and go to state 71

state 38

    (77) valor -> TRUE . action18
    (80) action18 -> .

    OR              reduce using rule 80 (action18 -> .)
    AND             reduce using rule 80 (action18 -> .)
    error           reduce using rule 80 (action18 -> .)
    :               reduce using rule 80 (action18 -> .)
    ;               reduce using rule 80 (action18 -> .)
    )               reduce using rule 80 (action18 -> .)
    ,               reduce using rule 80 (action18 -> .)

    action18                       shift and go to state 72

state 39

    (108) elemento -> INTEIRO . action30
    (118) action30 -> .

    SIM_POT         reduce using rule 118 (action30 -> .)
    *               reduce using rule 118 (action30 -> .)
    /               reduce using rule 118 (action30 -> .)
    %               reduce using rule 118 (action30 -> .)
    +               reduce using rule 118 (action30 -> .)
    -               reduce using rule 118 (action30 -> .)
    SIM_EQ          reduce using rule 118 (action30 -> .)
    SIM_DIF         reduce using rule 118 (action30 -> .)
    <               reduce using rule 118 (action30 -> .)
    SIM_LE          reduce using rule 118 (action30 -> .)
    >               reduce using rule 118 (action30 -> .)
    SIM_GE          reduce using rule 118 (action30 -> .)
    OR              reduce using rule 118 (action30 -> .)
    AND             reduce using rule 118 (action30 -> .)
    error           reduce using rule 118 (action30 -> .)
    :               reduce using rule 118 (action30 -> .)
    ;               reduce using rule 118 (action30 -> .)
    )               reduce using rule 118 (action30 -> .)
    ,               reduce using rule 118 (action30 -> .)

    action30                       shift and go to state 73

state 40

    (41) cmdselecao -> IF expressao . action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF expressao . action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao . action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> IF expressao . action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> IF expressao . action8 : [ listacmd ] action9 elif else error
    (42) action8 -> .

    :               reduce using rule 42 (action8 -> .)
    error           reduce using rule 42 (action8 -> .)

    action8                        shift and go to state 74

state 41

    (115) elemento -> + . elemento
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 75

state 42

    (98) termo -> fator . termo1
    (99) termo1 -> . empty
    (100) termo1 -> . * fator termo1 p_action25
    (101) termo1 -> . / fator termo1 p_action26
    (102) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 78
    /               shift and go to state 79
    %               shift and go to state 77
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 76
    empty                          shift and go to state 80

state 43

    (83) relacional -> aritmetica . relacional1
    (84) relacional1 -> . operador action21 aritmetica action22
    (85) relacional1 -> . empty
    (88) operador -> . SIM_EQ
    (89) operador -> . SIM_DIF
    (90) operador -> . <
    (91) operador -> . SIM_LE
    (92) operador -> . >
    (93) operador -> . SIM_GE
    (12) empty -> .

    SIM_EQ          shift and go to state 81
    SIM_DIF         shift and go to state 84
    <               shift and go to state 87
    SIM_LE          shift and go to state 89
    >               shift and go to state 86
    SIM_GE          shift and go to state 83
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    operador                       shift and go to state 82
    relacional1                    shift and go to state 85
    empty                          shift and go to state 88

state 44

    (114) elemento -> ( . expressao )
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 90
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 45

    (69) expressao -> valor . expressao1
    (70) expressao1 -> . empty
    (71) expressao1 -> . OR valor action_16 expressao1
    (72) expressao1 -> . AND valor action_17 expressao1
    (75) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 94
    AND             shift and go to state 91
    error           shift and go to state 92
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 93
    empty                          shift and go to state 95

state 46

    (113) elemento -> LITERAL . action35
    (123) action35 -> .

    SIM_POT         reduce using rule 123 (action35 -> .)
    *               reduce using rule 123 (action35 -> .)
    /               reduce using rule 123 (action35 -> .)
    %               reduce using rule 123 (action35 -> .)
    +               reduce using rule 123 (action35 -> .)
    -               reduce using rule 123 (action35 -> .)
    SIM_EQ          reduce using rule 123 (action35 -> .)
    SIM_DIF         reduce using rule 123 (action35 -> .)
    <               reduce using rule 123 (action35 -> .)
    SIM_LE          reduce using rule 123 (action35 -> .)
    >               reduce using rule 123 (action35 -> .)
    SIM_GE          reduce using rule 123 (action35 -> .)
    OR              reduce using rule 123 (action35 -> .)
    AND             reduce using rule 123 (action35 -> .)
    error           reduce using rule 123 (action35 -> .)
    :               reduce using rule 123 (action35 -> .)
    ;               reduce using rule 123 (action35 -> .)
    )               reduce using rule 123 (action35 -> .)
    ,               reduce using rule 123 (action35 -> .)

    action35                       shift and go to state 96

state 47

    (94) aritmetica -> termo . aritmetica1
    (95) aritmetica1 -> . empty
    (96) aritmetica1 -> . + termo aritmetica1 p_action23
    (97) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 97
    -               shift and go to state 98
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 99
    empty                          shift and go to state 100

state 48

    (76) valor -> relacional .

    OR              reduce using rule 76 (valor -> relacional .)
    AND             reduce using rule 76 (valor -> relacional .)
    error           reduce using rule 76 (valor -> relacional .)
    :               reduce using rule 76 (valor -> relacional .)
    ;               reduce using rule 76 (valor -> relacional .)
    )               reduce using rule 76 (valor -> relacional .)
    ,               reduce using rule 76 (valor -> relacional .)


state 49

    (107) elemento -> ID . action29
    (117) action29 -> .

    SIM_POT         reduce using rule 117 (action29 -> .)
    *               reduce using rule 117 (action29 -> .)
    /               reduce using rule 117 (action29 -> .)
    %               reduce using rule 117 (action29 -> .)
    +               reduce using rule 117 (action29 -> .)
    -               reduce using rule 117 (action29 -> .)
    SIM_EQ          reduce using rule 117 (action29 -> .)
    SIM_DIF         reduce using rule 117 (action29 -> .)
    <               reduce using rule 117 (action29 -> .)
    SIM_LE          reduce using rule 117 (action29 -> .)
    >               reduce using rule 117 (action29 -> .)
    SIM_GE          reduce using rule 117 (action29 -> .)
    OR              reduce using rule 117 (action29 -> .)
    AND             reduce using rule 117 (action29 -> .)
    error           reduce using rule 117 (action29 -> .)
    :               reduce using rule 117 (action29 -> .)
    ;               reduce using rule 117 (action29 -> .)
    )               reduce using rule 117 (action29 -> .)
    ,               reduce using rule 117 (action29 -> .)

    action29                       shift and go to state 101

state 50

    (78) valor -> FALSE . action19
    (81) action19 -> .

    OR              reduce using rule 81 (action19 -> .)
    AND             reduce using rule 81 (action19 -> .)
    error           reduce using rule 81 (action19 -> .)
    :               reduce using rule 81 (action19 -> .)
    ;               reduce using rule 81 (action19 -> .)
    )               reduce using rule 81 (action19 -> .)
    ,               reduce using rule 81 (action19 -> .)

    action19                       shift and go to state 102

state 51

    (103) fator -> elemento . fator1
    (104) fator1 -> . empty
    (105) fator1 -> . SIM_POT elemento action28 fator1
    (12) empty -> .

    SIM_POT         shift and go to state 104
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 103
    empty                          shift and go to state 105

state 52

    (109) elemento -> BINARIO . action31
    (119) action31 -> .

    SIM_POT         reduce using rule 119 (action31 -> .)
    *               reduce using rule 119 (action31 -> .)
    /               reduce using rule 119 (action31 -> .)
    %               reduce using rule 119 (action31 -> .)
    +               reduce using rule 119 (action31 -> .)
    -               reduce using rule 119 (action31 -> .)
    SIM_EQ          reduce using rule 119 (action31 -> .)
    SIM_DIF         reduce using rule 119 (action31 -> .)
    <               reduce using rule 119 (action31 -> .)
    SIM_LE          reduce using rule 119 (action31 -> .)
    >               reduce using rule 119 (action31 -> .)
    SIM_GE          reduce using rule 119 (action31 -> .)
    OR              reduce using rule 119 (action31 -> .)
    AND             reduce using rule 119 (action31 -> .)
    error           reduce using rule 119 (action31 -> .)
    :               reduce using rule 119 (action31 -> .)
    ;               reduce using rule 119 (action31 -> .)
    )               reduce using rule 119 (action31 -> .)
    ,               reduce using rule 119 (action31 -> .)

    action31                       shift and go to state 106

state 53

    (79) valor -> NOT . valor action20
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 107
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 54

    (15) listacmd1 -> listacmd .

    ]               reduce using rule 15 (listacmd1 -> listacmd .)
    error           reduce using rule 15 (listacmd1 -> listacmd .)
    $end            reduce using rule 15 (listacmd1 -> listacmd .)


state 55

    (13) listacmd -> comando listacmd1 .

    ]               reduce using rule 13 (listacmd -> comando listacmd1 .)
    error           reduce using rule 13 (listacmd -> comando listacmd1 .)
    $end            reduce using rule 13 (listacmd -> comando listacmd1 .)


state 56

    (14) listacmd1 -> empty .

    ]               reduce using rule 14 (listacmd1 -> empty .)
    error           reduce using rule 14 (listacmd1 -> empty .)
    $end            reduce using rule 14 (listacmd1 -> empty .)


state 57

    (37) cmdsaida -> OUTPUT ( . listaexp ) ;
    (38) cmdsaida -> OUTPUT ( . listaexp error ;
    (40) cmdsaida -> OUTPUT ( . listaexp ) error
    (25) listaexp -> . expressao listaexp1
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 108
    listaexp                       shift and go to state 109
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 58

    (39) cmdsaida -> OUTPUT error . listaexp ) ;
    (25) listaexp -> . expressao listaexp1
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 108
    listaexp                       shift and go to state 110
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 59

    (5) programa -> DEF ID action2 : error listacmd ] .

    $end            reduce using rule 5 (programa -> DEF ID action2 : error listacmd ] .)


state 60

    (6) programa -> DEF ID action2 : [ listacmd error .

    $end            reduce using rule 6 (programa -> DEF ID action2 : [ listacmd error .)


state 61

    (1) programa -> DEF ID action2 : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID action2 : [ listacmd ] .)


state 62

    (61) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 expressao . action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao . action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao . action14 : [ listacmd ] action15 else error
    (63) action14 -> .

    :               reduce using rule 63 (action14 -> .)
    error           reduce using rule 63 (action14 -> .)

    action14                       shift and go to state 111

state 63

    (30) cmdatribui -> listaidenti SIM_ATTR expressao . action4 ;
    (31) action4 -> .

    ;               reduce using rule 31 (action4 -> .)

    action4                        shift and go to state 112

state 64

    (32) cmdentrada -> INPUT ( listaidenti . action6 ) ;
    (34) cmdentrada -> INPUT ( listaidenti . action6 error ;
    (36) cmdentrada -> INPUT ( listaidenti . action6 ) error
    (33) action6 -> .

    )               reduce using rule 33 (action6 -> .)
    error           reduce using rule 33 (action6 -> .)

    action6                        shift and go to state 113

state 65

    (35) cmdentrada -> INPUT error listaidenti . action6 ) ;
    (33) action6 -> .

    )               reduce using rule 33 (action6 -> .)

    action6                        shift and go to state 114

state 66

    (23) listaindenti1 -> , action5 . listaidenti
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 115

state 67

    (22) listaindenti1 -> empty action5 .

    SIM_ATTR        reduce using rule 22 (listaindenti1 -> empty action5 .)
    )               reduce using rule 22 (listaindenti1 -> empty action5 .)
    error           reduce using rule 22 (listaindenti1 -> empty action5 .)


state 68

    (112) elemento -> REAL action34 .

    SIM_POT         reduce using rule 112 (elemento -> REAL action34 .)
    *               reduce using rule 112 (elemento -> REAL action34 .)
    /               reduce using rule 112 (elemento -> REAL action34 .)
    %               reduce using rule 112 (elemento -> REAL action34 .)
    +               reduce using rule 112 (elemento -> REAL action34 .)
    -               reduce using rule 112 (elemento -> REAL action34 .)
    SIM_EQ          reduce using rule 112 (elemento -> REAL action34 .)
    SIM_DIF         reduce using rule 112 (elemento -> REAL action34 .)
    <               reduce using rule 112 (elemento -> REAL action34 .)
    SIM_LE          reduce using rule 112 (elemento -> REAL action34 .)
    >               reduce using rule 112 (elemento -> REAL action34 .)
    SIM_GE          reduce using rule 112 (elemento -> REAL action34 .)
    OR              reduce using rule 112 (elemento -> REAL action34 .)
    AND             reduce using rule 112 (elemento -> REAL action34 .)
    error           reduce using rule 112 (elemento -> REAL action34 .)
    :               reduce using rule 112 (elemento -> REAL action34 .)
    ;               reduce using rule 112 (elemento -> REAL action34 .)
    )               reduce using rule 112 (elemento -> REAL action34 .)
    ,               reduce using rule 112 (elemento -> REAL action34 .)


state 69

    (110) elemento -> OCTAL action32 .

    SIM_POT         reduce using rule 110 (elemento -> OCTAL action32 .)
    *               reduce using rule 110 (elemento -> OCTAL action32 .)
    /               reduce using rule 110 (elemento -> OCTAL action32 .)
    %               reduce using rule 110 (elemento -> OCTAL action32 .)
    +               reduce using rule 110 (elemento -> OCTAL action32 .)
    -               reduce using rule 110 (elemento -> OCTAL action32 .)
    SIM_EQ          reduce using rule 110 (elemento -> OCTAL action32 .)
    SIM_DIF         reduce using rule 110 (elemento -> OCTAL action32 .)
    <               reduce using rule 110 (elemento -> OCTAL action32 .)
    SIM_LE          reduce using rule 110 (elemento -> OCTAL action32 .)
    >               reduce using rule 110 (elemento -> OCTAL action32 .)
    SIM_GE          reduce using rule 110 (elemento -> OCTAL action32 .)
    OR              reduce using rule 110 (elemento -> OCTAL action32 .)
    AND             reduce using rule 110 (elemento -> OCTAL action32 .)
    error           reduce using rule 110 (elemento -> OCTAL action32 .)
    :               reduce using rule 110 (elemento -> OCTAL action32 .)
    ;               reduce using rule 110 (elemento -> OCTAL action32 .)
    )               reduce using rule 110 (elemento -> OCTAL action32 .)
    ,               reduce using rule 110 (elemento -> OCTAL action32 .)


state 70

    (116) elemento -> - elemento . action36
    (124) action36 -> .

    SIM_POT         reduce using rule 124 (action36 -> .)
    *               reduce using rule 124 (action36 -> .)
    /               reduce using rule 124 (action36 -> .)
    %               reduce using rule 124 (action36 -> .)
    +               reduce using rule 124 (action36 -> .)
    -               reduce using rule 124 (action36 -> .)
    SIM_EQ          reduce using rule 124 (action36 -> .)
    SIM_DIF         reduce using rule 124 (action36 -> .)
    <               reduce using rule 124 (action36 -> .)
    SIM_LE          reduce using rule 124 (action36 -> .)
    >               reduce using rule 124 (action36 -> .)
    SIM_GE          reduce using rule 124 (action36 -> .)
    OR              reduce using rule 124 (action36 -> .)
    AND             reduce using rule 124 (action36 -> .)
    error           reduce using rule 124 (action36 -> .)
    :               reduce using rule 124 (action36 -> .)
    ;               reduce using rule 124 (action36 -> .)
    )               reduce using rule 124 (action36 -> .)
    ,               reduce using rule 124 (action36 -> .)

    action36                       shift and go to state 116

state 71

    (111) elemento -> HEXADECIMAL action33 .

    SIM_POT         reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    *               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    /               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    %               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    +               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    -               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    SIM_EQ          reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    SIM_DIF         reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    <               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    SIM_LE          reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    >               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    SIM_GE          reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    OR              reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    AND             reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    error           reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    :               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    ;               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    )               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)
    ,               reduce using rule 111 (elemento -> HEXADECIMAL action33 .)


state 72

    (77) valor -> TRUE action18 .

    OR              reduce using rule 77 (valor -> TRUE action18 .)
    AND             reduce using rule 77 (valor -> TRUE action18 .)
    error           reduce using rule 77 (valor -> TRUE action18 .)
    :               reduce using rule 77 (valor -> TRUE action18 .)
    ;               reduce using rule 77 (valor -> TRUE action18 .)
    )               reduce using rule 77 (valor -> TRUE action18 .)
    ,               reduce using rule 77 (valor -> TRUE action18 .)


state 73

    (108) elemento -> INTEIRO action30 .

    SIM_POT         reduce using rule 108 (elemento -> INTEIRO action30 .)
    *               reduce using rule 108 (elemento -> INTEIRO action30 .)
    /               reduce using rule 108 (elemento -> INTEIRO action30 .)
    %               reduce using rule 108 (elemento -> INTEIRO action30 .)
    +               reduce using rule 108 (elemento -> INTEIRO action30 .)
    -               reduce using rule 108 (elemento -> INTEIRO action30 .)
    SIM_EQ          reduce using rule 108 (elemento -> INTEIRO action30 .)
    SIM_DIF         reduce using rule 108 (elemento -> INTEIRO action30 .)
    <               reduce using rule 108 (elemento -> INTEIRO action30 .)
    SIM_LE          reduce using rule 108 (elemento -> INTEIRO action30 .)
    >               reduce using rule 108 (elemento -> INTEIRO action30 .)
    SIM_GE          reduce using rule 108 (elemento -> INTEIRO action30 .)
    OR              reduce using rule 108 (elemento -> INTEIRO action30 .)
    AND             reduce using rule 108 (elemento -> INTEIRO action30 .)
    error           reduce using rule 108 (elemento -> INTEIRO action30 .)
    :               reduce using rule 108 (elemento -> INTEIRO action30 .)
    ;               reduce using rule 108 (elemento -> INTEIRO action30 .)
    )               reduce using rule 108 (elemento -> INTEIRO action30 .)
    ,               reduce using rule 108 (elemento -> INTEIRO action30 .)


state 74

    (41) cmdselecao -> IF expressao action8 . : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> IF expressao action8 . error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 . : error listacmd ] action9 elif else ;
    (46) cmdselecao -> IF expressao action8 . : [ listacmd error action9 elif else ;
    (47) cmdselecao -> IF expressao action8 . : [ listacmd ] action9 elif else error

    :               shift and go to state 118
    error           shift and go to state 117


state 75

    (115) elemento -> + elemento .

    SIM_POT         reduce using rule 115 (elemento -> + elemento .)
    *               reduce using rule 115 (elemento -> + elemento .)
    /               reduce using rule 115 (elemento -> + elemento .)
    %               reduce using rule 115 (elemento -> + elemento .)
    +               reduce using rule 115 (elemento -> + elemento .)
    -               reduce using rule 115 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 115 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 115 (elemento -> + elemento .)
    <               reduce using rule 115 (elemento -> + elemento .)
    SIM_LE          reduce using rule 115 (elemento -> + elemento .)
    >               reduce using rule 115 (elemento -> + elemento .)
    SIM_GE          reduce using rule 115 (elemento -> + elemento .)
    OR              reduce using rule 115 (elemento -> + elemento .)
    AND             reduce using rule 115 (elemento -> + elemento .)
    error           reduce using rule 115 (elemento -> + elemento .)
    :               reduce using rule 115 (elemento -> + elemento .)
    ;               reduce using rule 115 (elemento -> + elemento .)
    )               reduce using rule 115 (elemento -> + elemento .)
    ,               reduce using rule 115 (elemento -> + elemento .)


state 76

    (98) termo -> fator termo1 .

    +               reduce using rule 98 (termo -> fator termo1 .)
    -               reduce using rule 98 (termo -> fator termo1 .)
    OR              reduce using rule 98 (termo -> fator termo1 .)
    AND             reduce using rule 98 (termo -> fator termo1 .)
    error           reduce using rule 98 (termo -> fator termo1 .)
    :               reduce using rule 98 (termo -> fator termo1 .)
    ;               reduce using rule 98 (termo -> fator termo1 .)
    )               reduce using rule 98 (termo -> fator termo1 .)
    ,               reduce using rule 98 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 98 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 98 (termo -> fator termo1 .)
    <               reduce using rule 98 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 98 (termo -> fator termo1 .)
    >               reduce using rule 98 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 98 (termo -> fator termo1 .)


state 77

    (102) termo1 -> % . fator termo1 p_action27
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 119
    elemento                       shift and go to state 51

state 78

    (100) termo1 -> * . fator termo1 p_action25
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 120
    elemento                       shift and go to state 51

state 79

    (101) termo1 -> / . fator termo1 p_action26
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 121
    elemento                       shift and go to state 51

state 80

    (99) termo1 -> empty .

    +               reduce using rule 99 (termo1 -> empty .)
    -               reduce using rule 99 (termo1 -> empty .)
    SIM_EQ          reduce using rule 99 (termo1 -> empty .)
    SIM_DIF         reduce using rule 99 (termo1 -> empty .)
    <               reduce using rule 99 (termo1 -> empty .)
    SIM_LE          reduce using rule 99 (termo1 -> empty .)
    >               reduce using rule 99 (termo1 -> empty .)
    SIM_GE          reduce using rule 99 (termo1 -> empty .)
    OR              reduce using rule 99 (termo1 -> empty .)
    AND             reduce using rule 99 (termo1 -> empty .)
    error           reduce using rule 99 (termo1 -> empty .)
    :               reduce using rule 99 (termo1 -> empty .)
    ;               reduce using rule 99 (termo1 -> empty .)
    )               reduce using rule 99 (termo1 -> empty .)
    ,               reduce using rule 99 (termo1 -> empty .)


state 81

    (88) operador -> SIM_EQ .

    ID              reduce using rule 88 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 88 (operador -> SIM_EQ .)
    BINARIO         reduce using rule 88 (operador -> SIM_EQ .)
    OCTAL           reduce using rule 88 (operador -> SIM_EQ .)
    HEXADECIMAL     reduce using rule 88 (operador -> SIM_EQ .)
    REAL            reduce using rule 88 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 88 (operador -> SIM_EQ .)
    (               reduce using rule 88 (operador -> SIM_EQ .)
    +               reduce using rule 88 (operador -> SIM_EQ .)
    -               reduce using rule 88 (operador -> SIM_EQ .)


state 82

    (84) relacional1 -> operador . action21 aritmetica action22
    (86) action21 -> .

    ID              reduce using rule 86 (action21 -> .)
    INTEIRO         reduce using rule 86 (action21 -> .)
    BINARIO         reduce using rule 86 (action21 -> .)
    OCTAL           reduce using rule 86 (action21 -> .)
    HEXADECIMAL     reduce using rule 86 (action21 -> .)
    REAL            reduce using rule 86 (action21 -> .)
    LITERAL         reduce using rule 86 (action21 -> .)
    (               reduce using rule 86 (action21 -> .)
    +               reduce using rule 86 (action21 -> .)
    -               reduce using rule 86 (action21 -> .)

    action21                       shift and go to state 122

state 83

    (93) operador -> SIM_GE .

    ID              reduce using rule 93 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 93 (operador -> SIM_GE .)
    BINARIO         reduce using rule 93 (operador -> SIM_GE .)
    OCTAL           reduce using rule 93 (operador -> SIM_GE .)
    HEXADECIMAL     reduce using rule 93 (operador -> SIM_GE .)
    REAL            reduce using rule 93 (operador -> SIM_GE .)
    LITERAL         reduce using rule 93 (operador -> SIM_GE .)
    (               reduce using rule 93 (operador -> SIM_GE .)
    +               reduce using rule 93 (operador -> SIM_GE .)
    -               reduce using rule 93 (operador -> SIM_GE .)


state 84

    (89) operador -> SIM_DIF .

    ID              reduce using rule 89 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 89 (operador -> SIM_DIF .)
    BINARIO         reduce using rule 89 (operador -> SIM_DIF .)
    OCTAL           reduce using rule 89 (operador -> SIM_DIF .)
    HEXADECIMAL     reduce using rule 89 (operador -> SIM_DIF .)
    REAL            reduce using rule 89 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 89 (operador -> SIM_DIF .)
    (               reduce using rule 89 (operador -> SIM_DIF .)
    +               reduce using rule 89 (operador -> SIM_DIF .)
    -               reduce using rule 89 (operador -> SIM_DIF .)


state 85

    (83) relacional -> aritmetica relacional1 .

    OR              reduce using rule 83 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 83 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 83 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 83 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 83 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 83 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 83 (relacional -> aritmetica relacional1 .)


state 86

    (92) operador -> > .

    ID              reduce using rule 92 (operador -> > .)
    INTEIRO         reduce using rule 92 (operador -> > .)
    BINARIO         reduce using rule 92 (operador -> > .)
    OCTAL           reduce using rule 92 (operador -> > .)
    HEXADECIMAL     reduce using rule 92 (operador -> > .)
    REAL            reduce using rule 92 (operador -> > .)
    LITERAL         reduce using rule 92 (operador -> > .)
    (               reduce using rule 92 (operador -> > .)
    +               reduce using rule 92 (operador -> > .)
    -               reduce using rule 92 (operador -> > .)


state 87

    (90) operador -> < .

    ID              reduce using rule 90 (operador -> < .)
    INTEIRO         reduce using rule 90 (operador -> < .)
    BINARIO         reduce using rule 90 (operador -> < .)
    OCTAL           reduce using rule 90 (operador -> < .)
    HEXADECIMAL     reduce using rule 90 (operador -> < .)
    REAL            reduce using rule 90 (operador -> < .)
    LITERAL         reduce using rule 90 (operador -> < .)
    (               reduce using rule 90 (operador -> < .)
    +               reduce using rule 90 (operador -> < .)
    -               reduce using rule 90 (operador -> < .)


state 88

    (85) relacional1 -> empty .

    OR              reduce using rule 85 (relacional1 -> empty .)
    AND             reduce using rule 85 (relacional1 -> empty .)
    error           reduce using rule 85 (relacional1 -> empty .)
    :               reduce using rule 85 (relacional1 -> empty .)
    ;               reduce using rule 85 (relacional1 -> empty .)
    )               reduce using rule 85 (relacional1 -> empty .)
    ,               reduce using rule 85 (relacional1 -> empty .)


state 89

    (91) operador -> SIM_LE .

    ID              reduce using rule 91 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 91 (operador -> SIM_LE .)
    BINARIO         reduce using rule 91 (operador -> SIM_LE .)
    OCTAL           reduce using rule 91 (operador -> SIM_LE .)
    HEXADECIMAL     reduce using rule 91 (operador -> SIM_LE .)
    REAL            reduce using rule 91 (operador -> SIM_LE .)
    LITERAL         reduce using rule 91 (operador -> SIM_LE .)
    (               reduce using rule 91 (operador -> SIM_LE .)
    +               reduce using rule 91 (operador -> SIM_LE .)
    -               reduce using rule 91 (operador -> SIM_LE .)


state 90

    (114) elemento -> ( expressao . )

    )               shift and go to state 123


state 91

    (72) expressao1 -> AND . valor action_17 expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 124
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 92

    (75) expressao1 -> error . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 125
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 93

    (69) expressao -> valor expressao1 .

    :               reduce using rule 69 (expressao -> valor expressao1 .)
    error           reduce using rule 69 (expressao -> valor expressao1 .)
    ,               reduce using rule 69 (expressao -> valor expressao1 .)
    )               reduce using rule 69 (expressao -> valor expressao1 .)
    ;               reduce using rule 69 (expressao -> valor expressao1 .)


state 94

    (71) expressao1 -> OR . valor action_16 expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 126
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 95

    (70) expressao1 -> empty .

    :               reduce using rule 70 (expressao1 -> empty .)
    error           reduce using rule 70 (expressao1 -> empty .)
    ;               reduce using rule 70 (expressao1 -> empty .)
    )               reduce using rule 70 (expressao1 -> empty .)
    ,               reduce using rule 70 (expressao1 -> empty .)


state 96

    (113) elemento -> LITERAL action35 .

    SIM_POT         reduce using rule 113 (elemento -> LITERAL action35 .)
    *               reduce using rule 113 (elemento -> LITERAL action35 .)
    /               reduce using rule 113 (elemento -> LITERAL action35 .)
    %               reduce using rule 113 (elemento -> LITERAL action35 .)
    +               reduce using rule 113 (elemento -> LITERAL action35 .)
    -               reduce using rule 113 (elemento -> LITERAL action35 .)
    SIM_EQ          reduce using rule 113 (elemento -> LITERAL action35 .)
    SIM_DIF         reduce using rule 113 (elemento -> LITERAL action35 .)
    <               reduce using rule 113 (elemento -> LITERAL action35 .)
    SIM_LE          reduce using rule 113 (elemento -> LITERAL action35 .)
    >               reduce using rule 113 (elemento -> LITERAL action35 .)
    SIM_GE          reduce using rule 113 (elemento -> LITERAL action35 .)
    OR              reduce using rule 113 (elemento -> LITERAL action35 .)
    AND             reduce using rule 113 (elemento -> LITERAL action35 .)
    error           reduce using rule 113 (elemento -> LITERAL action35 .)
    :               reduce using rule 113 (elemento -> LITERAL action35 .)
    ;               reduce using rule 113 (elemento -> LITERAL action35 .)
    )               reduce using rule 113 (elemento -> LITERAL action35 .)
    ,               reduce using rule 113 (elemento -> LITERAL action35 .)


state 97

    (96) aritmetica1 -> + . termo aritmetica1 p_action23
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    termo                          shift and go to state 127
    elemento                       shift and go to state 51

state 98

    (97) aritmetica1 -> - . termo aritmetica1 p_action24
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    termo                          shift and go to state 128
    elemento                       shift and go to state 51

state 99

    (94) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 94 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 94 (aritmetica -> termo aritmetica1 .)


state 100

    (95) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 95 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 95 (aritmetica1 -> empty .)
    <               reduce using rule 95 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 95 (aritmetica1 -> empty .)
    >               reduce using rule 95 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 95 (aritmetica1 -> empty .)
    OR              reduce using rule 95 (aritmetica1 -> empty .)
    AND             reduce using rule 95 (aritmetica1 -> empty .)
    error           reduce using rule 95 (aritmetica1 -> empty .)
    :               reduce using rule 95 (aritmetica1 -> empty .)
    ;               reduce using rule 95 (aritmetica1 -> empty .)
    )               reduce using rule 95 (aritmetica1 -> empty .)
    ,               reduce using rule 95 (aritmetica1 -> empty .)


state 101

    (107) elemento -> ID action29 .

    SIM_POT         reduce using rule 107 (elemento -> ID action29 .)
    *               reduce using rule 107 (elemento -> ID action29 .)
    /               reduce using rule 107 (elemento -> ID action29 .)
    %               reduce using rule 107 (elemento -> ID action29 .)
    +               reduce using rule 107 (elemento -> ID action29 .)
    -               reduce using rule 107 (elemento -> ID action29 .)
    SIM_EQ          reduce using rule 107 (elemento -> ID action29 .)
    SIM_DIF         reduce using rule 107 (elemento -> ID action29 .)
    <               reduce using rule 107 (elemento -> ID action29 .)
    SIM_LE          reduce using rule 107 (elemento -> ID action29 .)
    >               reduce using rule 107 (elemento -> ID action29 .)
    SIM_GE          reduce using rule 107 (elemento -> ID action29 .)
    OR              reduce using rule 107 (elemento -> ID action29 .)
    AND             reduce using rule 107 (elemento -> ID action29 .)
    error           reduce using rule 107 (elemento -> ID action29 .)
    :               reduce using rule 107 (elemento -> ID action29 .)
    ;               reduce using rule 107 (elemento -> ID action29 .)
    )               reduce using rule 107 (elemento -> ID action29 .)
    ,               reduce using rule 107 (elemento -> ID action29 .)


state 102

    (78) valor -> FALSE action19 .

    OR              reduce using rule 78 (valor -> FALSE action19 .)
    AND             reduce using rule 78 (valor -> FALSE action19 .)
    error           reduce using rule 78 (valor -> FALSE action19 .)
    :               reduce using rule 78 (valor -> FALSE action19 .)
    ;               reduce using rule 78 (valor -> FALSE action19 .)
    )               reduce using rule 78 (valor -> FALSE action19 .)
    ,               reduce using rule 78 (valor -> FALSE action19 .)


state 103

    (103) fator -> elemento fator1 .

    *               reduce using rule 103 (fator -> elemento fator1 .)
    /               reduce using rule 103 (fator -> elemento fator1 .)
    %               reduce using rule 103 (fator -> elemento fator1 .)
    +               reduce using rule 103 (fator -> elemento fator1 .)
    -               reduce using rule 103 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 103 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 103 (fator -> elemento fator1 .)
    <               reduce using rule 103 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 103 (fator -> elemento fator1 .)
    >               reduce using rule 103 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 103 (fator -> elemento fator1 .)
    OR              reduce using rule 103 (fator -> elemento fator1 .)
    AND             reduce using rule 103 (fator -> elemento fator1 .)
    error           reduce using rule 103 (fator -> elemento fator1 .)
    :               reduce using rule 103 (fator -> elemento fator1 .)
    ;               reduce using rule 103 (fator -> elemento fator1 .)
    )               reduce using rule 103 (fator -> elemento fator1 .)
    ,               reduce using rule 103 (fator -> elemento fator1 .)


state 104

    (105) fator1 -> SIM_POT . elemento action28 fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    elemento                       shift and go to state 129

state 105

    (104) fator1 -> empty .

    *               reduce using rule 104 (fator1 -> empty .)
    /               reduce using rule 104 (fator1 -> empty .)
    %               reduce using rule 104 (fator1 -> empty .)
    +               reduce using rule 104 (fator1 -> empty .)
    -               reduce using rule 104 (fator1 -> empty .)
    SIM_EQ          reduce using rule 104 (fator1 -> empty .)
    SIM_DIF         reduce using rule 104 (fator1 -> empty .)
    <               reduce using rule 104 (fator1 -> empty .)
    SIM_LE          reduce using rule 104 (fator1 -> empty .)
    >               reduce using rule 104 (fator1 -> empty .)
    SIM_GE          reduce using rule 104 (fator1 -> empty .)
    OR              reduce using rule 104 (fator1 -> empty .)
    AND             reduce using rule 104 (fator1 -> empty .)
    error           reduce using rule 104 (fator1 -> empty .)
    :               reduce using rule 104 (fator1 -> empty .)
    ;               reduce using rule 104 (fator1 -> empty .)
    )               reduce using rule 104 (fator1 -> empty .)
    ,               reduce using rule 104 (fator1 -> empty .)


state 106

    (109) elemento -> BINARIO action31 .

    SIM_POT         reduce using rule 109 (elemento -> BINARIO action31 .)
    *               reduce using rule 109 (elemento -> BINARIO action31 .)
    /               reduce using rule 109 (elemento -> BINARIO action31 .)
    %               reduce using rule 109 (elemento -> BINARIO action31 .)
    +               reduce using rule 109 (elemento -> BINARIO action31 .)
    -               reduce using rule 109 (elemento -> BINARIO action31 .)
    SIM_EQ          reduce using rule 109 (elemento -> BINARIO action31 .)
    SIM_DIF         reduce using rule 109 (elemento -> BINARIO action31 .)
    <               reduce using rule 109 (elemento -> BINARIO action31 .)
    SIM_LE          reduce using rule 109 (elemento -> BINARIO action31 .)
    >               reduce using rule 109 (elemento -> BINARIO action31 .)
    SIM_GE          reduce using rule 109 (elemento -> BINARIO action31 .)
    OR              reduce using rule 109 (elemento -> BINARIO action31 .)
    AND             reduce using rule 109 (elemento -> BINARIO action31 .)
    error           reduce using rule 109 (elemento -> BINARIO action31 .)
    :               reduce using rule 109 (elemento -> BINARIO action31 .)
    ;               reduce using rule 109 (elemento -> BINARIO action31 .)
    )               reduce using rule 109 (elemento -> BINARIO action31 .)
    ,               reduce using rule 109 (elemento -> BINARIO action31 .)


state 107

    (79) valor -> NOT valor . action20
    (82) action20 -> .

    OR              reduce using rule 82 (action20 -> .)
    AND             reduce using rule 82 (action20 -> .)
    error           reduce using rule 82 (action20 -> .)
    :               reduce using rule 82 (action20 -> .)
    ;               reduce using rule 82 (action20 -> .)
    )               reduce using rule 82 (action20 -> .)
    ,               reduce using rule 82 (action20 -> .)

    action20                       shift and go to state 130

state 108

    (25) listaexp -> expressao . listaexp1
    (26) listaexp1 -> . , action7 listaexp
    (27) listaexp1 -> . empty action7
    (29) listaexp1 -> . error action7 listaexp
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 132
    error           shift and go to state 133
    )               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    listaexp1                      shift and go to state 131
    empty                          shift and go to state 134

state 109

    (37) cmdsaida -> OUTPUT ( listaexp . ) ;
    (38) cmdsaida -> OUTPUT ( listaexp . error ;
    (40) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 135
    error           shift and go to state 136


state 110

    (39) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 137


state 111

    (61) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> WHILE action13 expressao action14 . error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 . : error listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 . : [ listacmd ] action15 else error

    :               shift and go to state 139
    error           shift and go to state 138


state 112

    (30) cmdatribui -> listaidenti SIM_ATTR expressao action4 . ;

    ;               shift and go to state 140


state 113

    (32) cmdentrada -> INPUT ( listaidenti action6 . ) ;
    (34) cmdentrada -> INPUT ( listaidenti action6 . error ;
    (36) cmdentrada -> INPUT ( listaidenti action6 . ) error

    )               shift and go to state 141
    error           shift and go to state 142


state 114

    (35) cmdentrada -> INPUT error listaidenti action6 . ) ;

    )               shift and go to state 143


state 115

    (23) listaindenti1 -> , action5 listaidenti .

    SIM_ATTR        reduce using rule 23 (listaindenti1 -> , action5 listaidenti .)
    )               reduce using rule 23 (listaindenti1 -> , action5 listaidenti .)
    error           reduce using rule 23 (listaindenti1 -> , action5 listaidenti .)


state 116

    (116) elemento -> - elemento action36 .

    SIM_POT         reduce using rule 116 (elemento -> - elemento action36 .)
    *               reduce using rule 116 (elemento -> - elemento action36 .)
    /               reduce using rule 116 (elemento -> - elemento action36 .)
    %               reduce using rule 116 (elemento -> - elemento action36 .)
    +               reduce using rule 116 (elemento -> - elemento action36 .)
    -               reduce using rule 116 (elemento -> - elemento action36 .)
    SIM_EQ          reduce using rule 116 (elemento -> - elemento action36 .)
    SIM_DIF         reduce using rule 116 (elemento -> - elemento action36 .)
    <               reduce using rule 116 (elemento -> - elemento action36 .)
    SIM_LE          reduce using rule 116 (elemento -> - elemento action36 .)
    >               reduce using rule 116 (elemento -> - elemento action36 .)
    SIM_GE          reduce using rule 116 (elemento -> - elemento action36 .)
    OR              reduce using rule 116 (elemento -> - elemento action36 .)
    AND             reduce using rule 116 (elemento -> - elemento action36 .)
    error           reduce using rule 116 (elemento -> - elemento action36 .)
    :               reduce using rule 116 (elemento -> - elemento action36 .)
    ;               reduce using rule 116 (elemento -> - elemento action36 .)
    )               reduce using rule 116 (elemento -> - elemento action36 .)
    ,               reduce using rule 116 (elemento -> - elemento action36 .)


state 117

    (44) cmdselecao -> IF expressao action8 error . [ listacmd ] action9 elif else ;

    [               shift and go to state 144


state 118

    (41) cmdselecao -> IF expressao action8 : . [ listacmd ] action9 elif else ;
    (45) cmdselecao -> IF expressao action8 : . error listacmd ] action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : . [ listacmd error action9 elif else ;
    (47) cmdselecao -> IF expressao action8 : . [ listacmd ] action9 elif else error

    [               shift and go to state 146
    error           shift and go to state 145


state 119

    (102) termo1 -> % fator . termo1 p_action27
    (99) termo1 -> . empty
    (100) termo1 -> . * fator termo1 p_action25
    (101) termo1 -> . / fator termo1 p_action26
    (102) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 78
    /               shift and go to state 79
    %               shift and go to state 77
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 147
    empty                          shift and go to state 80

state 120

    (100) termo1 -> * fator . termo1 p_action25
    (99) termo1 -> . empty
    (100) termo1 -> . * fator termo1 p_action25
    (101) termo1 -> . / fator termo1 p_action26
    (102) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 78
    /               shift and go to state 79
    %               shift and go to state 77
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 148
    empty                          shift and go to state 80

state 121

    (101) termo1 -> / fator . termo1 p_action26
    (99) termo1 -> . empty
    (100) termo1 -> . * fator termo1 p_action25
    (101) termo1 -> . / fator termo1 p_action26
    (102) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 78
    /               shift and go to state 79
    %               shift and go to state 77
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 149
    empty                          shift and go to state 80

state 122

    (84) relacional1 -> operador action21 . aritmetica action22
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    fator                          shift and go to state 42
    aritmetica                     shift and go to state 150
    termo                          shift and go to state 47
    elemento                       shift and go to state 51

state 123

    (114) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 114 (elemento -> ( expressao ) .)
    *               reduce using rule 114 (elemento -> ( expressao ) .)
    /               reduce using rule 114 (elemento -> ( expressao ) .)
    %               reduce using rule 114 (elemento -> ( expressao ) .)
    +               reduce using rule 114 (elemento -> ( expressao ) .)
    -               reduce using rule 114 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 114 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 114 (elemento -> ( expressao ) .)
    <               reduce using rule 114 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 114 (elemento -> ( expressao ) .)
    >               reduce using rule 114 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 114 (elemento -> ( expressao ) .)
    OR              reduce using rule 114 (elemento -> ( expressao ) .)
    AND             reduce using rule 114 (elemento -> ( expressao ) .)
    error           reduce using rule 114 (elemento -> ( expressao ) .)
    :               reduce using rule 114 (elemento -> ( expressao ) .)
    ;               reduce using rule 114 (elemento -> ( expressao ) .)
    )               reduce using rule 114 (elemento -> ( expressao ) .)
    ,               reduce using rule 114 (elemento -> ( expressao ) .)


state 124

    (72) expressao1 -> AND valor . action_17 expressao1
    (74) action_17 -> .

    OR              reduce using rule 74 (action_17 -> .)
    AND             reduce using rule 74 (action_17 -> .)
    error           reduce using rule 74 (action_17 -> .)
    :               reduce using rule 74 (action_17 -> .)
    ;               reduce using rule 74 (action_17 -> .)
    )               reduce using rule 74 (action_17 -> .)
    ,               reduce using rule 74 (action_17 -> .)

    action_17                      shift and go to state 151

state 125

    (75) expressao1 -> error valor . expressao1
    (70) expressao1 -> . empty
    (71) expressao1 -> . OR valor action_16 expressao1
    (72) expressao1 -> . AND valor action_17 expressao1
    (75) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 94
    AND             shift and go to state 91
    error           shift and go to state 92
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 152
    empty                          shift and go to state 95

state 126

    (71) expressao1 -> OR valor . action_16 expressao1
    (73) action_16 -> .

    OR              reduce using rule 73 (action_16 -> .)
    AND             reduce using rule 73 (action_16 -> .)
    error           reduce using rule 73 (action_16 -> .)
    :               reduce using rule 73 (action_16 -> .)
    ;               reduce using rule 73 (action_16 -> .)
    )               reduce using rule 73 (action_16 -> .)
    ,               reduce using rule 73 (action_16 -> .)

    action_16                      shift and go to state 153

state 127

    (96) aritmetica1 -> + termo . aritmetica1 p_action23
    (95) aritmetica1 -> . empty
    (96) aritmetica1 -> . + termo aritmetica1 p_action23
    (97) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 97
    -               shift and go to state 98
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 154
    empty                          shift and go to state 100

state 128

    (97) aritmetica1 -> - termo . aritmetica1 p_action24
    (95) aritmetica1 -> . empty
    (96) aritmetica1 -> . + termo aritmetica1 p_action23
    (97) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 97
    -               shift and go to state 98
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 155
    empty                          shift and go to state 100

state 129

    (105) fator1 -> SIM_POT elemento . action28 fator1
    (106) action28 -> .

    SIM_POT         reduce using rule 106 (action28 -> .)
    *               reduce using rule 106 (action28 -> .)
    /               reduce using rule 106 (action28 -> .)
    %               reduce using rule 106 (action28 -> .)
    +               reduce using rule 106 (action28 -> .)
    -               reduce using rule 106 (action28 -> .)
    SIM_EQ          reduce using rule 106 (action28 -> .)
    SIM_DIF         reduce using rule 106 (action28 -> .)
    <               reduce using rule 106 (action28 -> .)
    SIM_LE          reduce using rule 106 (action28 -> .)
    >               reduce using rule 106 (action28 -> .)
    SIM_GE          reduce using rule 106 (action28 -> .)
    OR              reduce using rule 106 (action28 -> .)
    AND             reduce using rule 106 (action28 -> .)
    error           reduce using rule 106 (action28 -> .)
    :               reduce using rule 106 (action28 -> .)
    ;               reduce using rule 106 (action28 -> .)
    )               reduce using rule 106 (action28 -> .)
    ,               reduce using rule 106 (action28 -> .)

    action28                       shift and go to state 156

state 130

    (79) valor -> NOT valor action20 .

    OR              reduce using rule 79 (valor -> NOT valor action20 .)
    AND             reduce using rule 79 (valor -> NOT valor action20 .)
    error           reduce using rule 79 (valor -> NOT valor action20 .)
    :               reduce using rule 79 (valor -> NOT valor action20 .)
    ;               reduce using rule 79 (valor -> NOT valor action20 .)
    )               reduce using rule 79 (valor -> NOT valor action20 .)
    ,               reduce using rule 79 (valor -> NOT valor action20 .)


state 131

    (25) listaexp -> expressao listaexp1 .

    )               reduce using rule 25 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 25 (listaexp -> expressao listaexp1 .)


state 132

    (26) listaexp1 -> , . action7 listaexp
    (28) action7 -> .

    TRUE            reduce using rule 28 (action7 -> .)
    FALSE           reduce using rule 28 (action7 -> .)
    NOT             reduce using rule 28 (action7 -> .)
    ID              reduce using rule 28 (action7 -> .)
    INTEIRO         reduce using rule 28 (action7 -> .)
    BINARIO         reduce using rule 28 (action7 -> .)
    OCTAL           reduce using rule 28 (action7 -> .)
    HEXADECIMAL     reduce using rule 28 (action7 -> .)
    REAL            reduce using rule 28 (action7 -> .)
    LITERAL         reduce using rule 28 (action7 -> .)
    (               reduce using rule 28 (action7 -> .)
    +               reduce using rule 28 (action7 -> .)
    -               reduce using rule 28 (action7 -> .)

    action7                        shift and go to state 157

state 133

    (29) listaexp1 -> error . action7 listaexp
    (28) action7 -> .

    TRUE            reduce using rule 28 (action7 -> .)
    FALSE           reduce using rule 28 (action7 -> .)
    NOT             reduce using rule 28 (action7 -> .)
    ID              reduce using rule 28 (action7 -> .)
    INTEIRO         reduce using rule 28 (action7 -> .)
    BINARIO         reduce using rule 28 (action7 -> .)
    OCTAL           reduce using rule 28 (action7 -> .)
    HEXADECIMAL     reduce using rule 28 (action7 -> .)
    REAL            reduce using rule 28 (action7 -> .)
    LITERAL         reduce using rule 28 (action7 -> .)
    (               reduce using rule 28 (action7 -> .)
    +               reduce using rule 28 (action7 -> .)
    -               reduce using rule 28 (action7 -> .)

    action7                        shift and go to state 158

state 134

    (27) listaexp1 -> empty . action7
    (28) action7 -> .

    )               reduce using rule 28 (action7 -> .)
    error           reduce using rule 28 (action7 -> .)

    action7                        shift and go to state 159

state 135

    (37) cmdsaida -> OUTPUT ( listaexp ) . ;
    (40) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 161
    error           shift and go to state 160


state 136

    (38) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 162


state 137

    (39) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 163


state 138

    (65) cmdrepeticao -> WHILE action13 expressao action14 error . [ listacmd ] action15 else ;

    [               shift and go to state 164


state 139

    (61) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd ] action15 else ;
    (66) cmdrepeticao -> WHILE action13 expressao action14 : . error listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : . [ listacmd ] action15 else error

    [               shift and go to state 166
    error           shift and go to state 165


state 140

    (30) cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .

    INPUT           reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    OUTPUT          reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    IF              reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    WHILE           reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    ID              reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    ]               reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    error           reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)
    $end            reduce using rule 30 (cmdatribui -> listaidenti SIM_ATTR expressao action4 ; .)


state 141

    (32) cmdentrada -> INPUT ( listaidenti action6 ) . ;
    (36) cmdentrada -> INPUT ( listaidenti action6 ) . error

    ;               shift and go to state 168
    error           shift and go to state 167


state 142

    (34) cmdentrada -> INPUT ( listaidenti action6 error . ;

    ;               shift and go to state 169


state 143

    (35) cmdentrada -> INPUT error listaidenti action6 ) . ;

    ;               shift and go to state 170


state 144

    (44) cmdselecao -> IF expressao action8 error [ . listacmd ] action9 elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 171
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 145

    (45) cmdselecao -> IF expressao action8 : error . listacmd ] action9 elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 172
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 146

    (41) cmdselecao -> IF expressao action8 : [ . listacmd ] action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : [ . listacmd error action9 elif else ;
    (47) cmdselecao -> IF expressao action8 : [ . listacmd ] action9 elif else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 173
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 147

    (102) termo1 -> % fator termo1 . p_action27
    (129) p_action27 -> .

    +               reduce using rule 129 (p_action27 -> .)
    -               reduce using rule 129 (p_action27 -> .)
    SIM_EQ          reduce using rule 129 (p_action27 -> .)
    SIM_DIF         reduce using rule 129 (p_action27 -> .)
    <               reduce using rule 129 (p_action27 -> .)
    SIM_LE          reduce using rule 129 (p_action27 -> .)
    >               reduce using rule 129 (p_action27 -> .)
    SIM_GE          reduce using rule 129 (p_action27 -> .)
    OR              reduce using rule 129 (p_action27 -> .)
    AND             reduce using rule 129 (p_action27 -> .)
    error           reduce using rule 129 (p_action27 -> .)
    :               reduce using rule 129 (p_action27 -> .)
    ;               reduce using rule 129 (p_action27 -> .)
    )               reduce using rule 129 (p_action27 -> .)
    ,               reduce using rule 129 (p_action27 -> .)

    p_action27                     shift and go to state 174

state 148

    (100) termo1 -> * fator termo1 . p_action25
    (127) p_action25 -> .

    +               reduce using rule 127 (p_action25 -> .)
    -               reduce using rule 127 (p_action25 -> .)
    SIM_EQ          reduce using rule 127 (p_action25 -> .)
    SIM_DIF         reduce using rule 127 (p_action25 -> .)
    <               reduce using rule 127 (p_action25 -> .)
    SIM_LE          reduce using rule 127 (p_action25 -> .)
    >               reduce using rule 127 (p_action25 -> .)
    SIM_GE          reduce using rule 127 (p_action25 -> .)
    OR              reduce using rule 127 (p_action25 -> .)
    AND             reduce using rule 127 (p_action25 -> .)
    error           reduce using rule 127 (p_action25 -> .)
    :               reduce using rule 127 (p_action25 -> .)
    ;               reduce using rule 127 (p_action25 -> .)
    )               reduce using rule 127 (p_action25 -> .)
    ,               reduce using rule 127 (p_action25 -> .)

    p_action25                     shift and go to state 175

state 149

    (101) termo1 -> / fator termo1 . p_action26
    (128) p_action26 -> .

    +               reduce using rule 128 (p_action26 -> .)
    -               reduce using rule 128 (p_action26 -> .)
    SIM_EQ          reduce using rule 128 (p_action26 -> .)
    SIM_DIF         reduce using rule 128 (p_action26 -> .)
    <               reduce using rule 128 (p_action26 -> .)
    SIM_LE          reduce using rule 128 (p_action26 -> .)
    >               reduce using rule 128 (p_action26 -> .)
    SIM_GE          reduce using rule 128 (p_action26 -> .)
    OR              reduce using rule 128 (p_action26 -> .)
    AND             reduce using rule 128 (p_action26 -> .)
    error           reduce using rule 128 (p_action26 -> .)
    :               reduce using rule 128 (p_action26 -> .)
    ;               reduce using rule 128 (p_action26 -> .)
    )               reduce using rule 128 (p_action26 -> .)
    ,               reduce using rule 128 (p_action26 -> .)

    p_action26                     shift and go to state 176

state 150

    (84) relacional1 -> operador action21 aritmetica . action22
    (87) action22 -> .

    OR              reduce using rule 87 (action22 -> .)
    AND             reduce using rule 87 (action22 -> .)
    error           reduce using rule 87 (action22 -> .)
    :               reduce using rule 87 (action22 -> .)
    ;               reduce using rule 87 (action22 -> .)
    )               reduce using rule 87 (action22 -> .)
    ,               reduce using rule 87 (action22 -> .)

    action22                       shift and go to state 177

state 151

    (72) expressao1 -> AND valor action_17 . expressao1
    (70) expressao1 -> . empty
    (71) expressao1 -> . OR valor action_16 expressao1
    (72) expressao1 -> . AND valor action_17 expressao1
    (75) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 94
    AND             shift and go to state 91
    error           shift and go to state 92
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 178
    empty                          shift and go to state 95

state 152

    (75) expressao1 -> error valor expressao1 .

    :               reduce using rule 75 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 75 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 75 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 75 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 75 (expressao1 -> error valor expressao1 .)


state 153

    (71) expressao1 -> OR valor action_16 . expressao1
    (70) expressao1 -> . empty
    (71) expressao1 -> . OR valor action_16 expressao1
    (72) expressao1 -> . AND valor action_17 expressao1
    (75) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 94
    AND             shift and go to state 91
    error           shift and go to state 92
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 179
    empty                          shift and go to state 95

state 154

    (96) aritmetica1 -> + termo aritmetica1 . p_action23
    (125) p_action23 -> .

    SIM_EQ          reduce using rule 125 (p_action23 -> .)
    SIM_DIF         reduce using rule 125 (p_action23 -> .)
    <               reduce using rule 125 (p_action23 -> .)
    SIM_LE          reduce using rule 125 (p_action23 -> .)
    >               reduce using rule 125 (p_action23 -> .)
    SIM_GE          reduce using rule 125 (p_action23 -> .)
    OR              reduce using rule 125 (p_action23 -> .)
    AND             reduce using rule 125 (p_action23 -> .)
    error           reduce using rule 125 (p_action23 -> .)
    :               reduce using rule 125 (p_action23 -> .)
    ;               reduce using rule 125 (p_action23 -> .)
    )               reduce using rule 125 (p_action23 -> .)
    ,               reduce using rule 125 (p_action23 -> .)

    p_action23                     shift and go to state 180

state 155

    (97) aritmetica1 -> - termo aritmetica1 . p_action24
    (126) p_action24 -> .

    SIM_EQ          reduce using rule 126 (p_action24 -> .)
    SIM_DIF         reduce using rule 126 (p_action24 -> .)
    <               reduce using rule 126 (p_action24 -> .)
    SIM_LE          reduce using rule 126 (p_action24 -> .)
    >               reduce using rule 126 (p_action24 -> .)
    SIM_GE          reduce using rule 126 (p_action24 -> .)
    OR              reduce using rule 126 (p_action24 -> .)
    AND             reduce using rule 126 (p_action24 -> .)
    error           reduce using rule 126 (p_action24 -> .)
    :               reduce using rule 126 (p_action24 -> .)
    ;               reduce using rule 126 (p_action24 -> .)
    )               reduce using rule 126 (p_action24 -> .)
    ,               reduce using rule 126 (p_action24 -> .)

    p_action24                     shift and go to state 181

state 156

    (105) fator1 -> SIM_POT elemento action28 . fator1
    (104) fator1 -> . empty
    (105) fator1 -> . SIM_POT elemento action28 fator1
    (12) empty -> .

    SIM_POT         shift and go to state 104
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 182
    empty                          shift and go to state 105

state 157

    (26) listaexp1 -> , action7 . listaexp
    (25) listaexp -> . expressao listaexp1
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 108
    listaexp                       shift and go to state 183
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 158

    (29) listaexp1 -> error action7 . listaexp
    (25) listaexp -> . expressao listaexp1
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 108
    listaexp                       shift and go to state 184
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 159

    (27) listaexp1 -> empty action7 .

    )               reduce using rule 27 (listaexp1 -> empty action7 .)
    error           reduce using rule 27 (listaexp1 -> empty action7 .)


state 160

    (40) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)
    $end            reduce using rule 40 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 161

    (37) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    $end            reduce using rule 37 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 162

    (38) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)
    $end            reduce using rule 38 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 163

    (39) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)
    $end            reduce using rule 39 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 164

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ . listacmd ] action15 else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 185
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 165

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error . listacmd ] action15 else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 186
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 166

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd error action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ . listacmd ] action15 else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 187
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 167

    (36) cmdentrada -> INPUT ( listaidenti action6 ) error .

    INPUT           reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    OUTPUT          reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    IF              reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    WHILE           reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    ID              reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    ]               reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    error           reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)
    $end            reduce using rule 36 (cmdentrada -> INPUT ( listaidenti action6 ) error .)


state 168

    (32) cmdentrada -> INPUT ( listaidenti action6 ) ; .

    INPUT           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    OUTPUT          reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    IF              reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    WHILE           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    ID              reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    ]               reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    error           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)
    $end            reduce using rule 32 (cmdentrada -> INPUT ( listaidenti action6 ) ; .)


state 169

    (34) cmdentrada -> INPUT ( listaidenti action6 error ; .

    INPUT           reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    OUTPUT          reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    IF              reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    WHILE           reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    ID              reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    ]               reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    error           reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)
    $end            reduce using rule 34 (cmdentrada -> INPUT ( listaidenti action6 error ; .)


state 170

    (35) cmdentrada -> INPUT error listaidenti action6 ) ; .

    INPUT           reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    OUTPUT          reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    IF              reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    WHILE           reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    ID              reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    ]               reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    error           reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)
    $end            reduce using rule 35 (cmdentrada -> INPUT error listaidenti action6 ) ; .)


state 171

    (44) cmdselecao -> IF expressao action8 error [ listacmd . ] action9 elif else ;

    ]               shift and go to state 188


state 172

    (45) cmdselecao -> IF expressao action8 : error listacmd . ] action9 elif else ;

    ]               shift and go to state 189


state 173

    (41) cmdselecao -> IF expressao action8 : [ listacmd . ] action9 elif else ;
    (46) cmdselecao -> IF expressao action8 : [ listacmd . error action9 elif else ;
    (47) cmdselecao -> IF expressao action8 : [ listacmd . ] action9 elif else error

    ]               shift and go to state 191
    error           shift and go to state 190


state 174

    (102) termo1 -> % fator termo1 p_action27 .

    +               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    -               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    SIM_EQ          reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    SIM_DIF         reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    <               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    SIM_LE          reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    >               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    SIM_GE          reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    OR              reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    AND             reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    error           reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    :               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    ;               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    )               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)
    ,               reduce using rule 102 (termo1 -> % fator termo1 p_action27 .)


state 175

    (100) termo1 -> * fator termo1 p_action25 .

    +               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    -               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    SIM_EQ          reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    SIM_DIF         reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    <               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    SIM_LE          reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    >               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    SIM_GE          reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    OR              reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    AND             reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    error           reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    :               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    ;               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    )               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)
    ,               reduce using rule 100 (termo1 -> * fator termo1 p_action25 .)


state 176

    (101) termo1 -> / fator termo1 p_action26 .

    +               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    -               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    SIM_EQ          reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    SIM_DIF         reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    <               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    SIM_LE          reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    >               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    SIM_GE          reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    OR              reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    AND             reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    error           reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    :               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    ;               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    )               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)
    ,               reduce using rule 101 (termo1 -> / fator termo1 p_action26 .)


state 177

    (84) relacional1 -> operador action21 aritmetica action22 .

    OR              reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    AND             reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    error           reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    :               reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    ;               reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    )               reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)
    ,               reduce using rule 84 (relacional1 -> operador action21 aritmetica action22 .)


state 178

    (72) expressao1 -> AND valor action_17 expressao1 .

    :               reduce using rule 72 (expressao1 -> AND valor action_17 expressao1 .)
    error           reduce using rule 72 (expressao1 -> AND valor action_17 expressao1 .)
    ;               reduce using rule 72 (expressao1 -> AND valor action_17 expressao1 .)
    )               reduce using rule 72 (expressao1 -> AND valor action_17 expressao1 .)
    ,               reduce using rule 72 (expressao1 -> AND valor action_17 expressao1 .)


state 179

    (71) expressao1 -> OR valor action_16 expressao1 .

    :               reduce using rule 71 (expressao1 -> OR valor action_16 expressao1 .)
    error           reduce using rule 71 (expressao1 -> OR valor action_16 expressao1 .)
    ;               reduce using rule 71 (expressao1 -> OR valor action_16 expressao1 .)
    )               reduce using rule 71 (expressao1 -> OR valor action_16 expressao1 .)
    ,               reduce using rule 71 (expressao1 -> OR valor action_16 expressao1 .)


state 180

    (96) aritmetica1 -> + termo aritmetica1 p_action23 .

    SIM_EQ          reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_DIF         reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    <               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_LE          reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    >               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_GE          reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    OR              reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    AND             reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    error           reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    :               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ;               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    )               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ,               reduce using rule 96 (aritmetica1 -> + termo aritmetica1 p_action23 .)


state 181

    (97) aritmetica1 -> - termo aritmetica1 p_action24 .

    SIM_EQ          reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_DIF         reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    <               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_LE          reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    >               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_GE          reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    OR              reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    AND             reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    error           reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    :               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ;               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    )               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ,               reduce using rule 97 (aritmetica1 -> - termo aritmetica1 p_action24 .)


state 182

    (105) fator1 -> SIM_POT elemento action28 fator1 .

    *               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    /               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    %               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    +               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    -               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_EQ          reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_DIF         reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    <               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_LE          reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    >               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    SIM_GE          reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    OR              reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    AND             reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    error           reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    :               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    ;               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    )               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)
    ,               reduce using rule 105 (fator1 -> SIM_POT elemento action28 fator1 .)


state 183

    (26) listaexp1 -> , action7 listaexp .

    )               reduce using rule 26 (listaexp1 -> , action7 listaexp .)
    error           reduce using rule 26 (listaexp1 -> , action7 listaexp .)


state 184

    (29) listaexp1 -> error action7 listaexp .

    )               reduce using rule 29 (listaexp1 -> error action7 listaexp .)
    error           reduce using rule 29 (listaexp1 -> error action7 listaexp .)


state 185

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd . ] action15 else ;

    ]               shift and go to state 192


state 186

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd . ] action15 else ;

    ]               shift and go to state 193


state 187

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . ] action15 else ;
    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . error action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd . ] action15 else error

    ]               shift and go to state 195
    error           shift and go to state 194


state 188

    (44) cmdselecao -> IF expressao action8 error [ listacmd ] . action9 elif else ;
    (43) action9 -> .

    ELSE            reduce using rule 43 (action9 -> .)
    ;               reduce using rule 43 (action9 -> .)
    ELIF            reduce using rule 43 (action9 -> .)

    action9                        shift and go to state 196

state 189

    (45) cmdselecao -> IF expressao action8 : error listacmd ] . action9 elif else ;
    (43) action9 -> .

    ELSE            reduce using rule 43 (action9 -> .)
    ;               reduce using rule 43 (action9 -> .)
    ELIF            reduce using rule 43 (action9 -> .)

    action9                        shift and go to state 197

state 190

    (46) cmdselecao -> IF expressao action8 : [ listacmd error . action9 elif else ;
    (43) action9 -> .

    ELSE            reduce using rule 43 (action9 -> .)
    ;               reduce using rule 43 (action9 -> .)
    ELIF            reduce using rule 43 (action9 -> .)

    action9                        shift and go to state 198

state 191

    (41) cmdselecao -> IF expressao action8 : [ listacmd ] . action9 elif else ;
    (47) cmdselecao -> IF expressao action8 : [ listacmd ] . action9 elif else error
    (43) action9 -> .

    ELSE            reduce using rule 43 (action9 -> .)
    ;               reduce using rule 43 (action9 -> .)
    error           reduce using rule 43 (action9 -> .)
    ELIF            reduce using rule 43 (action9 -> .)

    action9                        shift and go to state 199

state 192

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] . action15 else ;
    (64) action15 -> .

    ELSE            reduce using rule 64 (action15 -> .)
    ;               reduce using rule 64 (action15 -> .)

    action15                       shift and go to state 200

state 193

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] . action15 else ;
    (64) action15 -> .

    ELSE            reduce using rule 64 (action15 -> .)
    ;               reduce using rule 64 (action15 -> .)

    action15                       shift and go to state 201

state 194

    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error . action15 else ;
    (64) action15 -> .

    ELSE            reduce using rule 64 (action15 -> .)
    ;               reduce using rule 64 (action15 -> .)

    action15                       shift and go to state 202

state 195

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] . action15 else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] . action15 else error
    (64) action15 -> .

    ELSE            reduce using rule 64 (action15 -> .)
    ;               reduce using rule 64 (action15 -> .)
    error           reduce using rule 64 (action15 -> .)

    action15                       shift and go to state 203

state 196

    (44) cmdselecao -> IF expressao action8 error [ listacmd ] action9 . elif else ;
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 204
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 197

    (45) cmdselecao -> IF expressao action8 : error listacmd ] action9 . elif else ;
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 207
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 198

    (46) cmdselecao -> IF expressao action8 : [ listacmd error action9 . elif else ;
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 208
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 199

    (41) cmdselecao -> IF expressao action8 : [ listacmd ] action9 . elif else ;
    (47) cmdselecao -> IF expressao action8 : [ listacmd ] action9 . elif else error
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 209
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 200

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 212
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 201

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 214
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 202

    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 215
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 203

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 . else ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 . else error
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 216
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 204

    (44) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 217
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 205

    (49) elif -> action10 . ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> action10 . ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> action10 . ELIF expressao action11 : error listacmd ] elif
    (54) elif -> action10 . ELIF expressao action11 : [ listacmd error elif

    ELIF            shift and go to state 218


state 206

    (48) elif -> empty .

    ELSE            reduce using rule 48 (elif -> empty .)
    ;               reduce using rule 48 (elif -> empty .)
    error           reduce using rule 48 (elif -> empty .)


state 207

    (45) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 219
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 208

    (46) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif . else ;
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 220
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 209

    (41) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif . else ;
    (47) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif . else error
    (55) else -> . empty
    (56) else -> . action12 ELSE : [ listacmd ]
    (58) else -> . ELSE error [ listacmd ]
    (59) else -> . ELSE : error listacmd ]
    (60) else -> . ELSE : [ listacmd error
    (12) empty -> .
    (57) action12 -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 211
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

  ! ELSE            [ reduce using rule 57 (action12 -> .) ]

    else                           shift and go to state 221
    action12                       shift and go to state 210
    empty                          shift and go to state 213

state 210

    (56) else -> action12 . ELSE : [ listacmd ]

    ELSE            shift and go to state 222


state 211

    (58) else -> ELSE . error [ listacmd ]
    (59) else -> ELSE . : error listacmd ]
    (60) else -> ELSE . : [ listacmd error

    error           shift and go to state 223
    :               shift and go to state 224


state 212

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else . ;

    ;               shift and go to state 225


state 213

    (55) else -> empty .

    ;               reduce using rule 55 (else -> empty .)
    error           reduce using rule 55 (else -> empty .)


state 214

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else . ;

    ;               shift and go to state 226


state 215

    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else . ;

    ;               shift and go to state 227


state 216

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else . ;
    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else . error

    ;               shift and go to state 229
    error           shift and go to state 228


state 217

    (44) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else . ;

    ;               shift and go to state 230


state 218

    (49) elif -> action10 ELIF . expressao action11 : [ listacmd ] elif
    (52) elif -> action10 ELIF . expressao action11 error [ listacmd ] elif
    (53) elif -> action10 ELIF . expressao action11 : error listacmd ] elif
    (54) elif -> action10 ELIF . expressao action11 : [ listacmd error elif
    (69) expressao -> . valor expressao1
    (76) valor -> . relacional
    (77) valor -> . TRUE action18
    (78) valor -> . FALSE action19
    (79) valor -> . NOT valor action20
    (83) relacional -> . aritmetica relacional1
    (94) aritmetica -> . termo aritmetica1
    (98) termo -> . fator termo1
    (103) fator -> . elemento fator1
    (107) elemento -> . ID action29
    (108) elemento -> . INTEIRO action30
    (109) elemento -> . BINARIO action31
    (110) elemento -> . OCTAL action32
    (111) elemento -> . HEXADECIMAL action33
    (112) elemento -> . REAL action34
    (113) elemento -> . LITERAL action35
    (114) elemento -> . ( expressao )
    (115) elemento -> . + elemento
    (116) elemento -> . - elemento action36

    TRUE            shift and go to state 38
    FALSE           shift and go to state 50
    NOT             shift and go to state 53
    ID              shift and go to state 49
    INTEIRO         shift and go to state 39
    BINARIO         shift and go to state 52
    OCTAL           shift and go to state 35
    HEXADECIMAL     shift and go to state 37
    REAL            shift and go to state 34
    LITERAL         shift and go to state 46
    (               shift and go to state 44
    +               shift and go to state 41
    -               shift and go to state 36

    expressao                      shift and go to state 231
    fator                          shift and go to state 42
    aritmetica                     shift and go to state 43
    valor                          shift and go to state 45
    termo                          shift and go to state 47
    relacional                     shift and go to state 48
    elemento                       shift and go to state 51

state 219

    (45) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else . ;

    ;               shift and go to state 232


state 220

    (46) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else . ;

    ;               shift and go to state 233


state 221

    (41) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else . ;
    (47) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else . error

    ;               shift and go to state 235
    error           shift and go to state 234


state 222

    (56) else -> action12 ELSE . : [ listacmd ]

    :               shift and go to state 236


state 223

    (58) else -> ELSE error . [ listacmd ]

    [               shift and go to state 237


state 224

    (59) else -> ELSE : . error listacmd ]
    (60) else -> ELSE : . [ listacmd error

    error           shift and go to state 238
    [               shift and go to state 239


state 225

    (65) cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .

    INPUT           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    IF              reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    WHILE           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    ID              reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    ]               reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    error           reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)
    $end            reduce using rule 65 (cmdrepeticao -> WHILE action13 expressao action14 error [ listacmd ] action15 else ; .)


state 226

    (66) cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .

    INPUT           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    IF              reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    WHILE           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    ID              reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    ]               reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    error           reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)
    $end            reduce using rule 66 (cmdrepeticao -> WHILE action13 expressao action14 : error listacmd ] action15 else ; .)


state 227

    (67) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .

    INPUT           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    OUTPUT          reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    IF              reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    WHILE           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    ID              reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    ]               reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    error           reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)
    $end            reduce using rule 67 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd error action15 else ; .)


state 228

    (68) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .

    INPUT           reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    OUTPUT          reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    IF              reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    WHILE           reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    ID              reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    ]               reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    error           reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)
    $end            reduce using rule 68 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else error .)


state 229

    (61) cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .

    INPUT           reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    OUTPUT          reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    IF              reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    WHILE           reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    ID              reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    ]               reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    error           reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)
    $end            reduce using rule 61 (cmdrepeticao -> WHILE action13 expressao action14 : [ listacmd ] action15 else ; .)


state 230

    (44) cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .

    INPUT           reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    IF              reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    ID              reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    ]               reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    error           reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)
    $end            reduce using rule 44 (cmdselecao -> IF expressao action8 error [ listacmd ] action9 elif else ; .)


state 231

    (49) elif -> action10 ELIF expressao . action11 : [ listacmd ] elif
    (52) elif -> action10 ELIF expressao . action11 error [ listacmd ] elif
    (53) elif -> action10 ELIF expressao . action11 : error listacmd ] elif
    (54) elif -> action10 ELIF expressao . action11 : [ listacmd error elif
    (51) action11 -> .

    :               reduce using rule 51 (action11 -> .)
    error           reduce using rule 51 (action11 -> .)

    action11                       shift and go to state 240

state 232

    (45) cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .

    INPUT           reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    IF              reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    ID              reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    ]               reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    error           reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)
    $end            reduce using rule 45 (cmdselecao -> IF expressao action8 : error listacmd ] action9 elif else ; .)


state 233

    (46) cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .

    INPUT           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    OUTPUT          reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    IF              reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    WHILE           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    ID              reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    ]               reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    error           reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)
    $end            reduce using rule 46 (cmdselecao -> IF expressao action8 : [ listacmd error action9 elif else ; .)


state 234

    (47) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .

    INPUT           reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    OUTPUT          reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    IF              reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    WHILE           reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    ID              reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    ]               reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    error           reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)
    $end            reduce using rule 47 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else error .)


state 235

    (41) cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .

    INPUT           reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    OUTPUT          reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    IF              reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    WHILE           reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    ID              reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    ]               reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    error           reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)
    $end            reduce using rule 41 (cmdselecao -> IF expressao action8 : [ listacmd ] action9 elif else ; .)


state 236

    (56) else -> action12 ELSE : . [ listacmd ]

    [               shift and go to state 241


state 237

    (58) else -> ELSE error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 242
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 238

    (59) else -> ELSE : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 243
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 239

    (60) else -> ELSE : [ . listacmd error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 244
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 240

    (49) elif -> action10 ELIF expressao action11 . : [ listacmd ] elif
    (52) elif -> action10 ELIF expressao action11 . error [ listacmd ] elif
    (53) elif -> action10 ELIF expressao action11 . : error listacmd ] elif
    (54) elif -> action10 ELIF expressao action11 . : [ listacmd error elif

    :               shift and go to state 246
    error           shift and go to state 245


state 241

    (56) else -> action12 ELSE : [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 247
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 242

    (58) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 248


state 243

    (59) else -> ELSE : error listacmd . ]

    ]               shift and go to state 249


state 244

    (60) else -> ELSE : [ listacmd . error

    error           shift and go to state 250


state 245

    (52) elif -> action10 ELIF expressao action11 error . [ listacmd ] elif

    [               shift and go to state 251


state 246

    (49) elif -> action10 ELIF expressao action11 : . [ listacmd ] elif
    (53) elif -> action10 ELIF expressao action11 : . error listacmd ] elif
    (54) elif -> action10 ELIF expressao action11 : . [ listacmd error elif

    [               shift and go to state 253
    error           shift and go to state 252


state 247

    (56) else -> action12 ELSE : [ listacmd . ]

    ]               shift and go to state 254


state 248

    (58) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 58 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 58 (else -> ELSE error [ listacmd ] .)


state 249

    (59) else -> ELSE : error listacmd ] .

    ;               reduce using rule 59 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 59 (else -> ELSE : error listacmd ] .)


state 250

    (60) else -> ELSE : [ listacmd error .

    ;               reduce using rule 60 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 60 (else -> ELSE : [ listacmd error .)


state 251

    (52) elif -> action10 ELIF expressao action11 error [ . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 255
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 252

    (53) elif -> action10 ELIF expressao action11 : error . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 256
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 253

    (49) elif -> action10 ELIF expressao action11 : [ . listacmd ] elif
    (54) elif -> action10 ELIF expressao action11 : [ . listacmd error elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (30) cmdatribui -> . listaidenti SIM_ATTR expressao action4 ;
    (32) cmdentrada -> . INPUT ( listaidenti action6 ) ;
    (34) cmdentrada -> . INPUT ( listaidenti action6 error ;
    (35) cmdentrada -> . INPUT error listaidenti action6 ) ;
    (36) cmdentrada -> . INPUT ( listaidenti action6 ) error
    (37) cmdsaida -> . OUTPUT ( listaexp ) ;
    (38) cmdsaida -> . OUTPUT ( listaexp error ;
    (39) cmdsaida -> . OUTPUT error listaexp ) ;
    (40) cmdsaida -> . OUTPUT ( listaexp ) error
    (41) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else ;
    (44) cmdselecao -> . IF expressao action8 error [ listacmd ] action9 elif else ;
    (45) cmdselecao -> . IF expressao action8 : error listacmd ] action9 elif else ;
    (46) cmdselecao -> . IF expressao action8 : [ listacmd error action9 elif else ;
    (47) cmdselecao -> . IF expressao action8 : [ listacmd ] action9 elif else error
    (61) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else ;
    (65) cmdrepeticao -> . WHILE action13 expressao action14 error [ listacmd ] action15 else ;
    (66) cmdrepeticao -> . WHILE action13 expressao action14 : error listacmd ] action15 else ;
    (67) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd error action15 else ;
    (68) cmdrepeticao -> . WHILE action13 expressao action14 : [ listacmd ] action15 else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 257
    cmdatribui                     shift and go to state 15
    cmdsaida                       shift and go to state 16
    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    comando                        shift and go to state 22

state 254

    (56) else -> action12 ELSE : [ listacmd ] .

    ;               reduce using rule 56 (else -> action12 ELSE : [ listacmd ] .)
    error           reduce using rule 56 (else -> action12 ELSE : [ listacmd ] .)


state 255

    (52) elif -> action10 ELIF expressao action11 error [ listacmd . ] elif

    ]               shift and go to state 258


state 256

    (53) elif -> action10 ELIF expressao action11 : error listacmd . ] elif

    ]               shift and go to state 259


state 257

    (49) elif -> action10 ELIF expressao action11 : [ listacmd . ] elif
    (54) elif -> action10 ELIF expressao action11 : [ listacmd . error elif

    ]               shift and go to state 261
    error           shift and go to state 260


state 258

    (52) elif -> action10 ELIF expressao action11 error [ listacmd ] . elif
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 262
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 259

    (53) elif -> action10 ELIF expressao action11 : error listacmd ] . elif
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 263
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 260

    (54) elif -> action10 ELIF expressao action11 : [ listacmd error . elif
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 264
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 261

    (49) elif -> action10 ELIF expressao action11 : [ listacmd ] . elif
    (48) elif -> . empty
    (49) elif -> . action10 ELIF expressao action11 : [ listacmd ] elif
    (52) elif -> . action10 ELIF expressao action11 error [ listacmd ] elif
    (53) elif -> . action10 ELIF expressao action11 : error listacmd ] elif
    (54) elif -> . action10 ELIF expressao action11 : [ listacmd error elif
    (12) empty -> .
    (50) action10 -> .

    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    ELIF            reduce using rule 50 (action10 -> .)

    elif                           shift and go to state 265
    action10                       shift and go to state 205
    empty                          shift and go to state 206

state 262

    (52) elif -> action10 ELIF expressao action11 error [ listacmd ] elif .

    ELSE            reduce using rule 52 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)
    ;               reduce using rule 52 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)
    error           reduce using rule 52 (elif -> action10 ELIF expressao action11 error [ listacmd ] elif .)


state 263

    (53) elif -> action10 ELIF expressao action11 : error listacmd ] elif .

    ELSE            reduce using rule 53 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)
    ;               reduce using rule 53 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)
    error           reduce using rule 53 (elif -> action10 ELIF expressao action11 : error listacmd ] elif .)


state 264

    (54) elif -> action10 ELIF expressao action11 : [ listacmd error elif .

    ELSE            reduce using rule 54 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)
    ;               reduce using rule 54 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)
    error           reduce using rule 54 (elif -> action10 ELIF expressao action11 : [ listacmd error elif .)


state 265

    (49) elif -> action10 ELIF expressao action11 : [ listacmd ] elif .

    ELSE            reduce using rule 49 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)
    ;               reduce using rule 49 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)
    error           reduce using rule 49 (elif -> action10 ELIF expressao action11 : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 45 resolved as shift
WARNING: shift/reduce conflict for error in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 125 resolved as shift
WARNING: shift/reduce conflict for error in state 151 resolved as shift
WARNING: shift/reduce conflict for error in state 153 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 200 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 201 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 202 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 203 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 204 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 207 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 208 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 209 resolved as shift
