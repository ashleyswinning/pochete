Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     programa -> empty
Rule 3     programa -> DEF ID error [ listacmd ]
Rule 4     programa -> DEF ID : error listacmd ]
Rule 5     programa -> DEF ID : [ listacmd error
Rule 6     empty -> <empty>
Rule 7     listacmd -> comando listacmd1
Rule 8     listacmd1 -> empty
Rule 9     listacmd1 -> listacmd
Rule 10    comando -> cmdatribui
Rule 11    comando -> cmdentrada
Rule 12    comando -> cmdsaida
Rule 13    comando -> cmdselecao
Rule 14    comando -> cmdrepeticao
Rule 15    listaidenti -> ID listaindenti1
Rule 16    listaindenti1 -> empty
Rule 17    listaindenti1 -> , listaidenti
Rule 18    listaexp -> expressao listaexp1
Rule 19    listaexp1 -> , listaexp
Rule 20    listaexp1 -> empty
Rule 21    listaexp1 -> error listaexp
Rule 22    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 23    cmdentrada -> INPUT ( listaidenti ) ;
Rule 24    cmdentrada -> INPUT ( listaidenti error ;
Rule 25    cmdentrada -> INPUT error listaidenti ) ;
Rule 26    cmdentrada -> INPUT ( listaidenti ) error
Rule 27    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 28    cmdsaida -> OUTPUT ( listaexp error ;
Rule 29    cmdsaida -> OUTPUT error listaexp ) ;
Rule 30    cmdsaida -> OUTPUT ( listaexp ) error
Rule 31    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 32    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 33    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 34    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 35    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 36    elif -> empty
Rule 37    elif -> ELIF expressao : [ listacmd ] elif
Rule 38    elif -> ELIF expressao error [ listacmd ] elif
Rule 39    elif -> ELIF expressao : error listacmd ] elif
Rule 40    elif -> ELIF expressao : [ listacmd error elif
Rule 41    else -> empty
Rule 42    else -> ELSE : [ listacmd ]
Rule 43    else -> ELSE error [ listacmd ]
Rule 44    else -> ELSE : error listacmd ]
Rule 45    else -> ELSE : [ listacmd error
Rule 46    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 47    cmdrepeticao -> WHILE expressao error [ listacmd ] else ;
Rule 48    cmdrepeticao -> WHILE expressao : error listacmd ] else ;
Rule 49    cmdrepeticao -> WHILE expressao : [ listacmd error else ;
Rule 50    cmdrepeticao -> WHILE expressao : [ listacmd ] else error
Rule 51    expressao -> valor expressao1
Rule 52    expressao1 -> empty
Rule 53    expressao1 -> OR valor expressao1
Rule 54    expressao1 -> AND valor expressao1
Rule 55    expressao1 -> error valor expressao1
Rule 56    valor -> relacional
Rule 57    valor -> TRUE
Rule 58    valor -> FALSE
Rule 59    valor -> NOT valor
Rule 60    relacional -> aritmetica relacional1
Rule 61    relacional1 -> operador aritmetica
Rule 62    relacional1 -> empty
Rule 63    operador -> SIM_EQ
Rule 64    operador -> SIM_DIF
Rule 65    operador -> <
Rule 66    operador -> SIM_LE
Rule 67    operador -> >
Rule 68    operador -> SIM_GE
Rule 69    aritmetica -> termo aritmetica1
Rule 70    aritmetica1 -> empty
Rule 71    aritmetica1 -> + termo aritmetica1
Rule 72    aritmetica1 -> - termo aritmetica1
Rule 73    termo -> fator termo1
Rule 74    termo1 -> empty
Rule 75    termo1 -> * fator termo1
Rule 76    termo1 -> / fator termo1
Rule 77    termo1 -> % fator termo1
Rule 78    fator -> elemento fator1
Rule 79    fator1 -> empty
Rule 80    fator1 -> SIM_POT elemento fator1
Rule 81    elemento -> ID
Rule 82    elemento -> INTEIRO
Rule 83    elemento -> REAL
Rule 84    elemento -> LITERAL
Rule 85    elemento -> ( expressao )
Rule 86    elemento -> + elemento
Rule 87    elemento -> - elemento

Terminals, with rules where they appear

%                    : 77
(                    : 23 24 26 27 28 30 85
)                    : 23 25 26 27 29 30 85
*                    : 75
+                    : 71 86
,                    : 17 19
-                    : 72 87
/                    : 76
:                    : 1 4 5 31 33 34 35 37 39 40 42 44 45 46 48 49 50
;                    : 22 23 24 25 27 28 29 31 32 33 34 46 47 48 49
<                    : 65
>                    : 67
AND                  : 54
BINARIO              : 
DEF                  : 1 3 4 5
ELIF                 : 37 38 39 40
ELSE                 : 42 43 44 45
FALSE                : 58
HEXADECIMAL          : 
ID                   : 1 3 4 5 15 81
IF                   : 31 32 33 34 35
INPUT                : 23 24 25 26
INTEIRO              : 82
LITERAL              : 84
NOT                  : 59
OCTAL                : 
OR                   : 53
OUTPUT               : 27 28 29 30
REAL                 : 83
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 22
SIM_DIF              : 64
SIM_EQ               : 63
SIM_GE               : 68
SIM_LE               : 66
SIM_POT              : 80
TRUE                 : 57
WHILE                : 46 47 48 49 50
[                    : 1 3 5 31 32 34 35 37 38 40 42 43 45 46 47 49 50
]                    : 1 3 4 31 32 33 35 37 38 39 42 43 44 46 47 48 50
error                : 3 4 5 21 24 25 26 28 29 30 32 33 34 35 38 39 40 43 44 45 47 48 49 50 55

Nonterminals, with rules where they appear

aritmetica           : 60 61
aritmetica1          : 69 71 72
cmdatribui           : 10
cmdentrada           : 11
cmdrepeticao         : 14
cmdsaida             : 12
cmdselecao           : 13
comando              : 7
elemento             : 78 80 86 87
elif                 : 31 32 33 34 35 37 38 39 40
else                 : 31 32 33 34 35 46 47 48 49 50
empty                : 2 8 16 20 36 41 52 62 70 74 79
expressao            : 18 22 31 32 33 34 35 37 38 39 40 46 47 48 49 50 85
expressao1           : 51 53 54 55
fator                : 73 75 76 77
fator1               : 78 80
listacmd             : 1 3 4 5 9 31 32 33 34 35 37 38 39 40 42 43 44 45 46 47 48 49 50
listacmd1            : 7
listaexp             : 19 21 27 28 29 30
listaexp1            : 18
listaidenti          : 17 22 23 24 25 26
listaindenti1        : 15
operador             : 61
programa             : 0
relacional           : 56
relacional1          : 60
termo                : 69 71 72
termo1               : 73 75 76 77
valor                : 51 53 54 55 59

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]
    (2) programa -> . empty
    (3) programa -> . DEF ID error [ listacmd ]
    (4) programa -> . DEF ID : error listacmd ]
    (5) programa -> . DEF ID : [ listacmd error
    (6) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 6 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID : [ listacmd ]
    (3) programa -> DEF . ID error [ listacmd ]
    (4) programa -> DEF . ID : error listacmd ]
    (5) programa -> DEF . ID : [ listacmd error

    ID              shift and go to state 4


state 4

    (1) programa -> DEF ID . : [ listacmd ]
    (3) programa -> DEF ID . error [ listacmd ]
    (4) programa -> DEF ID . : error listacmd ]
    (5) programa -> DEF ID . : [ listacmd error

    :               shift and go to state 6
    error           shift and go to state 5


state 5

    (3) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 7


state 6

    (1) programa -> DEF ID : . [ listacmd ]
    (4) programa -> DEF ID : . error listacmd ]
    (5) programa -> DEF ID : . [ listacmd error

    [               shift and go to state 9
    error           shift and go to state 8


state 7

    (3) programa -> DEF ID error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 13
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 8

    (4) programa -> DEF ID : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 23
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 9

    (1) programa -> DEF ID : [ . listacmd ]
    (5) programa -> DEF ID : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 24
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 10

    (13) comando -> cmdselecao .

    INPUT           reduce using rule 13 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 13 (comando -> cmdselecao .)
    IF              reduce using rule 13 (comando -> cmdselecao .)
    WHILE           reduce using rule 13 (comando -> cmdselecao .)
    ID              reduce using rule 13 (comando -> cmdselecao .)
    ]               reduce using rule 13 (comando -> cmdselecao .)
    error           reduce using rule 13 (comando -> cmdselecao .)


state 11

    (11) comando -> cmdentrada .

    INPUT           reduce using rule 11 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 11 (comando -> cmdentrada .)
    IF              reduce using rule 11 (comando -> cmdentrada .)
    WHILE           reduce using rule 11 (comando -> cmdentrada .)
    ID              reduce using rule 11 (comando -> cmdentrada .)
    ]               reduce using rule 11 (comando -> cmdentrada .)
    error           reduce using rule 11 (comando -> cmdentrada .)


state 12

    (46) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> WHILE . expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE . expressao : error listacmd ] else ;
    (49) cmdrepeticao -> WHILE . expressao : [ listacmd error else ;
    (50) cmdrepeticao -> WHILE . expressao : [ listacmd ] else error
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    aritmetica                     shift and go to state 32
    expressao                      shift and go to state 29
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 13

    (3) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 42


state 14

    (10) comando -> cmdatribui .

    INPUT           reduce using rule 10 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 10 (comando -> cmdatribui .)
    IF              reduce using rule 10 (comando -> cmdatribui .)
    WHILE           reduce using rule 10 (comando -> cmdatribui .)
    ID              reduce using rule 10 (comando -> cmdatribui .)
    ]               reduce using rule 10 (comando -> cmdatribui .)
    error           reduce using rule 10 (comando -> cmdatribui .)


state 15

    (12) comando -> cmdsaida .

    INPUT           reduce using rule 12 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 12 (comando -> cmdsaida .)
    IF              reduce using rule 12 (comando -> cmdsaida .)
    WHILE           reduce using rule 12 (comando -> cmdsaida .)
    ID              reduce using rule 12 (comando -> cmdsaida .)
    ]               reduce using rule 12 (comando -> cmdsaida .)
    error           reduce using rule 12 (comando -> cmdsaida .)


state 16

    (22) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 43


state 17

    (23) cmdentrada -> INPUT . ( listaidenti ) ;
    (24) cmdentrada -> INPUT . ( listaidenti error ;
    (25) cmdentrada -> INPUT . error listaidenti ) ;
    (26) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 44
    error           shift and go to state 45


state 18

    (15) listaidenti -> ID . listaindenti1
    (16) listaindenti1 -> . empty
    (17) listaindenti1 -> . , listaidenti
    (6) empty -> .

    ,               shift and go to state 48
    SIM_ATTR        reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    listaindenti1                  shift and go to state 46
    empty                          shift and go to state 47

state 19

    (31) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (34) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (35) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    aritmetica                     shift and go to state 32
    expressao                      shift and go to state 49
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 20

    (14) comando -> cmdrepeticao .

    INPUT           reduce using rule 14 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 14 (comando -> cmdrepeticao .)
    IF              reduce using rule 14 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 14 (comando -> cmdrepeticao .)
    ID              reduce using rule 14 (comando -> cmdrepeticao .)
    ]               reduce using rule 14 (comando -> cmdrepeticao .)
    error           reduce using rule 14 (comando -> cmdrepeticao .)


state 21

    (7) listacmd -> comando . listacmd1
    (8) listacmd1 -> . empty
    (9) listacmd1 -> . listacmd
    (6) empty -> .
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    ]               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    listacmd1                      shift and go to state 51
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 50
    cmdsaida                       shift and go to state 15
    empty                          shift and go to state 52
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 22

    (27) cmdsaida -> OUTPUT . ( listaexp ) ;
    (28) cmdsaida -> OUTPUT . ( listaexp error ;
    (29) cmdsaida -> OUTPUT . error listaexp ) ;
    (30) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 53
    error           shift and go to state 54


state 23

    (4) programa -> DEF ID : error listacmd . ]

    ]               shift and go to state 55


state 24

    (1) programa -> DEF ID : [ listacmd . ]
    (5) programa -> DEF ID : [ listacmd . error

    ]               shift and go to state 57
    error           shift and go to state 56


state 25

    (83) elemento -> REAL .

    SIM_POT         reduce using rule 83 (elemento -> REAL .)
    *               reduce using rule 83 (elemento -> REAL .)
    /               reduce using rule 83 (elemento -> REAL .)
    %               reduce using rule 83 (elemento -> REAL .)
    +               reduce using rule 83 (elemento -> REAL .)
    -               reduce using rule 83 (elemento -> REAL .)
    SIM_EQ          reduce using rule 83 (elemento -> REAL .)
    SIM_DIF         reduce using rule 83 (elemento -> REAL .)
    <               reduce using rule 83 (elemento -> REAL .)
    SIM_LE          reduce using rule 83 (elemento -> REAL .)
    >               reduce using rule 83 (elemento -> REAL .)
    SIM_GE          reduce using rule 83 (elemento -> REAL .)
    OR              reduce using rule 83 (elemento -> REAL .)
    AND             reduce using rule 83 (elemento -> REAL .)
    error           reduce using rule 83 (elemento -> REAL .)
    ,               reduce using rule 83 (elemento -> REAL .)
    )               reduce using rule 83 (elemento -> REAL .)
    :               reduce using rule 83 (elemento -> REAL .)
    ;               reduce using rule 83 (elemento -> REAL .)


state 26

    (87) elemento -> - . elemento
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 58

state 27

    (57) valor -> TRUE .

    OR              reduce using rule 57 (valor -> TRUE .)
    AND             reduce using rule 57 (valor -> TRUE .)
    error           reduce using rule 57 (valor -> TRUE .)
    )               reduce using rule 57 (valor -> TRUE .)
    :               reduce using rule 57 (valor -> TRUE .)
    ;               reduce using rule 57 (valor -> TRUE .)
    ,               reduce using rule 57 (valor -> TRUE .)


state 28

    (82) elemento -> INTEIRO .

    SIM_POT         reduce using rule 82 (elemento -> INTEIRO .)
    *               reduce using rule 82 (elemento -> INTEIRO .)
    /               reduce using rule 82 (elemento -> INTEIRO .)
    %               reduce using rule 82 (elemento -> INTEIRO .)
    +               reduce using rule 82 (elemento -> INTEIRO .)
    -               reduce using rule 82 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 82 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 82 (elemento -> INTEIRO .)
    <               reduce using rule 82 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 82 (elemento -> INTEIRO .)
    >               reduce using rule 82 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 82 (elemento -> INTEIRO .)
    OR              reduce using rule 82 (elemento -> INTEIRO .)
    AND             reduce using rule 82 (elemento -> INTEIRO .)
    error           reduce using rule 82 (elemento -> INTEIRO .)
    ,               reduce using rule 82 (elemento -> INTEIRO .)
    )               reduce using rule 82 (elemento -> INTEIRO .)
    :               reduce using rule 82 (elemento -> INTEIRO .)
    ;               reduce using rule 82 (elemento -> INTEIRO .)


state 29

    (46) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;
    (47) cmdrepeticao -> WHILE expressao . error [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE expressao . : error listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao . : [ listacmd error else ;
    (50) cmdrepeticao -> WHILE expressao . : [ listacmd ] else error

    :               shift and go to state 60
    error           shift and go to state 59


state 30

    (86) elemento -> + . elemento
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 61

state 31

    (73) termo -> fator . termo1
    (74) termo1 -> . empty
    (75) termo1 -> . * fator termo1
    (76) termo1 -> . / fator termo1
    (77) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 64
    /               shift and go to state 65
    %               shift and go to state 63
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 62
    empty                          shift and go to state 66

state 32

    (60) relacional -> aritmetica . relacional1
    (61) relacional1 -> . operador aritmetica
    (62) relacional1 -> . empty
    (63) operador -> . SIM_EQ
    (64) operador -> . SIM_DIF
    (65) operador -> . <
    (66) operador -> . SIM_LE
    (67) operador -> . >
    (68) operador -> . SIM_GE
    (6) empty -> .

    SIM_EQ          shift and go to state 67
    SIM_DIF         shift and go to state 70
    <               shift and go to state 73
    SIM_LE          shift and go to state 75
    >               shift and go to state 72
    SIM_GE          shift and go to state 69
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    relacional1                    shift and go to state 71
    operador                       shift and go to state 68
    empty                          shift and go to state 74

state 33

    (85) elemento -> ( . expressao )
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 76
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 34

    (51) expressao -> valor . expressao1
    (52) expressao1 -> . empty
    (53) expressao1 -> . OR valor expressao1
    (54) expressao1 -> . AND valor expressao1
    (55) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 80
    AND             shift and go to state 77
    error           shift and go to state 78
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 79
    empty                          shift and go to state 81

state 35

    (84) elemento -> LITERAL .

    SIM_POT         reduce using rule 84 (elemento -> LITERAL .)
    *               reduce using rule 84 (elemento -> LITERAL .)
    /               reduce using rule 84 (elemento -> LITERAL .)
    %               reduce using rule 84 (elemento -> LITERAL .)
    +               reduce using rule 84 (elemento -> LITERAL .)
    -               reduce using rule 84 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 84 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 84 (elemento -> LITERAL .)
    <               reduce using rule 84 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 84 (elemento -> LITERAL .)
    >               reduce using rule 84 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 84 (elemento -> LITERAL .)
    OR              reduce using rule 84 (elemento -> LITERAL .)
    AND             reduce using rule 84 (elemento -> LITERAL .)
    error           reduce using rule 84 (elemento -> LITERAL .)
    ,               reduce using rule 84 (elemento -> LITERAL .)
    )               reduce using rule 84 (elemento -> LITERAL .)
    :               reduce using rule 84 (elemento -> LITERAL .)
    ;               reduce using rule 84 (elemento -> LITERAL .)


state 36

    (69) aritmetica -> termo . aritmetica1
    (70) aritmetica1 -> . empty
    (71) aritmetica1 -> . + termo aritmetica1
    (72) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 82
    empty                          shift and go to state 85

state 37

    (56) valor -> relacional .

    OR              reduce using rule 56 (valor -> relacional .)
    AND             reduce using rule 56 (valor -> relacional .)
    error           reduce using rule 56 (valor -> relacional .)
    )               reduce using rule 56 (valor -> relacional .)
    :               reduce using rule 56 (valor -> relacional .)
    ;               reduce using rule 56 (valor -> relacional .)
    ,               reduce using rule 56 (valor -> relacional .)


state 38

    (81) elemento -> ID .

    SIM_POT         reduce using rule 81 (elemento -> ID .)
    *               reduce using rule 81 (elemento -> ID .)
    /               reduce using rule 81 (elemento -> ID .)
    %               reduce using rule 81 (elemento -> ID .)
    +               reduce using rule 81 (elemento -> ID .)
    -               reduce using rule 81 (elemento -> ID .)
    SIM_EQ          reduce using rule 81 (elemento -> ID .)
    SIM_DIF         reduce using rule 81 (elemento -> ID .)
    <               reduce using rule 81 (elemento -> ID .)
    SIM_LE          reduce using rule 81 (elemento -> ID .)
    >               reduce using rule 81 (elemento -> ID .)
    SIM_GE          reduce using rule 81 (elemento -> ID .)
    OR              reduce using rule 81 (elemento -> ID .)
    AND             reduce using rule 81 (elemento -> ID .)
    error           reduce using rule 81 (elemento -> ID .)
    ,               reduce using rule 81 (elemento -> ID .)
    )               reduce using rule 81 (elemento -> ID .)
    :               reduce using rule 81 (elemento -> ID .)
    ;               reduce using rule 81 (elemento -> ID .)


state 39

    (78) fator -> elemento . fator1
    (79) fator1 -> . empty
    (80) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 87
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 86
    empty                          shift and go to state 88

state 40

    (58) valor -> FALSE .

    OR              reduce using rule 58 (valor -> FALSE .)
    AND             reduce using rule 58 (valor -> FALSE .)
    error           reduce using rule 58 (valor -> FALSE .)
    )               reduce using rule 58 (valor -> FALSE .)
    :               reduce using rule 58 (valor -> FALSE .)
    ;               reduce using rule 58 (valor -> FALSE .)
    ,               reduce using rule 58 (valor -> FALSE .)


state 41

    (59) valor -> NOT . valor
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 89
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 42

    (3) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 3 (programa -> DEF ID error [ listacmd ] .)


state 43

    (22) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 90
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 44

    (23) cmdentrada -> INPUT ( . listaidenti ) ;
    (24) cmdentrada -> INPUT ( . listaidenti error ;
    (26) cmdentrada -> INPUT ( . listaidenti ) error
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 18

    listaidenti                    shift and go to state 91

state 45

    (25) cmdentrada -> INPUT error . listaidenti ) ;
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 18

    listaidenti                    shift and go to state 92

state 46

    (15) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 15 (listaidenti -> ID listaindenti1 .)


state 47

    (16) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 16 (listaindenti1 -> empty .)
    )               reduce using rule 16 (listaindenti1 -> empty .)
    error           reduce using rule 16 (listaindenti1 -> empty .)


state 48

    (17) listaindenti1 -> , . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 18

    listaidenti                    shift and go to state 93

state 49

    (31) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (32) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (33) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (34) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (35) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 95
    error           shift and go to state 94


state 50

    (9) listacmd1 -> listacmd .

    ]               reduce using rule 9 (listacmd1 -> listacmd .)
    error           reduce using rule 9 (listacmd1 -> listacmd .)


state 51

    (7) listacmd -> comando listacmd1 .

    ]               reduce using rule 7 (listacmd -> comando listacmd1 .)
    error           reduce using rule 7 (listacmd -> comando listacmd1 .)


state 52

    (8) listacmd1 -> empty .

    ]               reduce using rule 8 (listacmd1 -> empty .)
    error           reduce using rule 8 (listacmd1 -> empty .)


state 53

    (27) cmdsaida -> OUTPUT ( . listaexp ) ;
    (28) cmdsaida -> OUTPUT ( . listaexp error ;
    (30) cmdsaida -> OUTPUT ( . listaexp ) error
    (18) listaexp -> . expressao listaexp1
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 96
    listaexp                       shift and go to state 97
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 54

    (29) cmdsaida -> OUTPUT error . listaexp ) ;
    (18) listaexp -> . expressao listaexp1
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 96
    listaexp                       shift and go to state 98
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 55

    (4) programa -> DEF ID : error listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID : error listacmd ] .)


state 56

    (5) programa -> DEF ID : [ listacmd error .

    $end            reduce using rule 5 (programa -> DEF ID : [ listacmd error .)


state 57

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 58

    (87) elemento -> - elemento .

    SIM_POT         reduce using rule 87 (elemento -> - elemento .)
    *               reduce using rule 87 (elemento -> - elemento .)
    /               reduce using rule 87 (elemento -> - elemento .)
    %               reduce using rule 87 (elemento -> - elemento .)
    +               reduce using rule 87 (elemento -> - elemento .)
    -               reduce using rule 87 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 87 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 87 (elemento -> - elemento .)
    <               reduce using rule 87 (elemento -> - elemento .)
    SIM_LE          reduce using rule 87 (elemento -> - elemento .)
    >               reduce using rule 87 (elemento -> - elemento .)
    SIM_GE          reduce using rule 87 (elemento -> - elemento .)
    OR              reduce using rule 87 (elemento -> - elemento .)
    AND             reduce using rule 87 (elemento -> - elemento .)
    error           reduce using rule 87 (elemento -> - elemento .)
    ,               reduce using rule 87 (elemento -> - elemento .)
    )               reduce using rule 87 (elemento -> - elemento .)
    :               reduce using rule 87 (elemento -> - elemento .)
    ;               reduce using rule 87 (elemento -> - elemento .)


state 59

    (47) cmdrepeticao -> WHILE expressao error . [ listacmd ] else ;

    [               shift and go to state 99


state 60

    (46) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE expressao : . error listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao : . [ listacmd error else ;
    (50) cmdrepeticao -> WHILE expressao : . [ listacmd ] else error

    [               shift and go to state 101
    error           shift and go to state 100


state 61

    (86) elemento -> + elemento .

    SIM_POT         reduce using rule 86 (elemento -> + elemento .)
    *               reduce using rule 86 (elemento -> + elemento .)
    /               reduce using rule 86 (elemento -> + elemento .)
    %               reduce using rule 86 (elemento -> + elemento .)
    +               reduce using rule 86 (elemento -> + elemento .)
    -               reduce using rule 86 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 86 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 86 (elemento -> + elemento .)
    <               reduce using rule 86 (elemento -> + elemento .)
    SIM_LE          reduce using rule 86 (elemento -> + elemento .)
    >               reduce using rule 86 (elemento -> + elemento .)
    SIM_GE          reduce using rule 86 (elemento -> + elemento .)
    OR              reduce using rule 86 (elemento -> + elemento .)
    AND             reduce using rule 86 (elemento -> + elemento .)
    error           reduce using rule 86 (elemento -> + elemento .)
    ,               reduce using rule 86 (elemento -> + elemento .)
    )               reduce using rule 86 (elemento -> + elemento .)
    :               reduce using rule 86 (elemento -> + elemento .)
    ;               reduce using rule 86 (elemento -> + elemento .)


state 62

    (73) termo -> fator termo1 .

    +               reduce using rule 73 (termo -> fator termo1 .)
    -               reduce using rule 73 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 73 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 73 (termo -> fator termo1 .)
    <               reduce using rule 73 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 73 (termo -> fator termo1 .)
    >               reduce using rule 73 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 73 (termo -> fator termo1 .)
    OR              reduce using rule 73 (termo -> fator termo1 .)
    AND             reduce using rule 73 (termo -> fator termo1 .)
    error           reduce using rule 73 (termo -> fator termo1 .)
    ,               reduce using rule 73 (termo -> fator termo1 .)
    )               reduce using rule 73 (termo -> fator termo1 .)
    :               reduce using rule 73 (termo -> fator termo1 .)
    ;               reduce using rule 73 (termo -> fator termo1 .)


state 63

    (77) termo1 -> % . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 39
    fator                          shift and go to state 102

state 64

    (75) termo1 -> * . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 39
    fator                          shift and go to state 103

state 65

    (76) termo1 -> / . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 39
    fator                          shift and go to state 104

state 66

    (74) termo1 -> empty .

    +               reduce using rule 74 (termo1 -> empty .)
    -               reduce using rule 74 (termo1 -> empty .)
    SIM_EQ          reduce using rule 74 (termo1 -> empty .)
    SIM_DIF         reduce using rule 74 (termo1 -> empty .)
    <               reduce using rule 74 (termo1 -> empty .)
    SIM_LE          reduce using rule 74 (termo1 -> empty .)
    >               reduce using rule 74 (termo1 -> empty .)
    SIM_GE          reduce using rule 74 (termo1 -> empty .)
    OR              reduce using rule 74 (termo1 -> empty .)
    AND             reduce using rule 74 (termo1 -> empty .)
    error           reduce using rule 74 (termo1 -> empty .)
    :               reduce using rule 74 (termo1 -> empty .)
    )               reduce using rule 74 (termo1 -> empty .)
    ;               reduce using rule 74 (termo1 -> empty .)
    ,               reduce using rule 74 (termo1 -> empty .)


state 67

    (63) operador -> SIM_EQ .

    ID              reduce using rule 63 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 63 (operador -> SIM_EQ .)
    REAL            reduce using rule 63 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 63 (operador -> SIM_EQ .)
    (               reduce using rule 63 (operador -> SIM_EQ .)
    +               reduce using rule 63 (operador -> SIM_EQ .)
    -               reduce using rule 63 (operador -> SIM_EQ .)


state 68

    (61) relacional1 -> operador . aritmetica
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    aritmetica                     shift and go to state 105
    termo                          shift and go to state 36
    elemento                       shift and go to state 39

state 69

    (68) operador -> SIM_GE .

    ID              reduce using rule 68 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 68 (operador -> SIM_GE .)
    REAL            reduce using rule 68 (operador -> SIM_GE .)
    LITERAL         reduce using rule 68 (operador -> SIM_GE .)
    (               reduce using rule 68 (operador -> SIM_GE .)
    +               reduce using rule 68 (operador -> SIM_GE .)
    -               reduce using rule 68 (operador -> SIM_GE .)


state 70

    (64) operador -> SIM_DIF .

    ID              reduce using rule 64 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 64 (operador -> SIM_DIF .)
    REAL            reduce using rule 64 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 64 (operador -> SIM_DIF .)
    (               reduce using rule 64 (operador -> SIM_DIF .)
    +               reduce using rule 64 (operador -> SIM_DIF .)
    -               reduce using rule 64 (operador -> SIM_DIF .)


state 71

    (60) relacional -> aritmetica relacional1 .

    OR              reduce using rule 60 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 60 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 60 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 60 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 60 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 60 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 60 (relacional -> aritmetica relacional1 .)


state 72

    (67) operador -> > .

    ID              reduce using rule 67 (operador -> > .)
    INTEIRO         reduce using rule 67 (operador -> > .)
    REAL            reduce using rule 67 (operador -> > .)
    LITERAL         reduce using rule 67 (operador -> > .)
    (               reduce using rule 67 (operador -> > .)
    +               reduce using rule 67 (operador -> > .)
    -               reduce using rule 67 (operador -> > .)


state 73

    (65) operador -> < .

    ID              reduce using rule 65 (operador -> < .)
    INTEIRO         reduce using rule 65 (operador -> < .)
    REAL            reduce using rule 65 (operador -> < .)
    LITERAL         reduce using rule 65 (operador -> < .)
    (               reduce using rule 65 (operador -> < .)
    +               reduce using rule 65 (operador -> < .)
    -               reduce using rule 65 (operador -> < .)


state 74

    (62) relacional1 -> empty .

    OR              reduce using rule 62 (relacional1 -> empty .)
    AND             reduce using rule 62 (relacional1 -> empty .)
    error           reduce using rule 62 (relacional1 -> empty .)
    :               reduce using rule 62 (relacional1 -> empty .)
    )               reduce using rule 62 (relacional1 -> empty .)
    ;               reduce using rule 62 (relacional1 -> empty .)
    ,               reduce using rule 62 (relacional1 -> empty .)


state 75

    (66) operador -> SIM_LE .

    ID              reduce using rule 66 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 66 (operador -> SIM_LE .)
    REAL            reduce using rule 66 (operador -> SIM_LE .)
    LITERAL         reduce using rule 66 (operador -> SIM_LE .)
    (               reduce using rule 66 (operador -> SIM_LE .)
    +               reduce using rule 66 (operador -> SIM_LE .)
    -               reduce using rule 66 (operador -> SIM_LE .)


state 76

    (85) elemento -> ( expressao . )

    )               shift and go to state 106


state 77

    (54) expressao1 -> AND . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 107
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 78

    (55) expressao1 -> error . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 108
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 79

    (51) expressao -> valor expressao1 .

    ,               reduce using rule 51 (expressao -> valor expressao1 .)
    error           reduce using rule 51 (expressao -> valor expressao1 .)
    )               reduce using rule 51 (expressao -> valor expressao1 .)
    ;               reduce using rule 51 (expressao -> valor expressao1 .)
    :               reduce using rule 51 (expressao -> valor expressao1 .)


state 80

    (53) expressao1 -> OR . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 109
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 81

    (52) expressao1 -> empty .

    :               reduce using rule 52 (expressao1 -> empty .)
    error           reduce using rule 52 (expressao1 -> empty .)
    )               reduce using rule 52 (expressao1 -> empty .)
    ;               reduce using rule 52 (expressao1 -> empty .)
    ,               reduce using rule 52 (expressao1 -> empty .)


state 82

    (69) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 69 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 69 (aritmetica -> termo aritmetica1 .)


state 83

    (71) aritmetica1 -> + . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 110
    elemento                       shift and go to state 39

state 84

    (72) aritmetica1 -> - . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    fator                          shift and go to state 31
    termo                          shift and go to state 111
    elemento                       shift and go to state 39

state 85

    (70) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 70 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 70 (aritmetica1 -> empty .)
    <               reduce using rule 70 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 70 (aritmetica1 -> empty .)
    >               reduce using rule 70 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 70 (aritmetica1 -> empty .)
    OR              reduce using rule 70 (aritmetica1 -> empty .)
    AND             reduce using rule 70 (aritmetica1 -> empty .)
    error           reduce using rule 70 (aritmetica1 -> empty .)
    :               reduce using rule 70 (aritmetica1 -> empty .)
    )               reduce using rule 70 (aritmetica1 -> empty .)
    ;               reduce using rule 70 (aritmetica1 -> empty .)
    ,               reduce using rule 70 (aritmetica1 -> empty .)


state 86

    (78) fator -> elemento fator1 .

    *               reduce using rule 78 (fator -> elemento fator1 .)
    /               reduce using rule 78 (fator -> elemento fator1 .)
    %               reduce using rule 78 (fator -> elemento fator1 .)
    +               reduce using rule 78 (fator -> elemento fator1 .)
    -               reduce using rule 78 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 78 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 78 (fator -> elemento fator1 .)
    <               reduce using rule 78 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 78 (fator -> elemento fator1 .)
    >               reduce using rule 78 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 78 (fator -> elemento fator1 .)
    OR              reduce using rule 78 (fator -> elemento fator1 .)
    AND             reduce using rule 78 (fator -> elemento fator1 .)
    error           reduce using rule 78 (fator -> elemento fator1 .)
    :               reduce using rule 78 (fator -> elemento fator1 .)
    ,               reduce using rule 78 (fator -> elemento fator1 .)
    )               reduce using rule 78 (fator -> elemento fator1 .)
    ;               reduce using rule 78 (fator -> elemento fator1 .)


state 87

    (80) fator1 -> SIM_POT . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    elemento                       shift and go to state 112

state 88

    (79) fator1 -> empty .

    *               reduce using rule 79 (fator1 -> empty .)
    /               reduce using rule 79 (fator1 -> empty .)
    %               reduce using rule 79 (fator1 -> empty .)
    +               reduce using rule 79 (fator1 -> empty .)
    -               reduce using rule 79 (fator1 -> empty .)
    SIM_EQ          reduce using rule 79 (fator1 -> empty .)
    SIM_DIF         reduce using rule 79 (fator1 -> empty .)
    <               reduce using rule 79 (fator1 -> empty .)
    SIM_LE          reduce using rule 79 (fator1 -> empty .)
    >               reduce using rule 79 (fator1 -> empty .)
    SIM_GE          reduce using rule 79 (fator1 -> empty .)
    OR              reduce using rule 79 (fator1 -> empty .)
    AND             reduce using rule 79 (fator1 -> empty .)
    error           reduce using rule 79 (fator1 -> empty .)
    :               reduce using rule 79 (fator1 -> empty .)
    )               reduce using rule 79 (fator1 -> empty .)
    ;               reduce using rule 79 (fator1 -> empty .)
    ,               reduce using rule 79 (fator1 -> empty .)


state 89

    (59) valor -> NOT valor .

    OR              reduce using rule 59 (valor -> NOT valor .)
    AND             reduce using rule 59 (valor -> NOT valor .)
    error           reduce using rule 59 (valor -> NOT valor .)
    )               reduce using rule 59 (valor -> NOT valor .)
    :               reduce using rule 59 (valor -> NOT valor .)
    ;               reduce using rule 59 (valor -> NOT valor .)
    ,               reduce using rule 59 (valor -> NOT valor .)


state 90

    (22) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 113


state 91

    (23) cmdentrada -> INPUT ( listaidenti . ) ;
    (24) cmdentrada -> INPUT ( listaidenti . error ;
    (26) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 114
    error           shift and go to state 115


state 92

    (25) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 116


state 93

    (17) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 17 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 17 (listaindenti1 -> , listaidenti .)


state 94

    (32) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 117


state 95

    (31) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (33) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (34) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (35) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 119
    error           shift and go to state 118


state 96

    (18) listaexp -> expressao . listaexp1
    (19) listaexp1 -> . , listaexp
    (20) listaexp1 -> . empty
    (21) listaexp1 -> . error listaexp
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 121
    error           shift and go to state 122
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaexp1                      shift and go to state 120
    empty                          shift and go to state 123

state 97

    (27) cmdsaida -> OUTPUT ( listaexp . ) ;
    (28) cmdsaida -> OUTPUT ( listaexp . error ;
    (30) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 124
    error           shift and go to state 125


state 98

    (29) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 126


state 99

    (47) cmdrepeticao -> WHILE expressao error [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 127
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 100

    (48) cmdrepeticao -> WHILE expressao : error . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 128
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 101

    (46) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao : [ . listacmd error else ;
    (50) cmdrepeticao -> WHILE expressao : [ . listacmd ] else error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 129
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 102

    (77) termo1 -> % fator . termo1
    (74) termo1 -> . empty
    (75) termo1 -> . * fator termo1
    (76) termo1 -> . / fator termo1
    (77) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 64
    /               shift and go to state 65
    %               shift and go to state 63
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 130
    empty                          shift and go to state 66

state 103

    (75) termo1 -> * fator . termo1
    (74) termo1 -> . empty
    (75) termo1 -> . * fator termo1
    (76) termo1 -> . / fator termo1
    (77) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 64
    /               shift and go to state 65
    %               shift and go to state 63
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 131
    empty                          shift and go to state 66

state 104

    (76) termo1 -> / fator . termo1
    (74) termo1 -> . empty
    (75) termo1 -> . * fator termo1
    (76) termo1 -> . / fator termo1
    (77) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 64
    /               shift and go to state 65
    %               shift and go to state 63
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 132
    empty                          shift and go to state 66

state 105

    (61) relacional1 -> operador aritmetica .

    OR              reduce using rule 61 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 61 (relacional1 -> operador aritmetica .)
    error           reduce using rule 61 (relacional1 -> operador aritmetica .)
    :               reduce using rule 61 (relacional1 -> operador aritmetica .)
    )               reduce using rule 61 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 61 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 61 (relacional1 -> operador aritmetica .)


state 106

    (85) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 85 (elemento -> ( expressao ) .)
    *               reduce using rule 85 (elemento -> ( expressao ) .)
    /               reduce using rule 85 (elemento -> ( expressao ) .)
    %               reduce using rule 85 (elemento -> ( expressao ) .)
    +               reduce using rule 85 (elemento -> ( expressao ) .)
    -               reduce using rule 85 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 85 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 85 (elemento -> ( expressao ) .)
    <               reduce using rule 85 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 85 (elemento -> ( expressao ) .)
    >               reduce using rule 85 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 85 (elemento -> ( expressao ) .)
    OR              reduce using rule 85 (elemento -> ( expressao ) .)
    AND             reduce using rule 85 (elemento -> ( expressao ) .)
    error           reduce using rule 85 (elemento -> ( expressao ) .)
    ,               reduce using rule 85 (elemento -> ( expressao ) .)
    )               reduce using rule 85 (elemento -> ( expressao ) .)
    :               reduce using rule 85 (elemento -> ( expressao ) .)
    ;               reduce using rule 85 (elemento -> ( expressao ) .)


state 107

    (54) expressao1 -> AND valor . expressao1
    (52) expressao1 -> . empty
    (53) expressao1 -> . OR valor expressao1
    (54) expressao1 -> . AND valor expressao1
    (55) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 80
    AND             shift and go to state 77
    error           shift and go to state 78
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 133
    empty                          shift and go to state 81

state 108

    (55) expressao1 -> error valor . expressao1
    (52) expressao1 -> . empty
    (53) expressao1 -> . OR valor expressao1
    (54) expressao1 -> . AND valor expressao1
    (55) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 80
    AND             shift and go to state 77
    error           shift and go to state 78
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 134
    empty                          shift and go to state 81

state 109

    (53) expressao1 -> OR valor . expressao1
    (52) expressao1 -> . empty
    (53) expressao1 -> . OR valor expressao1
    (54) expressao1 -> . AND valor expressao1
    (55) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 80
    AND             shift and go to state 77
    error           shift and go to state 78
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 135
    empty                          shift and go to state 81

state 110

    (71) aritmetica1 -> + termo . aritmetica1
    (70) aritmetica1 -> . empty
    (71) aritmetica1 -> . + termo aritmetica1
    (72) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 136
    empty                          shift and go to state 85

state 111

    (72) aritmetica1 -> - termo . aritmetica1
    (70) aritmetica1 -> . empty
    (71) aritmetica1 -> . + termo aritmetica1
    (72) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 137
    empty                          shift and go to state 85

state 112

    (80) fator1 -> SIM_POT elemento . fator1
    (79) fator1 -> . empty
    (80) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 87
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 138
    empty                          shift and go to state 88

state 113

    (22) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 22 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 114

    (23) cmdentrada -> INPUT ( listaidenti ) . ;
    (26) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 140
    error           shift and go to state 139


state 115

    (24) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 141


state 116

    (25) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 142


state 117

    (32) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 143
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 118

    (33) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 144
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 119

    (31) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (34) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (35) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 145
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 120

    (18) listaexp -> expressao listaexp1 .

    )               reduce using rule 18 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 18 (listaexp -> expressao listaexp1 .)


state 121

    (19) listaexp1 -> , . listaexp
    (18) listaexp -> . expressao listaexp1
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 96
    listaexp                       shift and go to state 146
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 122

    (21) listaexp1 -> error . listaexp
    (18) listaexp -> . expressao listaexp1
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    expressao                      shift and go to state 96
    listaexp                       shift and go to state 147
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    aritmetica                     shift and go to state 32
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 123

    (20) listaexp1 -> empty .

    )               reduce using rule 20 (listaexp1 -> empty .)
    error           reduce using rule 20 (listaexp1 -> empty .)


state 124

    (27) cmdsaida -> OUTPUT ( listaexp ) . ;
    (30) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 149
    error           shift and go to state 148


state 125

    (28) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 150


state 126

    (29) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 151


state 127

    (47) cmdrepeticao -> WHILE expressao error [ listacmd . ] else ;

    ]               shift and go to state 152


state 128

    (48) cmdrepeticao -> WHILE expressao : error listacmd . ] else ;

    ]               shift and go to state 153


state 129

    (46) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;
    (49) cmdrepeticao -> WHILE expressao : [ listacmd . error else ;
    (50) cmdrepeticao -> WHILE expressao : [ listacmd . ] else error

    ]               shift and go to state 155
    error           shift and go to state 154


state 130

    (77) termo1 -> % fator termo1 .

    +               reduce using rule 77 (termo1 -> % fator termo1 .)
    -               reduce using rule 77 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 77 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 77 (termo1 -> % fator termo1 .)
    <               reduce using rule 77 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 77 (termo1 -> % fator termo1 .)
    >               reduce using rule 77 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 77 (termo1 -> % fator termo1 .)
    OR              reduce using rule 77 (termo1 -> % fator termo1 .)
    AND             reduce using rule 77 (termo1 -> % fator termo1 .)
    error           reduce using rule 77 (termo1 -> % fator termo1 .)
    :               reduce using rule 77 (termo1 -> % fator termo1 .)
    )               reduce using rule 77 (termo1 -> % fator termo1 .)
    ;               reduce using rule 77 (termo1 -> % fator termo1 .)
    ,               reduce using rule 77 (termo1 -> % fator termo1 .)


state 131

    (75) termo1 -> * fator termo1 .

    +               reduce using rule 75 (termo1 -> * fator termo1 .)
    -               reduce using rule 75 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 75 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 75 (termo1 -> * fator termo1 .)
    <               reduce using rule 75 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 75 (termo1 -> * fator termo1 .)
    >               reduce using rule 75 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 75 (termo1 -> * fator termo1 .)
    OR              reduce using rule 75 (termo1 -> * fator termo1 .)
    AND             reduce using rule 75 (termo1 -> * fator termo1 .)
    error           reduce using rule 75 (termo1 -> * fator termo1 .)
    :               reduce using rule 75 (termo1 -> * fator termo1 .)
    )               reduce using rule 75 (termo1 -> * fator termo1 .)
    ;               reduce using rule 75 (termo1 -> * fator termo1 .)
    ,               reduce using rule 75 (termo1 -> * fator termo1 .)


state 132

    (76) termo1 -> / fator termo1 .

    +               reduce using rule 76 (termo1 -> / fator termo1 .)
    -               reduce using rule 76 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 76 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 76 (termo1 -> / fator termo1 .)
    <               reduce using rule 76 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 76 (termo1 -> / fator termo1 .)
    >               reduce using rule 76 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 76 (termo1 -> / fator termo1 .)
    OR              reduce using rule 76 (termo1 -> / fator termo1 .)
    AND             reduce using rule 76 (termo1 -> / fator termo1 .)
    error           reduce using rule 76 (termo1 -> / fator termo1 .)
    :               reduce using rule 76 (termo1 -> / fator termo1 .)
    )               reduce using rule 76 (termo1 -> / fator termo1 .)
    ;               reduce using rule 76 (termo1 -> / fator termo1 .)
    ,               reduce using rule 76 (termo1 -> / fator termo1 .)


state 133

    (54) expressao1 -> AND valor expressao1 .

    :               reduce using rule 54 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 54 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 54 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 54 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 54 (expressao1 -> AND valor expressao1 .)


state 134

    (55) expressao1 -> error valor expressao1 .

    :               reduce using rule 55 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 55 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 55 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 55 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 55 (expressao1 -> error valor expressao1 .)


state 135

    (53) expressao1 -> OR valor expressao1 .

    :               reduce using rule 53 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 53 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 53 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 53 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 53 (expressao1 -> OR valor expressao1 .)


state 136

    (71) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 71 (aritmetica1 -> + termo aritmetica1 .)


state 137

    (72) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 72 (aritmetica1 -> - termo aritmetica1 .)


state 138

    (80) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 80 (fator1 -> SIM_POT elemento fator1 .)


state 139

    (26) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti ) error .)


state 140

    (23) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 141

    (24) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti error ; .)


state 142

    (25) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT error listaidenti ) ; .)


state 143

    (32) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 156


state 144

    (33) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 157


state 145

    (31) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (34) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (35) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 159
    error           shift and go to state 158


state 146

    (19) listaexp1 -> , listaexp .

    )               reduce using rule 19 (listaexp1 -> , listaexp .)
    error           reduce using rule 19 (listaexp1 -> , listaexp .)


state 147

    (21) listaexp1 -> error listaexp .

    )               reduce using rule 21 (listaexp1 -> error listaexp .)
    error           reduce using rule 21 (listaexp1 -> error listaexp .)


state 148

    (30) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 149

    (27) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 150

    (28) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 151

    (29) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 152

    (47) cmdrepeticao -> WHILE expressao error [ listacmd ] . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 160

state 153

    (48) cmdrepeticao -> WHILE expressao : error listacmd ] . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 163

state 154

    (49) cmdrepeticao -> WHILE expressao : [ listacmd error . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 164

state 155

    (46) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (50) cmdrepeticao -> WHILE expressao : [ listacmd ] . else error
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 165

state 156

    (32) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 166
    empty                          shift and go to state 168

state 157

    (33) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 169
    empty                          shift and go to state 168

state 158

    (34) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 170
    empty                          shift and go to state 168

state 159

    (31) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (35) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 171
    empty                          shift and go to state 168

state 160

    (47) cmdrepeticao -> WHILE expressao error [ listacmd ] else . ;

    ;               shift and go to state 172


state 161

    (42) else -> ELSE . : [ listacmd ]
    (43) else -> ELSE . error [ listacmd ]
    (44) else -> ELSE . : error listacmd ]
    (45) else -> ELSE . : [ listacmd error

    :               shift and go to state 174
    error           shift and go to state 173


state 162

    (41) else -> empty .

    ;               reduce using rule 41 (else -> empty .)
    error           reduce using rule 41 (else -> empty .)


state 163

    (48) cmdrepeticao -> WHILE expressao : error listacmd ] else . ;

    ;               shift and go to state 175


state 164

    (49) cmdrepeticao -> WHILE expressao : [ listacmd error else . ;

    ;               shift and go to state 176


state 165

    (46) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;
    (50) cmdrepeticao -> WHILE expressao : [ listacmd ] else . error

    ;               shift and go to state 178
    error           shift and go to state 177


state 166

    (32) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 179

state 167

    (37) elif -> ELIF . expressao : [ listacmd ] elif
    (38) elif -> ELIF . expressao error [ listacmd ] elif
    (39) elif -> ELIF . expressao : error listacmd ] elif
    (40) elif -> ELIF . expressao : [ listacmd error elif
    (51) expressao -> . valor expressao1
    (56) valor -> . relacional
    (57) valor -> . TRUE
    (58) valor -> . FALSE
    (59) valor -> . NOT valor
    (60) relacional -> . aritmetica relacional1
    (69) aritmetica -> . termo aritmetica1
    (73) termo -> . fator termo1
    (78) fator -> . elemento fator1
    (81) elemento -> . ID
    (82) elemento -> . INTEIRO
    (83) elemento -> . REAL
    (84) elemento -> . LITERAL
    (85) elemento -> . ( expressao )
    (86) elemento -> . + elemento
    (87) elemento -> . - elemento

    TRUE            shift and go to state 27
    FALSE           shift and go to state 40
    NOT             shift and go to state 41
    ID              shift and go to state 38
    INTEIRO         shift and go to state 28
    REAL            shift and go to state 25
    LITERAL         shift and go to state 35
    (               shift and go to state 33
    +               shift and go to state 30
    -               shift and go to state 26

    aritmetica                     shift and go to state 32
    expressao                      shift and go to state 180
    fator                          shift and go to state 31
    termo                          shift and go to state 36
    valor                          shift and go to state 34
    relacional                     shift and go to state 37
    elemento                       shift and go to state 39

state 168

    (36) elif -> empty .

    ELSE            reduce using rule 36 (elif -> empty .)
    ;               reduce using rule 36 (elif -> empty .)
    error           reduce using rule 36 (elif -> empty .)


state 169

    (33) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 181

state 170

    (34) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 182

state 171

    (31) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (35) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (43) else -> . ELSE error [ listacmd ]
    (44) else -> . ELSE : error listacmd ]
    (45) else -> . ELSE : [ listacmd error
    (6) empty -> .

    ELSE            shift and go to state 161
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 183

state 172

    (47) cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .

    INPUT           reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    OUTPUT          reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    IF              reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    WHILE           reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ID              reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ]               reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    error           reduce using rule 47 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)


state 173

    (43) else -> ELSE error . [ listacmd ]

    [               shift and go to state 184


state 174

    (42) else -> ELSE : . [ listacmd ]
    (44) else -> ELSE : . error listacmd ]
    (45) else -> ELSE : . [ listacmd error

    [               shift and go to state 186
    error           shift and go to state 185


state 175

    (48) cmdrepeticao -> WHILE expressao : error listacmd ] else ; .

    INPUT           reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    OUTPUT          reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    IF              reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    WHILE           reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ID              reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ]               reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    error           reduce using rule 48 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)


state 176

    (49) cmdrepeticao -> WHILE expressao : [ listacmd error else ; .

    INPUT           reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    OUTPUT          reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    IF              reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    WHILE           reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ID              reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ]               reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    error           reduce using rule 49 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)


state 177

    (50) cmdrepeticao -> WHILE expressao : [ listacmd ] else error .

    INPUT           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    OUTPUT          reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    IF              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    WHILE           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ID              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ]               reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    error           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)


state 178

    (46) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 46 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 179

    (32) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 187


state 180

    (37) elif -> ELIF expressao . : [ listacmd ] elif
    (38) elif -> ELIF expressao . error [ listacmd ] elif
    (39) elif -> ELIF expressao . : error listacmd ] elif
    (40) elif -> ELIF expressao . : [ listacmd error elif

    :               shift and go to state 189
    error           shift and go to state 188


state 181

    (33) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 190


state 182

    (34) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 191


state 183

    (31) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (35) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 193
    error           shift and go to state 192


state 184

    (43) else -> ELSE error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 194
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 185

    (44) else -> ELSE : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 195
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 186

    (42) else -> ELSE : [ . listacmd ]
    (45) else -> ELSE : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 196
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 187

    (32) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 32 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 188

    (38) elif -> ELIF expressao error . [ listacmd ] elif

    [               shift and go to state 197


state 189

    (37) elif -> ELIF expressao : . [ listacmd ] elif
    (39) elif -> ELIF expressao : . error listacmd ] elif
    (40) elif -> ELIF expressao : . [ listacmd error elif

    [               shift and go to state 199
    error           shift and go to state 198


state 190

    (33) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 191

    (34) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 34 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 192

    (35) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 193

    (31) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 31 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 194

    (43) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 200


state 195

    (44) else -> ELSE : error listacmd . ]

    ]               shift and go to state 201


state 196

    (42) else -> ELSE : [ listacmd . ]
    (45) else -> ELSE : [ listacmd . error

    ]               shift and go to state 203
    error           shift and go to state 202


state 197

    (38) elif -> ELIF expressao error [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 204
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 198

    (39) elif -> ELIF expressao : error . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 205
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 199

    (37) elif -> ELIF expressao : [ . listacmd ] elif
    (40) elif -> ELIF expressao : [ . listacmd error elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (22) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (23) cmdentrada -> . INPUT ( listaidenti ) ;
    (24) cmdentrada -> . INPUT ( listaidenti error ;
    (25) cmdentrada -> . INPUT error listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti ) error
    (27) cmdsaida -> . OUTPUT ( listaexp ) ;
    (28) cmdsaida -> . OUTPUT ( listaexp error ;
    (29) cmdsaida -> . OUTPUT error listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp ) error
    (31) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (32) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (46) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (47) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 17
    OUTPUT          shift and go to state 22
    IF              shift and go to state 19
    WHILE           shift and go to state 12
    ID              shift and go to state 18

    listaidenti                    shift and go to state 16
    cmdrepeticao                   shift and go to state 20
    cmdselecao                     shift and go to state 10
    cmdentrada                     shift and go to state 11
    listacmd                       shift and go to state 206
    cmdsaida                       shift and go to state 15
    comando                        shift and go to state 21
    cmdatribui                     shift and go to state 14

state 200

    (43) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 43 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 43 (else -> ELSE error [ listacmd ] .)


state 201

    (44) else -> ELSE : error listacmd ] .

    ;               reduce using rule 44 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 44 (else -> ELSE : error listacmd ] .)


state 202

    (45) else -> ELSE : [ listacmd error .

    ;               reduce using rule 45 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 45 (else -> ELSE : [ listacmd error .)


state 203

    (42) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 42 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 42 (else -> ELSE : [ listacmd ] .)


state 204

    (38) elif -> ELIF expressao error [ listacmd . ] elif

    ]               shift and go to state 207


state 205

    (39) elif -> ELIF expressao : error listacmd . ] elif

    ]               shift and go to state 208


state 206

    (37) elif -> ELIF expressao : [ listacmd . ] elif
    (40) elif -> ELIF expressao : [ listacmd . error elif

    ]               shift and go to state 210
    error           shift and go to state 209


state 207

    (38) elif -> ELIF expressao error [ listacmd ] . elif
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 211
    empty                          shift and go to state 168

state 208

    (39) elif -> ELIF expressao : error listacmd ] . elif
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 212
    empty                          shift and go to state 168

state 209

    (40) elif -> ELIF expressao : [ listacmd error . elif
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 213
    empty                          shift and go to state 168

state 210

    (37) elif -> ELIF expressao : [ listacmd ] . elif
    (36) elif -> . empty
    (37) elif -> . ELIF expressao : [ listacmd ] elif
    (38) elif -> . ELIF expressao error [ listacmd ] elif
    (39) elif -> . ELIF expressao : error listacmd ] elif
    (40) elif -> . ELIF expressao : [ listacmd error elif
    (6) empty -> .

    ELIF            shift and go to state 167
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 214
    empty                          shift and go to state 168

state 211

    (38) elif -> ELIF expressao error [ listacmd ] elif .

    ELSE            reduce using rule 38 (elif -> ELIF expressao error [ listacmd ] elif .)
    ;               reduce using rule 38 (elif -> ELIF expressao error [ listacmd ] elif .)
    error           reduce using rule 38 (elif -> ELIF expressao error [ listacmd ] elif .)


state 212

    (39) elif -> ELIF expressao : error listacmd ] elif .

    ELSE            reduce using rule 39 (elif -> ELIF expressao : error listacmd ] elif .)
    ;               reduce using rule 39 (elif -> ELIF expressao : error listacmd ] elif .)
    error           reduce using rule 39 (elif -> ELIF expressao : error listacmd ] elif .)


state 213

    (40) elif -> ELIF expressao : [ listacmd error elif .

    ELSE            reduce using rule 40 (elif -> ELIF expressao : [ listacmd error elif .)
    ;               reduce using rule 40 (elif -> ELIF expressao : [ listacmd error elif .)
    error           reduce using rule 40 (elif -> ELIF expressao : [ listacmd error elif .)


state 214

    (37) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 37 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 37 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 37 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 34 resolved as shift
WARNING: shift/reduce conflict for error in state 96 resolved as shift
WARNING: shift/reduce conflict for error in state 107 resolved as shift
WARNING: shift/reduce conflict for error in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 109 resolved as shift
