Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     programa -> error ID : [ listacmd ]
Rule 3     programa -> DEF ID error [ listacmd ]
Rule 4     programa -> DEF ID : error listacmd ]
Rule 5     programa -> DEF ID : [ listacmd error
Rule 6     empty -> <empty>
Rule 7     listacmd -> comando listacmd1
Rule 8     listacmd1 -> empty
Rule 9     listacmd1 -> listacmd
Rule 10    comando -> cmdatribui
Rule 11    comando -> cmdentrada
Rule 12    comando -> cmdsaida
Rule 13    comando -> cmdselecao
Rule 14    comando -> cmdrepeticao
Rule 15    listaidenti -> ID listaindenti1
Rule 16    listaindenti1 -> empty
Rule 17    listaindenti1 -> , listaidenti
Rule 18    listaexp -> expressao listaexp1
Rule 19    listaexp1 -> , listaexp
Rule 20    listaexp1 -> empty
Rule 21    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 22    cmdentrada -> INPUT ( listaidenti ) ;
Rule 23    cmdentrada -> INPUT ( listaidenti error ;
Rule 24    cmdentrada -> INPUT error listaidenti ) ;
Rule 25    cmdentrada -> INPUT ( listaidenti ) error
Rule 26    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 27    cmdsaida -> OUTPUT ( listaexp error ;
Rule 28    cmdsaida -> OUTPUT error listaexp ) ;
Rule 29    cmdsaida -> OUTPUT ( listaexp ) error
Rule 30    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 31    elif -> empty
Rule 32    elif -> ELIF expressao : [ listacmd ] elif
Rule 33    else -> empty
Rule 34    else -> ELSE : [ listacmd ]
Rule 35    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 36    expressao -> valor expressao1
Rule 37    expressao1 -> empty
Rule 38    expressao1 -> OR valor expressao1
Rule 39    expressao1 -> AND valor expressao1
Rule 40    expressao1 -> error valor expressao1
Rule 41    valor -> relacional
Rule 42    valor -> TRUE
Rule 43    valor -> FALSE
Rule 44    valor -> NOT valor
Rule 45    valor -> error
Rule 46    valor -> error valor
Rule 47    relacional -> aritmetica relacional1
Rule 48    relacional1 -> operador aritmetica
Rule 49    relacional1 -> empty
Rule 50    operador -> SIM_EQ
Rule 51    operador -> SIM_DIF
Rule 52    operador -> <
Rule 53    operador -> SIM_LE
Rule 54    operador -> >
Rule 55    operador -> SIM_GE
Rule 56    operador -> error
Rule 57    aritmetica -> termo aritmetica1
Rule 58    aritmetica1 -> empty
Rule 59    aritmetica1 -> + termo aritmetica1
Rule 60    aritmetica1 -> - termo aritmetica1
Rule 61    termo -> fator termo1
Rule 62    termo1 -> empty
Rule 63    termo1 -> * fator termo1
Rule 64    termo1 -> / fator termo1
Rule 65    termo1 -> % fator termo1
Rule 66    fator -> elemento fator1
Rule 67    fator1 -> empty
Rule 68    fator1 -> SIM_POT elemento fator1
Rule 69    elemento -> ID
Rule 70    elemento -> INTEIRO
Rule 71    elemento -> REAL
Rule 72    elemento -> LITERAL
Rule 73    elemento -> ( expressao )
Rule 74    elemento -> + elemento
Rule 75    elemento -> - elemento
Rule 76    elemento -> error
Rule 77    elemento -> error expressao error
Rule 78    elemento -> error elemento

Terminals, with rules where they appear

%                    : 65
(                    : 22 23 25 26 27 29 73
)                    : 22 24 25 26 28 29 73
*                    : 63
+                    : 59 74
,                    : 17 19
-                    : 60 75
/                    : 64
:                    : 1 2 4 5 30 32 34 35
;                    : 21 22 23 24 26 27 28 30 35
<                    : 52
>                    : 54
AND                  : 39
BINARIO              : 
DEF                  : 1 3 4 5
ELIF                 : 32
ELSE                 : 34
FALSE                : 43
HEXADECIMAL          : 
ID                   : 1 2 3 4 5 15 69
IF                   : 30
INPUT                : 22 23 24 25
INTEIRO              : 70
LITERAL              : 72
NOT                  : 44
OCTAL                : 
OR                   : 38
OUTPUT               : 26 27 28 29
REAL                 : 71
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 21
SIM_DIF              : 51
SIM_EQ               : 50
SIM_GE               : 55
SIM_LE               : 53
SIM_POT              : 68
TRUE                 : 42
WHILE                : 35
[                    : 1 2 3 5 30 32 34 35
]                    : 1 2 3 4 30 32 34 35
error                : 2 3 4 5 23 24 25 27 28 29 40 45 46 56 76 77 77 78

Nonterminals, with rules where they appear

aritmetica           : 47 48
aritmetica1          : 57 59 60
cmdatribui           : 10
cmdentrada           : 11
cmdrepeticao         : 14
cmdsaida             : 12
cmdselecao           : 13
comando              : 7
elemento             : 66 68 74 75 78
elif                 : 30 32
else                 : 30 35
empty                : 8 16 20 31 33 37 49 58 62 67
expressao            : 18 21 30 32 35 73 77
expressao1           : 36 38 39 40
fator                : 61 63 64 65
fator1               : 66 68
listacmd             : 1 2 3 4 5 9 30 32 34 35
listacmd1            : 7
listaexp             : 19 26 27 28 29
listaexp1            : 18
listaidenti          : 17 21 22 23 24 25
listaindenti1        : 15
operador             : 48
programa             : 0
relacional           : 41
relacional1          : 47
termo                : 57 59 60
termo1               : 61 63 64 65
valor                : 36 38 39 40 44 46

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]
    (2) programa -> . error ID : [ listacmd ]
    (3) programa -> . DEF ID error [ listacmd ]
    (4) programa -> . DEF ID : error listacmd ]
    (5) programa -> . DEF ID : [ listacmd error

    DEF             shift and go to state 3
    error           shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> error . ID : [ listacmd ]

    ID              shift and go to state 4


state 3

    (1) programa -> DEF . ID : [ listacmd ]
    (3) programa -> DEF . ID error [ listacmd ]
    (4) programa -> DEF . ID : error listacmd ]
    (5) programa -> DEF . ID : [ listacmd error

    ID              shift and go to state 5


state 4

    (2) programa -> error ID . : [ listacmd ]

    :               shift and go to state 6


state 5

    (1) programa -> DEF ID . : [ listacmd ]
    (3) programa -> DEF ID . error [ listacmd ]
    (4) programa -> DEF ID . : error listacmd ]
    (5) programa -> DEF ID . : [ listacmd error

    :               shift and go to state 8
    error           shift and go to state 7


state 6

    (2) programa -> error ID : . [ listacmd ]

    [               shift and go to state 9


state 7

    (3) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 10


state 8

    (1) programa -> DEF ID : . [ listacmd ]
    (4) programa -> DEF ID : . error listacmd ]
    (5) programa -> DEF ID : . [ listacmd error

    [               shift and go to state 12
    error           shift and go to state 11


state 9

    (2) programa -> error ID : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 16
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 10

    (3) programa -> DEF ID error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 26
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 11

    (4) programa -> DEF ID : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 27
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 12

    (1) programa -> DEF ID : [ . listacmd ]
    (5) programa -> DEF ID : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 28
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 13

    (13) comando -> cmdselecao .

    INPUT           reduce using rule 13 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 13 (comando -> cmdselecao .)
    IF              reduce using rule 13 (comando -> cmdselecao .)
    WHILE           reduce using rule 13 (comando -> cmdselecao .)
    ID              reduce using rule 13 (comando -> cmdselecao .)
    ]               reduce using rule 13 (comando -> cmdselecao .)
    error           reduce using rule 13 (comando -> cmdselecao .)


state 14

    (11) comando -> cmdentrada .

    INPUT           reduce using rule 11 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 11 (comando -> cmdentrada .)
    IF              reduce using rule 11 (comando -> cmdentrada .)
    WHILE           reduce using rule 11 (comando -> cmdentrada .)
    ID              reduce using rule 11 (comando -> cmdentrada .)
    ]               reduce using rule 11 (comando -> cmdentrada .)
    error           reduce using rule 11 (comando -> cmdentrada .)


state 15

    (35) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 33
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 16

    (2) programa -> error ID : [ listacmd . ]

    ]               shift and go to state 47


state 17

    (10) comando -> cmdatribui .

    INPUT           reduce using rule 10 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 10 (comando -> cmdatribui .)
    IF              reduce using rule 10 (comando -> cmdatribui .)
    WHILE           reduce using rule 10 (comando -> cmdatribui .)
    ID              reduce using rule 10 (comando -> cmdatribui .)
    ]               reduce using rule 10 (comando -> cmdatribui .)
    error           reduce using rule 10 (comando -> cmdatribui .)


state 18

    (12) comando -> cmdsaida .

    INPUT           reduce using rule 12 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 12 (comando -> cmdsaida .)
    IF              reduce using rule 12 (comando -> cmdsaida .)
    WHILE           reduce using rule 12 (comando -> cmdsaida .)
    ID              reduce using rule 12 (comando -> cmdsaida .)
    ]               reduce using rule 12 (comando -> cmdsaida .)
    error           reduce using rule 12 (comando -> cmdsaida .)


state 19

    (21) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 48


state 20

    (22) cmdentrada -> INPUT . ( listaidenti ) ;
    (23) cmdentrada -> INPUT . ( listaidenti error ;
    (24) cmdentrada -> INPUT . error listaidenti ) ;
    (25) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 49
    error           shift and go to state 50


state 21

    (15) listaidenti -> ID . listaindenti1
    (16) listaindenti1 -> . empty
    (17) listaindenti1 -> . , listaidenti
    (6) empty -> .

    ,               shift and go to state 53
    SIM_ATTR        reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    listaindenti1                  shift and go to state 51
    empty                          shift and go to state 52

state 22

    (30) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 54
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 23

    (14) comando -> cmdrepeticao .

    INPUT           reduce using rule 14 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 14 (comando -> cmdrepeticao .)
    IF              reduce using rule 14 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 14 (comando -> cmdrepeticao .)
    ID              reduce using rule 14 (comando -> cmdrepeticao .)
    ]               reduce using rule 14 (comando -> cmdrepeticao .)
    error           reduce using rule 14 (comando -> cmdrepeticao .)


state 24

    (7) listacmd -> comando . listacmd1
    (8) listacmd1 -> . empty
    (9) listacmd1 -> . listacmd
    (6) empty -> .
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    ]               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    listacmd1                      shift and go to state 56
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 55
    cmdsaida                       shift and go to state 18
    empty                          shift and go to state 57
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 25

    (26) cmdsaida -> OUTPUT . ( listaexp ) ;
    (27) cmdsaida -> OUTPUT . ( listaexp error ;
    (28) cmdsaida -> OUTPUT . error listaexp ) ;
    (29) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 58
    error           shift and go to state 59


state 26

    (3) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 60


state 27

    (4) programa -> DEF ID : error listacmd . ]

    ]               shift and go to state 61


state 28

    (1) programa -> DEF ID : [ listacmd . ]
    (5) programa -> DEF ID : [ listacmd . error

    ]               shift and go to state 63
    error           shift and go to state 62


state 29

    (71) elemento -> REAL .

    SIM_POT         reduce using rule 71 (elemento -> REAL .)
    *               reduce using rule 71 (elemento -> REAL .)
    /               reduce using rule 71 (elemento -> REAL .)
    %               reduce using rule 71 (elemento -> REAL .)
    +               reduce using rule 71 (elemento -> REAL .)
    -               reduce using rule 71 (elemento -> REAL .)
    SIM_EQ          reduce using rule 71 (elemento -> REAL .)
    SIM_DIF         reduce using rule 71 (elemento -> REAL .)
    <               reduce using rule 71 (elemento -> REAL .)
    SIM_LE          reduce using rule 71 (elemento -> REAL .)
    >               reduce using rule 71 (elemento -> REAL .)
    SIM_GE          reduce using rule 71 (elemento -> REAL .)
    error           reduce using rule 71 (elemento -> REAL .)
    OR              reduce using rule 71 (elemento -> REAL .)
    AND             reduce using rule 71 (elemento -> REAL .)
    :               reduce using rule 71 (elemento -> REAL .)
    )               reduce using rule 71 (elemento -> REAL .)
    ;               reduce using rule 71 (elemento -> REAL .)
    ,               reduce using rule 71 (elemento -> REAL .)


state 30

    (75) elemento -> - . elemento
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 65

state 31

    (42) valor -> TRUE .

    OR              reduce using rule 42 (valor -> TRUE .)
    AND             reduce using rule 42 (valor -> TRUE .)
    error           reduce using rule 42 (valor -> TRUE .)
    :               reduce using rule 42 (valor -> TRUE .)
    ;               reduce using rule 42 (valor -> TRUE .)
    ,               reduce using rule 42 (valor -> TRUE .)
    )               reduce using rule 42 (valor -> TRUE .)


state 32

    (70) elemento -> INTEIRO .

    SIM_POT         reduce using rule 70 (elemento -> INTEIRO .)
    *               reduce using rule 70 (elemento -> INTEIRO .)
    /               reduce using rule 70 (elemento -> INTEIRO .)
    %               reduce using rule 70 (elemento -> INTEIRO .)
    +               reduce using rule 70 (elemento -> INTEIRO .)
    -               reduce using rule 70 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 70 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 70 (elemento -> INTEIRO .)
    <               reduce using rule 70 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 70 (elemento -> INTEIRO .)
    >               reduce using rule 70 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 70 (elemento -> INTEIRO .)
    error           reduce using rule 70 (elemento -> INTEIRO .)
    OR              reduce using rule 70 (elemento -> INTEIRO .)
    AND             reduce using rule 70 (elemento -> INTEIRO .)
    :               reduce using rule 70 (elemento -> INTEIRO .)
    )               reduce using rule 70 (elemento -> INTEIRO .)
    ;               reduce using rule 70 (elemento -> INTEIRO .)
    ,               reduce using rule 70 (elemento -> INTEIRO .)


state 33

    (35) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;

    :               shift and go to state 66


state 34

    (74) elemento -> + . elemento
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 67

state 35

    (61) termo -> fator . termo1
    (62) termo1 -> . empty
    (63) termo1 -> . * fator termo1
    (64) termo1 -> . / fator termo1
    (65) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 70
    /               shift and go to state 71
    %               shift and go to state 69
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 68
    empty                          shift and go to state 72

state 36

    (47) relacional -> aritmetica . relacional1
    (48) relacional1 -> . operador aritmetica
    (49) relacional1 -> . empty
    (50) operador -> . SIM_EQ
    (51) operador -> . SIM_DIF
    (52) operador -> . <
    (53) operador -> . SIM_LE
    (54) operador -> . >
    (55) operador -> . SIM_GE
    (56) operador -> . error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    SIM_EQ          shift and go to state 73
    SIM_DIF         shift and go to state 76
    <               shift and go to state 80
    SIM_LE          shift and go to state 82
    >               shift and go to state 79
    SIM_GE          shift and go to state 75
    error           shift and go to state 77
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    relacional1                    shift and go to state 78
    operador                       shift and go to state 74
    empty                          shift and go to state 81

state 37

    (73) elemento -> ( . expressao )
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 83
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 38

    (36) expressao -> valor . expressao1
    (37) expressao1 -> . empty
    (38) expressao1 -> . OR valor expressao1
    (39) expressao1 -> . AND valor expressao1
    (40) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 87
    AND             shift and go to state 84
    error           shift and go to state 85
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 86
    empty                          shift and go to state 88

state 39

    (72) elemento -> LITERAL .

    SIM_POT         reduce using rule 72 (elemento -> LITERAL .)
    *               reduce using rule 72 (elemento -> LITERAL .)
    /               reduce using rule 72 (elemento -> LITERAL .)
    %               reduce using rule 72 (elemento -> LITERAL .)
    +               reduce using rule 72 (elemento -> LITERAL .)
    -               reduce using rule 72 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 72 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 72 (elemento -> LITERAL .)
    <               reduce using rule 72 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 72 (elemento -> LITERAL .)
    >               reduce using rule 72 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 72 (elemento -> LITERAL .)
    error           reduce using rule 72 (elemento -> LITERAL .)
    OR              reduce using rule 72 (elemento -> LITERAL .)
    AND             reduce using rule 72 (elemento -> LITERAL .)
    :               reduce using rule 72 (elemento -> LITERAL .)
    )               reduce using rule 72 (elemento -> LITERAL .)
    ;               reduce using rule 72 (elemento -> LITERAL .)
    ,               reduce using rule 72 (elemento -> LITERAL .)


state 40

    (57) aritmetica -> termo . aritmetica1
    (58) aritmetica1 -> . empty
    (59) aritmetica1 -> . + termo aritmetica1
    (60) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 90
    -               shift and go to state 91
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 89
    empty                          shift and go to state 92

state 41

    (41) valor -> relacional .

    OR              reduce using rule 41 (valor -> relacional .)
    AND             reduce using rule 41 (valor -> relacional .)
    error           reduce using rule 41 (valor -> relacional .)
    :               reduce using rule 41 (valor -> relacional .)
    ;               reduce using rule 41 (valor -> relacional .)
    ,               reduce using rule 41 (valor -> relacional .)
    )               reduce using rule 41 (valor -> relacional .)


state 42

    (69) elemento -> ID .

    SIM_POT         reduce using rule 69 (elemento -> ID .)
    *               reduce using rule 69 (elemento -> ID .)
    /               reduce using rule 69 (elemento -> ID .)
    %               reduce using rule 69 (elemento -> ID .)
    +               reduce using rule 69 (elemento -> ID .)
    -               reduce using rule 69 (elemento -> ID .)
    SIM_EQ          reduce using rule 69 (elemento -> ID .)
    SIM_DIF         reduce using rule 69 (elemento -> ID .)
    <               reduce using rule 69 (elemento -> ID .)
    SIM_LE          reduce using rule 69 (elemento -> ID .)
    >               reduce using rule 69 (elemento -> ID .)
    SIM_GE          reduce using rule 69 (elemento -> ID .)
    error           reduce using rule 69 (elemento -> ID .)
    OR              reduce using rule 69 (elemento -> ID .)
    AND             reduce using rule 69 (elemento -> ID .)
    :               reduce using rule 69 (elemento -> ID .)
    )               reduce using rule 69 (elemento -> ID .)
    ;               reduce using rule 69 (elemento -> ID .)
    ,               reduce using rule 69 (elemento -> ID .)


state 43

    (66) fator -> elemento . fator1
    (67) fator1 -> . empty
    (68) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 94
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 93
    empty                          shift and go to state 95

state 44

    (43) valor -> FALSE .

    OR              reduce using rule 43 (valor -> FALSE .)
    AND             reduce using rule 43 (valor -> FALSE .)
    error           reduce using rule 43 (valor -> FALSE .)
    :               reduce using rule 43 (valor -> FALSE .)
    ;               reduce using rule 43 (valor -> FALSE .)
    ,               reduce using rule 43 (valor -> FALSE .)
    )               reduce using rule 43 (valor -> FALSE .)


state 45

    (45) valor -> error .
    (46) valor -> error . valor
    (76) elemento -> error .
    (77) elemento -> error . expressao error
    (78) elemento -> error . elemento
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (36) expressao -> . valor expressao1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1

  ! reduce/reduce conflict for error resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for OR resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for : resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for ) resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for ; resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for , resolved using rule 45 (valor -> error .)
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    OR              reduce using rule 45 (valor -> error .)
    AND             reduce using rule 45 (valor -> error .)
    :               reduce using rule 45 (valor -> error .)
    ;               reduce using rule 45 (valor -> error .)
    ,               reduce using rule 45 (valor -> error .)
    )               reduce using rule 45 (valor -> error .)
    SIM_POT         reduce using rule 76 (elemento -> error .)
    *               reduce using rule 76 (elemento -> error .)
    /               reduce using rule 76 (elemento -> error .)
    %               reduce using rule 76 (elemento -> error .)
    SIM_EQ          reduce using rule 76 (elemento -> error .)
    SIM_DIF         reduce using rule 76 (elemento -> error .)
    <               reduce using rule 76 (elemento -> error .)
    SIM_LE          reduce using rule 76 (elemento -> error .)
    >               reduce using rule 76 (elemento -> error .)
    SIM_GE          reduce using rule 76 (elemento -> error .)
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

  ! error           [ reduce using rule 45 (valor -> error .) ]
  ! +               [ reduce using rule 76 (elemento -> error .) ]
  ! -               [ reduce using rule 76 (elemento -> error .) ]
  ! error           [ reduce using rule 76 (elemento -> error .) ]
  ! OR              [ reduce using rule 76 (elemento -> error .) ]
  ! AND             [ reduce using rule 76 (elemento -> error .) ]
  ! :               [ reduce using rule 76 (elemento -> error .) ]
  ! )               [ reduce using rule 76 (elemento -> error .) ]
  ! ;               [ reduce using rule 76 (elemento -> error .) ]
  ! ,               [ reduce using rule 76 (elemento -> error .) ]

    expressao                      shift and go to state 96
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 97
    relacional                     shift and go to state 41
    elemento                       shift and go to state 98

state 46

    (44) valor -> NOT . valor
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 99
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 47

    (2) programa -> error ID : [ listacmd ] .

    $end            reduce using rule 2 (programa -> error ID : [ listacmd ] .)


state 48

    (21) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 100
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 49

    (22) cmdentrada -> INPUT ( . listaidenti ) ;
    (23) cmdentrada -> INPUT ( . listaidenti error ;
    (25) cmdentrada -> INPUT ( . listaidenti ) error
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 101

state 50

    (24) cmdentrada -> INPUT error . listaidenti ) ;
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 102

state 51

    (15) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 15 (listaidenti -> ID listaindenti1 .)


state 52

    (16) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 16 (listaindenti1 -> empty .)
    )               reduce using rule 16 (listaindenti1 -> empty .)
    error           reduce using rule 16 (listaindenti1 -> empty .)


state 53

    (17) listaindenti1 -> , . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 103

state 54

    (30) cmdselecao -> IF expressao . : [ listacmd ] elif else ;

    :               shift and go to state 104


state 55

    (9) listacmd1 -> listacmd .

    ]               reduce using rule 9 (listacmd1 -> listacmd .)
    error           reduce using rule 9 (listacmd1 -> listacmd .)


state 56

    (7) listacmd -> comando listacmd1 .

    ]               reduce using rule 7 (listacmd -> comando listacmd1 .)
    error           reduce using rule 7 (listacmd -> comando listacmd1 .)


state 57

    (8) listacmd1 -> empty .

    ]               reduce using rule 8 (listacmd1 -> empty .)
    error           reduce using rule 8 (listacmd1 -> empty .)


state 58

    (26) cmdsaida -> OUTPUT ( . listaexp ) ;
    (27) cmdsaida -> OUTPUT ( . listaexp error ;
    (29) cmdsaida -> OUTPUT ( . listaexp ) error
    (18) listaexp -> . expressao listaexp1
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 105
    listaexp                       shift and go to state 106
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 59

    (28) cmdsaida -> OUTPUT error . listaexp ) ;
    (18) listaexp -> . expressao listaexp1
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 105
    listaexp                       shift and go to state 107
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 60

    (3) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 3 (programa -> DEF ID error [ listacmd ] .)


state 61

    (4) programa -> DEF ID : error listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID : error listacmd ] .)


state 62

    (5) programa -> DEF ID : [ listacmd error .

    $end            reduce using rule 5 (programa -> DEF ID : [ listacmd error .)


state 63

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 64

    (76) elemento -> error .
    (77) elemento -> error . expressao error
    (78) elemento -> error . elemento
    (36) expressao -> . valor expressao1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 76 (elemento -> error .)
    *               reduce using rule 76 (elemento -> error .)
    /               reduce using rule 76 (elemento -> error .)
    %               reduce using rule 76 (elemento -> error .)
    SIM_EQ          reduce using rule 76 (elemento -> error .)
    SIM_DIF         reduce using rule 76 (elemento -> error .)
    <               reduce using rule 76 (elemento -> error .)
    SIM_LE          reduce using rule 76 (elemento -> error .)
    >               reduce using rule 76 (elemento -> error .)
    SIM_GE          reduce using rule 76 (elemento -> error .)
    OR              reduce using rule 76 (elemento -> error .)
    AND             reduce using rule 76 (elemento -> error .)
    :               reduce using rule 76 (elemento -> error .)
    )               reduce using rule 76 (elemento -> error .)
    ;               reduce using rule 76 (elemento -> error .)
    ,               reduce using rule 76 (elemento -> error .)
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 108
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46

  ! +               [ reduce using rule 76 (elemento -> error .) ]
  ! -               [ reduce using rule 76 (elemento -> error .) ]
  ! error           [ reduce using rule 76 (elemento -> error .) ]

    expressao                      shift and go to state 96
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 98

state 65

    (75) elemento -> - elemento .

    SIM_POT         reduce using rule 75 (elemento -> - elemento .)
    *               reduce using rule 75 (elemento -> - elemento .)
    /               reduce using rule 75 (elemento -> - elemento .)
    %               reduce using rule 75 (elemento -> - elemento .)
    +               reduce using rule 75 (elemento -> - elemento .)
    -               reduce using rule 75 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 75 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 75 (elemento -> - elemento .)
    <               reduce using rule 75 (elemento -> - elemento .)
    SIM_LE          reduce using rule 75 (elemento -> - elemento .)
    >               reduce using rule 75 (elemento -> - elemento .)
    SIM_GE          reduce using rule 75 (elemento -> - elemento .)
    error           reduce using rule 75 (elemento -> - elemento .)
    OR              reduce using rule 75 (elemento -> - elemento .)
    AND             reduce using rule 75 (elemento -> - elemento .)
    :               reduce using rule 75 (elemento -> - elemento .)
    )               reduce using rule 75 (elemento -> - elemento .)
    ;               reduce using rule 75 (elemento -> - elemento .)
    ,               reduce using rule 75 (elemento -> - elemento .)


state 66

    (35) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;

    [               shift and go to state 109


state 67

    (74) elemento -> + elemento .

    SIM_POT         reduce using rule 74 (elemento -> + elemento .)
    *               reduce using rule 74 (elemento -> + elemento .)
    /               reduce using rule 74 (elemento -> + elemento .)
    %               reduce using rule 74 (elemento -> + elemento .)
    +               reduce using rule 74 (elemento -> + elemento .)
    -               reduce using rule 74 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 74 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 74 (elemento -> + elemento .)
    <               reduce using rule 74 (elemento -> + elemento .)
    SIM_LE          reduce using rule 74 (elemento -> + elemento .)
    >               reduce using rule 74 (elemento -> + elemento .)
    SIM_GE          reduce using rule 74 (elemento -> + elemento .)
    error           reduce using rule 74 (elemento -> + elemento .)
    OR              reduce using rule 74 (elemento -> + elemento .)
    AND             reduce using rule 74 (elemento -> + elemento .)
    :               reduce using rule 74 (elemento -> + elemento .)
    )               reduce using rule 74 (elemento -> + elemento .)
    ;               reduce using rule 74 (elemento -> + elemento .)
    ,               reduce using rule 74 (elemento -> + elemento .)


state 68

    (61) termo -> fator termo1 .

    +               reduce using rule 61 (termo -> fator termo1 .)
    -               reduce using rule 61 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 61 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 61 (termo -> fator termo1 .)
    <               reduce using rule 61 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 61 (termo -> fator termo1 .)
    >               reduce using rule 61 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 61 (termo -> fator termo1 .)
    error           reduce using rule 61 (termo -> fator termo1 .)
    OR              reduce using rule 61 (termo -> fator termo1 .)
    AND             reduce using rule 61 (termo -> fator termo1 .)
    :               reduce using rule 61 (termo -> fator termo1 .)
    )               reduce using rule 61 (termo -> fator termo1 .)
    ;               reduce using rule 61 (termo -> fator termo1 .)
    ,               reduce using rule 61 (termo -> fator termo1 .)


state 69

    (65) termo1 -> % . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 43
    fator                          shift and go to state 110

state 70

    (63) termo1 -> * . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 43
    fator                          shift and go to state 111

state 71

    (64) termo1 -> / . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 43
    fator                          shift and go to state 112

state 72

    (62) termo1 -> empty .

    +               reduce using rule 62 (termo1 -> empty .)
    -               reduce using rule 62 (termo1 -> empty .)
    SIM_EQ          reduce using rule 62 (termo1 -> empty .)
    SIM_DIF         reduce using rule 62 (termo1 -> empty .)
    <               reduce using rule 62 (termo1 -> empty .)
    SIM_LE          reduce using rule 62 (termo1 -> empty .)
    >               reduce using rule 62 (termo1 -> empty .)
    SIM_GE          reduce using rule 62 (termo1 -> empty .)
    error           reduce using rule 62 (termo1 -> empty .)
    OR              reduce using rule 62 (termo1 -> empty .)
    AND             reduce using rule 62 (termo1 -> empty .)
    :               reduce using rule 62 (termo1 -> empty .)
    )               reduce using rule 62 (termo1 -> empty .)
    ;               reduce using rule 62 (termo1 -> empty .)
    ,               reduce using rule 62 (termo1 -> empty .)


state 73

    (50) operador -> SIM_EQ .

    ID              reduce using rule 50 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 50 (operador -> SIM_EQ .)
    REAL            reduce using rule 50 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 50 (operador -> SIM_EQ .)
    (               reduce using rule 50 (operador -> SIM_EQ .)
    +               reduce using rule 50 (operador -> SIM_EQ .)
    -               reduce using rule 50 (operador -> SIM_EQ .)
    error           reduce using rule 50 (operador -> SIM_EQ .)


state 74

    (48) relacional1 -> operador . aritmetica
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    fator                          shift and go to state 35
    aritmetica                     shift and go to state 113
    termo                          shift and go to state 40
    elemento                       shift and go to state 43

state 75

    (55) operador -> SIM_GE .

    ID              reduce using rule 55 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 55 (operador -> SIM_GE .)
    REAL            reduce using rule 55 (operador -> SIM_GE .)
    LITERAL         reduce using rule 55 (operador -> SIM_GE .)
    (               reduce using rule 55 (operador -> SIM_GE .)
    +               reduce using rule 55 (operador -> SIM_GE .)
    -               reduce using rule 55 (operador -> SIM_GE .)
    error           reduce using rule 55 (operador -> SIM_GE .)


state 76

    (51) operador -> SIM_DIF .

    ID              reduce using rule 51 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 51 (operador -> SIM_DIF .)
    REAL            reduce using rule 51 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 51 (operador -> SIM_DIF .)
    (               reduce using rule 51 (operador -> SIM_DIF .)
    +               reduce using rule 51 (operador -> SIM_DIF .)
    -               reduce using rule 51 (operador -> SIM_DIF .)
    error           reduce using rule 51 (operador -> SIM_DIF .)


state 77

    (56) operador -> error .

    ID              reduce using rule 56 (operador -> error .)
    INTEIRO         reduce using rule 56 (operador -> error .)
    REAL            reduce using rule 56 (operador -> error .)
    LITERAL         reduce using rule 56 (operador -> error .)
    (               reduce using rule 56 (operador -> error .)
    +               reduce using rule 56 (operador -> error .)
    -               reduce using rule 56 (operador -> error .)
    error           reduce using rule 56 (operador -> error .)


state 78

    (47) relacional -> aritmetica relacional1 .

    OR              reduce using rule 47 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 47 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 47 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 47 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 47 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 47 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 47 (relacional -> aritmetica relacional1 .)


state 79

    (54) operador -> > .

    ID              reduce using rule 54 (operador -> > .)
    INTEIRO         reduce using rule 54 (operador -> > .)
    REAL            reduce using rule 54 (operador -> > .)
    LITERAL         reduce using rule 54 (operador -> > .)
    (               reduce using rule 54 (operador -> > .)
    +               reduce using rule 54 (operador -> > .)
    -               reduce using rule 54 (operador -> > .)
    error           reduce using rule 54 (operador -> > .)


state 80

    (52) operador -> < .

    ID              reduce using rule 52 (operador -> < .)
    INTEIRO         reduce using rule 52 (operador -> < .)
    REAL            reduce using rule 52 (operador -> < .)
    LITERAL         reduce using rule 52 (operador -> < .)
    (               reduce using rule 52 (operador -> < .)
    +               reduce using rule 52 (operador -> < .)
    -               reduce using rule 52 (operador -> < .)
    error           reduce using rule 52 (operador -> < .)


state 81

    (49) relacional1 -> empty .

    OR              reduce using rule 49 (relacional1 -> empty .)
    AND             reduce using rule 49 (relacional1 -> empty .)
    error           reduce using rule 49 (relacional1 -> empty .)
    :               reduce using rule 49 (relacional1 -> empty .)
    )               reduce using rule 49 (relacional1 -> empty .)
    ;               reduce using rule 49 (relacional1 -> empty .)
    ,               reduce using rule 49 (relacional1 -> empty .)


state 82

    (53) operador -> SIM_LE .

    ID              reduce using rule 53 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 53 (operador -> SIM_LE .)
    REAL            reduce using rule 53 (operador -> SIM_LE .)
    LITERAL         reduce using rule 53 (operador -> SIM_LE .)
    (               reduce using rule 53 (operador -> SIM_LE .)
    +               reduce using rule 53 (operador -> SIM_LE .)
    -               reduce using rule 53 (operador -> SIM_LE .)
    error           reduce using rule 53 (operador -> SIM_LE .)


state 83

    (73) elemento -> ( expressao . )

    )               shift and go to state 114


state 84

    (39) expressao1 -> AND . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 115
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 85

    (40) expressao1 -> error . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 116
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 86

    (36) expressao -> valor expressao1 .

    error           reduce using rule 36 (expressao -> valor expressao1 .)
    ,               reduce using rule 36 (expressao -> valor expressao1 .)
    )               reduce using rule 36 (expressao -> valor expressao1 .)
    :               reduce using rule 36 (expressao -> valor expressao1 .)
    ;               reduce using rule 36 (expressao -> valor expressao1 .)


state 87

    (38) expressao1 -> OR . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 117
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 88

    (37) expressao1 -> empty .

    error           reduce using rule 37 (expressao1 -> empty .)
    :               reduce using rule 37 (expressao1 -> empty .)
    )               reduce using rule 37 (expressao1 -> empty .)
    ;               reduce using rule 37 (expressao1 -> empty .)
    ,               reduce using rule 37 (expressao1 -> empty .)


state 89

    (57) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 57 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 57 (aritmetica -> termo aritmetica1 .)


state 90

    (59) aritmetica1 -> + . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    fator                          shift and go to state 35
    termo                          shift and go to state 118
    elemento                       shift and go to state 43

state 91

    (60) aritmetica1 -> - . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    fator                          shift and go to state 35
    termo                          shift and go to state 119
    elemento                       shift and go to state 43

state 92

    (58) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 58 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 58 (aritmetica1 -> empty .)
    <               reduce using rule 58 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 58 (aritmetica1 -> empty .)
    >               reduce using rule 58 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 58 (aritmetica1 -> empty .)
    error           reduce using rule 58 (aritmetica1 -> empty .)
    OR              reduce using rule 58 (aritmetica1 -> empty .)
    AND             reduce using rule 58 (aritmetica1 -> empty .)
    :               reduce using rule 58 (aritmetica1 -> empty .)
    )               reduce using rule 58 (aritmetica1 -> empty .)
    ;               reduce using rule 58 (aritmetica1 -> empty .)
    ,               reduce using rule 58 (aritmetica1 -> empty .)


state 93

    (66) fator -> elemento fator1 .

    *               reduce using rule 66 (fator -> elemento fator1 .)
    /               reduce using rule 66 (fator -> elemento fator1 .)
    %               reduce using rule 66 (fator -> elemento fator1 .)
    +               reduce using rule 66 (fator -> elemento fator1 .)
    -               reduce using rule 66 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 66 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 66 (fator -> elemento fator1 .)
    <               reduce using rule 66 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 66 (fator -> elemento fator1 .)
    >               reduce using rule 66 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 66 (fator -> elemento fator1 .)
    error           reduce using rule 66 (fator -> elemento fator1 .)
    OR              reduce using rule 66 (fator -> elemento fator1 .)
    AND             reduce using rule 66 (fator -> elemento fator1 .)
    :               reduce using rule 66 (fator -> elemento fator1 .)
    )               reduce using rule 66 (fator -> elemento fator1 .)
    ;               reduce using rule 66 (fator -> elemento fator1 .)
    ,               reduce using rule 66 (fator -> elemento fator1 .)


state 94

    (68) fator1 -> SIM_POT . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 64

    elemento                       shift and go to state 120

state 95

    (67) fator1 -> empty .

    *               reduce using rule 67 (fator1 -> empty .)
    /               reduce using rule 67 (fator1 -> empty .)
    %               reduce using rule 67 (fator1 -> empty .)
    +               reduce using rule 67 (fator1 -> empty .)
    -               reduce using rule 67 (fator1 -> empty .)
    SIM_EQ          reduce using rule 67 (fator1 -> empty .)
    SIM_DIF         reduce using rule 67 (fator1 -> empty .)
    <               reduce using rule 67 (fator1 -> empty .)
    SIM_LE          reduce using rule 67 (fator1 -> empty .)
    >               reduce using rule 67 (fator1 -> empty .)
    SIM_GE          reduce using rule 67 (fator1 -> empty .)
    error           reduce using rule 67 (fator1 -> empty .)
    OR              reduce using rule 67 (fator1 -> empty .)
    AND             reduce using rule 67 (fator1 -> empty .)
    :               reduce using rule 67 (fator1 -> empty .)
    )               reduce using rule 67 (fator1 -> empty .)
    ;               reduce using rule 67 (fator1 -> empty .)
    ,               reduce using rule 67 (fator1 -> empty .)


state 96

    (77) elemento -> error expressao . error

    error           shift and go to state 121


state 97

    (46) valor -> error valor .
    (36) expressao -> valor . expressao1
    (37) expressao1 -> . empty
    (38) expressao1 -> . OR valor expressao1
    (39) expressao1 -> . AND valor expressao1
    (40) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
    :               reduce using rule 46 (valor -> error valor .)
    ;               reduce using rule 46 (valor -> error valor .)
    ,               reduce using rule 46 (valor -> error valor .)
    )               reduce using rule 46 (valor -> error valor .)
    OR              shift and go to state 87
    AND             shift and go to state 84
    error           shift and go to state 85

  ! OR              [ reduce using rule 46 (valor -> error valor .) ]
  ! AND             [ reduce using rule 46 (valor -> error valor .) ]
  ! error           [ reduce using rule 46 (valor -> error valor .) ]
  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 86
    empty                          shift and go to state 88

state 98

    (78) elemento -> error elemento .
    (66) fator -> elemento . fator1
    (67) fator1 -> . empty
    (68) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

  ! shift/reduce conflict for SIM_POT resolved as shift
  ! reduce/reduce conflict for * resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for / resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for % resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for + resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for - resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_EQ resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_DIF resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for < resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_LE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for > resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_GE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for error resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for : resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ) resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ; resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for , resolved using rule 6 (empty -> .)
    SIM_POT         shift and go to state 94
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! SIM_POT         [ reduce using rule 78 (elemento -> error elemento .) ]
  ! *               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! /               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! %               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! +               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! -               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! SIM_EQ          [ reduce using rule 78 (elemento -> error elemento .) ]
  ! SIM_DIF         [ reduce using rule 78 (elemento -> error elemento .) ]
  ! <               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! SIM_LE          [ reduce using rule 78 (elemento -> error elemento .) ]
  ! >               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! SIM_GE          [ reduce using rule 78 (elemento -> error elemento .) ]
  ! error           [ reduce using rule 78 (elemento -> error elemento .) ]
  ! OR              [ reduce using rule 78 (elemento -> error elemento .) ]
  ! AND             [ reduce using rule 78 (elemento -> error elemento .) ]
  ! :               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! )               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! ;               [ reduce using rule 78 (elemento -> error elemento .) ]
  ! ,               [ reduce using rule 78 (elemento -> error elemento .) ]

    fator1                         shift and go to state 93
    empty                          shift and go to state 95

state 99

    (44) valor -> NOT valor .

    OR              reduce using rule 44 (valor -> NOT valor .)
    AND             reduce using rule 44 (valor -> NOT valor .)
    error           reduce using rule 44 (valor -> NOT valor .)
    :               reduce using rule 44 (valor -> NOT valor .)
    ;               reduce using rule 44 (valor -> NOT valor .)
    ,               reduce using rule 44 (valor -> NOT valor .)
    )               reduce using rule 44 (valor -> NOT valor .)


state 100

    (21) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 122


state 101

    (22) cmdentrada -> INPUT ( listaidenti . ) ;
    (23) cmdentrada -> INPUT ( listaidenti . error ;
    (25) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 123
    error           shift and go to state 124


state 102

    (24) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 125


state 103

    (17) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 17 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 17 (listaindenti1 -> , listaidenti .)


state 104

    (30) cmdselecao -> IF expressao : . [ listacmd ] elif else ;

    [               shift and go to state 126


state 105

    (18) listaexp -> expressao . listaexp1
    (19) listaexp1 -> . , listaexp
    (20) listaexp1 -> . empty
    (6) empty -> .

    ,               shift and go to state 129
    )               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    listaexp1                      shift and go to state 127
    empty                          shift and go to state 128

state 106

    (26) cmdsaida -> OUTPUT ( listaexp . ) ;
    (27) cmdsaida -> OUTPUT ( listaexp . error ;
    (29) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 130
    error           shift and go to state 131


state 107

    (28) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 132


state 108

    (76) elemento -> error .
    (77) elemento -> error . expressao error
    (78) elemento -> error . elemento
    (45) valor -> error .
    (46) valor -> error . valor
    (36) expressao -> . valor expressao1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1

  ! reduce/reduce conflict for OR resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 45 (valor -> error .)
  ! reduce/reduce conflict for error resolved using rule 45 (valor -> error .)
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 76 (elemento -> error .)
    *               reduce using rule 76 (elemento -> error .)
    /               reduce using rule 76 (elemento -> error .)
    %               reduce using rule 76 (elemento -> error .)
    SIM_EQ          reduce using rule 76 (elemento -> error .)
    SIM_DIF         reduce using rule 76 (elemento -> error .)
    <               reduce using rule 76 (elemento -> error .)
    SIM_LE          reduce using rule 76 (elemento -> error .)
    >               reduce using rule 76 (elemento -> error .)
    SIM_GE          reduce using rule 76 (elemento -> error .)
    :               reduce using rule 76 (elemento -> error .)
    )               reduce using rule 76 (elemento -> error .)
    ;               reduce using rule 76 (elemento -> error .)
    ,               reduce using rule 76 (elemento -> error .)
    OR              reduce using rule 45 (valor -> error .)
    AND             reduce using rule 45 (valor -> error .)
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 108
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46

  ! +               [ reduce using rule 76 (elemento -> error .) ]
  ! -               [ reduce using rule 76 (elemento -> error .) ]
  ! error           [ reduce using rule 76 (elemento -> error .) ]
  ! OR              [ reduce using rule 76 (elemento -> error .) ]
  ! AND             [ reduce using rule 76 (elemento -> error .) ]
  ! error           [ reduce using rule 45 (valor -> error .) ]

    expressao                      shift and go to state 96
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 97
    relacional                     shift and go to state 41
    elemento                       shift and go to state 98

state 109

    (35) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 133
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 110

    (65) termo1 -> % fator . termo1
    (62) termo1 -> . empty
    (63) termo1 -> . * fator termo1
    (64) termo1 -> . / fator termo1
    (65) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 70
    /               shift and go to state 71
    %               shift and go to state 69
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 134
    empty                          shift and go to state 72

state 111

    (63) termo1 -> * fator . termo1
    (62) termo1 -> . empty
    (63) termo1 -> . * fator termo1
    (64) termo1 -> . / fator termo1
    (65) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 70
    /               shift and go to state 71
    %               shift and go to state 69
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 135
    empty                          shift and go to state 72

state 112

    (64) termo1 -> / fator . termo1
    (62) termo1 -> . empty
    (63) termo1 -> . * fator termo1
    (64) termo1 -> . / fator termo1
    (65) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 70
    /               shift and go to state 71
    %               shift and go to state 69
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 136
    empty                          shift and go to state 72

state 113

    (48) relacional1 -> operador aritmetica .

    OR              reduce using rule 48 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 48 (relacional1 -> operador aritmetica .)
    error           reduce using rule 48 (relacional1 -> operador aritmetica .)
    :               reduce using rule 48 (relacional1 -> operador aritmetica .)
    )               reduce using rule 48 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 48 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 48 (relacional1 -> operador aritmetica .)


state 114

    (73) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 73 (elemento -> ( expressao ) .)
    *               reduce using rule 73 (elemento -> ( expressao ) .)
    /               reduce using rule 73 (elemento -> ( expressao ) .)
    %               reduce using rule 73 (elemento -> ( expressao ) .)
    +               reduce using rule 73 (elemento -> ( expressao ) .)
    -               reduce using rule 73 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 73 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 73 (elemento -> ( expressao ) .)
    <               reduce using rule 73 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 73 (elemento -> ( expressao ) .)
    >               reduce using rule 73 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 73 (elemento -> ( expressao ) .)
    error           reduce using rule 73 (elemento -> ( expressao ) .)
    OR              reduce using rule 73 (elemento -> ( expressao ) .)
    AND             reduce using rule 73 (elemento -> ( expressao ) .)
    :               reduce using rule 73 (elemento -> ( expressao ) .)
    )               reduce using rule 73 (elemento -> ( expressao ) .)
    ;               reduce using rule 73 (elemento -> ( expressao ) .)
    ,               reduce using rule 73 (elemento -> ( expressao ) .)


state 115

    (39) expressao1 -> AND valor . expressao1
    (37) expressao1 -> . empty
    (38) expressao1 -> . OR valor expressao1
    (39) expressao1 -> . AND valor expressao1
    (40) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 87
    AND             shift and go to state 84
    error           shift and go to state 85
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 137
    empty                          shift and go to state 88

state 116

    (40) expressao1 -> error valor . expressao1
    (37) expressao1 -> . empty
    (38) expressao1 -> . OR valor expressao1
    (39) expressao1 -> . AND valor expressao1
    (40) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 87
    AND             shift and go to state 84
    error           shift and go to state 85
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 138
    empty                          shift and go to state 88

state 117

    (38) expressao1 -> OR valor . expressao1
    (37) expressao1 -> . empty
    (38) expressao1 -> . OR valor expressao1
    (39) expressao1 -> . AND valor expressao1
    (40) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 87
    AND             shift and go to state 84
    error           shift and go to state 85
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 139
    empty                          shift and go to state 88

state 118

    (59) aritmetica1 -> + termo . aritmetica1
    (58) aritmetica1 -> . empty
    (59) aritmetica1 -> . + termo aritmetica1
    (60) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 90
    -               shift and go to state 91
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 140
    empty                          shift and go to state 92

state 119

    (60) aritmetica1 -> - termo . aritmetica1
    (58) aritmetica1 -> . empty
    (59) aritmetica1 -> . + termo aritmetica1
    (60) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 90
    -               shift and go to state 91
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 141
    empty                          shift and go to state 92

state 120

    (68) fator1 -> SIM_POT elemento . fator1
    (67) fator1 -> . empty
    (68) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 94
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 142
    empty                          shift and go to state 95

state 121

    (77) elemento -> error expressao error .

    SIM_POT         reduce using rule 77 (elemento -> error expressao error .)
    *               reduce using rule 77 (elemento -> error expressao error .)
    /               reduce using rule 77 (elemento -> error expressao error .)
    %               reduce using rule 77 (elemento -> error expressao error .)
    +               reduce using rule 77 (elemento -> error expressao error .)
    -               reduce using rule 77 (elemento -> error expressao error .)
    SIM_EQ          reduce using rule 77 (elemento -> error expressao error .)
    SIM_DIF         reduce using rule 77 (elemento -> error expressao error .)
    <               reduce using rule 77 (elemento -> error expressao error .)
    SIM_LE          reduce using rule 77 (elemento -> error expressao error .)
    >               reduce using rule 77 (elemento -> error expressao error .)
    SIM_GE          reduce using rule 77 (elemento -> error expressao error .)
    error           reduce using rule 77 (elemento -> error expressao error .)
    OR              reduce using rule 77 (elemento -> error expressao error .)
    AND             reduce using rule 77 (elemento -> error expressao error .)
    :               reduce using rule 77 (elemento -> error expressao error .)
    )               reduce using rule 77 (elemento -> error expressao error .)
    ;               reduce using rule 77 (elemento -> error expressao error .)
    ,               reduce using rule 77 (elemento -> error expressao error .)


state 122

    (21) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 21 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 123

    (22) cmdentrada -> INPUT ( listaidenti ) . ;
    (25) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 144
    error           shift and go to state 143


state 124

    (23) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 145


state 125

    (24) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 146


state 126

    (30) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 147
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 127

    (18) listaexp -> expressao listaexp1 .

    )               reduce using rule 18 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 18 (listaexp -> expressao listaexp1 .)


state 128

    (20) listaexp1 -> empty .

    )               reduce using rule 20 (listaexp1 -> empty .)
    error           reduce using rule 20 (listaexp1 -> empty .)


state 129

    (19) listaexp1 -> , . listaexp
    (18) listaexp -> . expressao listaexp1
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 105
    listaexp                       shift and go to state 148
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 130

    (26) cmdsaida -> OUTPUT ( listaexp ) . ;
    (29) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 150
    error           shift and go to state 149


state 131

    (27) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 151


state 132

    (28) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 152


state 133

    (35) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;

    ]               shift and go to state 153


state 134

    (65) termo1 -> % fator termo1 .

    +               reduce using rule 65 (termo1 -> % fator termo1 .)
    -               reduce using rule 65 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 65 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 65 (termo1 -> % fator termo1 .)
    <               reduce using rule 65 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 65 (termo1 -> % fator termo1 .)
    >               reduce using rule 65 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 65 (termo1 -> % fator termo1 .)
    error           reduce using rule 65 (termo1 -> % fator termo1 .)
    OR              reduce using rule 65 (termo1 -> % fator termo1 .)
    AND             reduce using rule 65 (termo1 -> % fator termo1 .)
    :               reduce using rule 65 (termo1 -> % fator termo1 .)
    )               reduce using rule 65 (termo1 -> % fator termo1 .)
    ;               reduce using rule 65 (termo1 -> % fator termo1 .)
    ,               reduce using rule 65 (termo1 -> % fator termo1 .)


state 135

    (63) termo1 -> * fator termo1 .

    +               reduce using rule 63 (termo1 -> * fator termo1 .)
    -               reduce using rule 63 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 63 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 63 (termo1 -> * fator termo1 .)
    <               reduce using rule 63 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 63 (termo1 -> * fator termo1 .)
    >               reduce using rule 63 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 63 (termo1 -> * fator termo1 .)
    error           reduce using rule 63 (termo1 -> * fator termo1 .)
    OR              reduce using rule 63 (termo1 -> * fator termo1 .)
    AND             reduce using rule 63 (termo1 -> * fator termo1 .)
    :               reduce using rule 63 (termo1 -> * fator termo1 .)
    )               reduce using rule 63 (termo1 -> * fator termo1 .)
    ;               reduce using rule 63 (termo1 -> * fator termo1 .)
    ,               reduce using rule 63 (termo1 -> * fator termo1 .)


state 136

    (64) termo1 -> / fator termo1 .

    +               reduce using rule 64 (termo1 -> / fator termo1 .)
    -               reduce using rule 64 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 64 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 64 (termo1 -> / fator termo1 .)
    <               reduce using rule 64 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 64 (termo1 -> / fator termo1 .)
    >               reduce using rule 64 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 64 (termo1 -> / fator termo1 .)
    error           reduce using rule 64 (termo1 -> / fator termo1 .)
    OR              reduce using rule 64 (termo1 -> / fator termo1 .)
    AND             reduce using rule 64 (termo1 -> / fator termo1 .)
    :               reduce using rule 64 (termo1 -> / fator termo1 .)
    )               reduce using rule 64 (termo1 -> / fator termo1 .)
    ;               reduce using rule 64 (termo1 -> / fator termo1 .)
    ,               reduce using rule 64 (termo1 -> / fator termo1 .)


state 137

    (39) expressao1 -> AND valor expressao1 .

    error           reduce using rule 39 (expressao1 -> AND valor expressao1 .)
    :               reduce using rule 39 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 39 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 39 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 39 (expressao1 -> AND valor expressao1 .)


state 138

    (40) expressao1 -> error valor expressao1 .

    error           reduce using rule 40 (expressao1 -> error valor expressao1 .)
    :               reduce using rule 40 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 40 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 40 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 40 (expressao1 -> error valor expressao1 .)


state 139

    (38) expressao1 -> OR valor expressao1 .

    error           reduce using rule 38 (expressao1 -> OR valor expressao1 .)
    :               reduce using rule 38 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 38 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 38 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 38 (expressao1 -> OR valor expressao1 .)


state 140

    (59) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 59 (aritmetica1 -> + termo aritmetica1 .)


state 141

    (60) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 60 (aritmetica1 -> - termo aritmetica1 .)


state 142

    (68) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 68 (fator1 -> SIM_POT elemento fator1 .)


state 143

    (25) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) error .)


state 144

    (22) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 22 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 145

    (23) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 23 (cmdentrada -> INPUT ( listaidenti error ; .)


state 146

    (24) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 24 (cmdentrada -> INPUT error listaidenti ) ; .)


state 147

    (30) cmdselecao -> IF expressao : [ listacmd . ] elif else ;

    ]               shift and go to state 154


state 148

    (19) listaexp1 -> , listaexp .

    )               reduce using rule 19 (listaexp1 -> , listaexp .)
    error           reduce using rule 19 (listaexp1 -> , listaexp .)


state 149

    (29) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 150

    (26) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 26 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 151

    (27) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 27 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 152

    (28) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 28 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 153

    (35) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (33) else -> . empty
    (34) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 155
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 157
    else                           shift and go to state 156

state 154

    (30) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (31) elif -> . empty
    (32) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 159
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 158
    empty                          shift and go to state 160

state 155

    (34) else -> ELSE . : [ listacmd ]

    :               shift and go to state 161


state 156

    (35) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;

    ;               shift and go to state 162


state 157

    (33) else -> empty .

    ;               reduce using rule 33 (else -> empty .)


state 158

    (30) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (33) else -> . empty
    (34) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 155
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 157
    else                           shift and go to state 163

state 159

    (32) elif -> ELIF . expressao : [ listacmd ] elif
    (36) expressao -> . valor expressao1
    (41) valor -> . relacional
    (42) valor -> . TRUE
    (43) valor -> . FALSE
    (44) valor -> . NOT valor
    (45) valor -> . error
    (46) valor -> . error valor
    (47) relacional -> . aritmetica relacional1
    (57) aritmetica -> . termo aritmetica1
    (61) termo -> . fator termo1
    (66) fator -> . elemento fator1
    (69) elemento -> . ID
    (70) elemento -> . INTEIRO
    (71) elemento -> . REAL
    (72) elemento -> . LITERAL
    (73) elemento -> . ( expressao )
    (74) elemento -> . + elemento
    (75) elemento -> . - elemento
    (76) elemento -> . error
    (77) elemento -> . error expressao error
    (78) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 164
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 160

    (31) elif -> empty .

    ELSE            reduce using rule 31 (elif -> empty .)
    ;               reduce using rule 31 (elif -> empty .)


state 161

    (34) else -> ELSE : . [ listacmd ]

    [               shift and go to state 165


state 162

    (35) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 35 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 163

    (30) cmdselecao -> IF expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 166


state 164

    (32) elif -> ELIF expressao . : [ listacmd ] elif

    :               shift and go to state 167


state 165

    (34) else -> ELSE : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 168
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 166

    (30) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 30 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 167

    (32) elif -> ELIF expressao : . [ listacmd ] elif

    [               shift and go to state 169


state 168

    (34) else -> ELSE : [ listacmd . ]

    ]               shift and go to state 170


state 169

    (32) elif -> ELIF expressao : [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (21) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (22) cmdentrada -> . INPUT ( listaidenti ) ;
    (23) cmdentrada -> . INPUT ( listaidenti error ;
    (24) cmdentrada -> . INPUT error listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti ) error
    (26) cmdsaida -> . OUTPUT ( listaexp ) ;
    (27) cmdsaida -> . OUTPUT ( listaexp error ;
    (28) cmdsaida -> . OUTPUT error listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp ) error
    (30) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (35) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 171
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 170

    (34) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 34 (else -> ELSE : [ listacmd ] .)


state 171

    (32) elif -> ELIF expressao : [ listacmd . ] elif

    ]               shift and go to state 172


state 172

    (32) elif -> ELIF expressao : [ listacmd ] . elif
    (31) elif -> . empty
    (32) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 159
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 173
    empty                          shift and go to state 160

state 173

    (32) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 32 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 32 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 36 resolved as shift
WARNING: shift/reduce conflict for error in state 38 resolved as shift
WARNING: shift/reduce conflict for error in state 45 resolved as shift
WARNING: shift/reduce conflict for + in state 45 resolved as shift
WARNING: shift/reduce conflict for - in state 45 resolved as shift
WARNING: shift/reduce conflict for + in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 64 resolved as shift
WARNING: shift/reduce conflict for error in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 97 resolved as shift
WARNING: shift/reduce conflict for AND in state 97 resolved as shift
WARNING: shift/reduce conflict for error in state 97 resolved as shift
WARNING: shift/reduce conflict for error in state 97 resolved as shift
WARNING: shift/reduce conflict for SIM_POT in state 98 resolved as shift
WARNING: shift/reduce conflict for + in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 115 resolved as shift
WARNING: shift/reduce conflict for error in state 116 resolved as shift
WARNING: shift/reduce conflict for error in state 117 resolved as shift
WARNING: reduce/reduce conflict in state 45 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 45
WARNING: reduce/reduce conflict in state 98 resolved using rule (empty -> <empty>)
WARNING: rejected rule (elemento -> error elemento) in state 98
WARNING: reduce/reduce conflict in state 108 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 108
WARNING: Rule (elemento -> error elemento) is never reduced
