Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     programa -> error ID : [ listacmd ]
Rule 3     programa -> DEF ID error [ listacmd ]
Rule 4     programa -> DEF ID : error listacmd ]
Rule 5     programa -> DEF ID : [ listacmd error
Rule 6     empty -> <empty>
Rule 7     listacmd -> comando listacmd1
Rule 8     listacmd1 -> empty
Rule 9     listacmd1 -> listacmd
Rule 10    comando -> cmdatribui
Rule 11    comando -> cmdentrada
Rule 12    comando -> cmdsaida
Rule 13    comando -> cmdselecao
Rule 14    comando -> cmdrepeticao
Rule 15    listaidenti -> ID listaindenti1
Rule 16    listaindenti1 -> empty
Rule 17    listaindenti1 -> , listaidenti
Rule 18    listaindenti1 -> error listaidenti
Rule 19    listaexp -> expressao listaexp1
Rule 20    listaexp1 -> , listaexp
Rule 21    listaexp1 -> empty
Rule 22    listaexp1 -> error listaexp
Rule 23    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 24    cmdatribui -> listaidenti SIM_ATTR expressao error
Rule 25    cmdentrada -> INPUT ( listaidenti ) ;
Rule 26    cmdentrada -> INPUT ( listaidenti error ;
Rule 27    cmdentrada -> INPUT error listaidenti ) ;
Rule 28    cmdentrada -> INPUT ( listaidenti ) error
Rule 29    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 30    cmdsaida -> OUTPUT ( listaexp error ;
Rule 31    cmdsaida -> OUTPUT error listaexp ) ;
Rule 32    cmdsaida -> OUTPUT ( listaexp ) error
Rule 33    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 34    cmdselecao -> error expressao : [ listacmd ] elif else ;
Rule 35    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 36    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 37    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 38    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 39    elif -> empty
Rule 40    elif -> ELIF expressao : [ listacmd ] elif
Rule 41    else -> empty
Rule 42    else -> ELSE : [ listacmd ]
Rule 43    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 44    expressao -> valor expressao1
Rule 45    expressao1 -> empty
Rule 46    expressao1 -> OR valor expressao1
Rule 47    expressao1 -> AND valor expressao1
Rule 48    expressao1 -> error valor expressao1
Rule 49    valor -> relacional
Rule 50    valor -> TRUE
Rule 51    valor -> FALSE
Rule 52    valor -> NOT valor
Rule 53    valor -> error
Rule 54    valor -> error valor
Rule 55    relacional -> aritmetica relacional1
Rule 56    relacional1 -> operador aritmetica
Rule 57    relacional1 -> empty
Rule 58    operador -> SIM_EQ
Rule 59    operador -> SIM_DIF
Rule 60    operador -> <
Rule 61    operador -> SIM_LE
Rule 62    operador -> >
Rule 63    operador -> SIM_GE
Rule 64    operador -> error
Rule 65    aritmetica -> termo aritmetica1
Rule 66    aritmetica1 -> empty
Rule 67    aritmetica1 -> + termo aritmetica1
Rule 68    aritmetica1 -> - termo aritmetica1
Rule 69    termo -> fator termo1
Rule 70    termo1 -> empty
Rule 71    termo1 -> * fator termo1
Rule 72    termo1 -> / fator termo1
Rule 73    termo1 -> % fator termo1
Rule 74    fator -> elemento fator1
Rule 75    fator1 -> empty
Rule 76    fator1 -> SIM_POT elemento fator1
Rule 77    elemento -> ID
Rule 78    elemento -> INTEIRO
Rule 79    elemento -> REAL
Rule 80    elemento -> LITERAL
Rule 81    elemento -> ( expressao )
Rule 82    elemento -> + elemento
Rule 83    elemento -> - elemento
Rule 84    elemento -> error
Rule 85    elemento -> error expressao error
Rule 86    elemento -> error elemento

Terminals, with rules where they appear

%                    : 73
(                    : 25 26 28 29 30 32 81
)                    : 25 27 28 29 31 32 81
*                    : 71
+                    : 67 82
,                    : 17 20
-                    : 68 83
/                    : 72
:                    : 1 2 4 5 33 34 36 37 38 40 42 43
;                    : 23 25 26 27 29 30 31 33 34 35 36 37 43
<                    : 60
>                    : 62
AND                  : 47
BINARIO              : 
DEF                  : 1 3 4 5
ELIF                 : 40
ELSE                 : 42
FALSE                : 51
HEXADECIMAL          : 
ID                   : 1 2 3 4 5 15 77
IF                   : 33 35 36 37 38
INPUT                : 25 26 27 28
INTEIRO              : 78
LITERAL              : 80
NOT                  : 52
OCTAL                : 
OR                   : 46
OUTPUT               : 29 30 31 32
REAL                 : 79
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 23 24
SIM_DIF              : 59
SIM_EQ               : 58
SIM_GE               : 63
SIM_LE               : 61
SIM_POT              : 76
TRUE                 : 50
WHILE                : 43
[                    : 1 2 3 5 33 34 35 37 38 40 42 43
]                    : 1 2 3 4 33 34 35 36 38 40 42 43
error                : 2 3 4 5 18 22 24 26 27 28 30 31 32 34 35 36 37 38 48 53 54 64 84 85 85 86

Nonterminals, with rules where they appear

aritmetica           : 55 56
aritmetica1          : 65 67 68
cmdatribui           : 10
cmdentrada           : 11
cmdrepeticao         : 14
cmdsaida             : 12
cmdselecao           : 13
comando              : 7
elemento             : 74 76 82 83 86
elif                 : 33 34 35 36 37 38 40
else                 : 33 34 35 36 37 38 43
empty                : 8 16 21 39 41 45 57 66 70 75
expressao            : 19 23 24 33 34 35 36 37 38 40 43 81 85
expressao1           : 44 46 47 48
fator                : 69 71 72 73
fator1               : 74 76
listacmd             : 1 2 3 4 5 9 33 34 35 36 37 38 40 42 43
listacmd1            : 7
listaexp             : 20 22 29 30 31 32
listaexp1            : 19
listaidenti          : 17 18 23 24 25 26 27 28
listaindenti1        : 15
operador             : 56
programa             : 0
relacional           : 49
relacional1          : 55
termo                : 65 67 68
termo1               : 69 71 72 73
valor                : 44 46 47 48 52 54

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]
    (2) programa -> . error ID : [ listacmd ]
    (3) programa -> . DEF ID error [ listacmd ]
    (4) programa -> . DEF ID : error listacmd ]
    (5) programa -> . DEF ID : [ listacmd error

    DEF             shift and go to state 3
    error           shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> error . ID : [ listacmd ]

    ID              shift and go to state 4


state 3

    (1) programa -> DEF . ID : [ listacmd ]
    (3) programa -> DEF . ID error [ listacmd ]
    (4) programa -> DEF . ID : error listacmd ]
    (5) programa -> DEF . ID : [ listacmd error

    ID              shift and go to state 5


state 4

    (2) programa -> error ID . : [ listacmd ]

    :               shift and go to state 6


state 5

    (1) programa -> DEF ID . : [ listacmd ]
    (3) programa -> DEF ID . error [ listacmd ]
    (4) programa -> DEF ID . : error listacmd ]
    (5) programa -> DEF ID . : [ listacmd error

    :               shift and go to state 8
    error           shift and go to state 7


state 6

    (2) programa -> error ID : . [ listacmd ]

    [               shift and go to state 9


state 7

    (3) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 10


state 8

    (1) programa -> DEF ID : . [ listacmd ]
    (4) programa -> DEF ID : . error listacmd ]
    (5) programa -> DEF ID : . [ listacmd error

    [               shift and go to state 12
    error           shift and go to state 11


state 9

    (2) programa -> error ID : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 16
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 10

    (3) programa -> DEF ID error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 27
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 11

    (4) programa -> DEF ID : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 28
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 12

    (1) programa -> DEF ID : [ . listacmd ]
    (5) programa -> DEF ID : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 29
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 13

    (13) comando -> cmdselecao .

    INPUT           reduce using rule 13 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 13 (comando -> cmdselecao .)
    IF              reduce using rule 13 (comando -> cmdselecao .)
    error           reduce using rule 13 (comando -> cmdselecao .)
    WHILE           reduce using rule 13 (comando -> cmdselecao .)
    ID              reduce using rule 13 (comando -> cmdselecao .)
    ]               reduce using rule 13 (comando -> cmdselecao .)


state 14

    (11) comando -> cmdentrada .

    INPUT           reduce using rule 11 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 11 (comando -> cmdentrada .)
    IF              reduce using rule 11 (comando -> cmdentrada .)
    error           reduce using rule 11 (comando -> cmdentrada .)
    WHILE           reduce using rule 11 (comando -> cmdentrada .)
    ID              reduce using rule 11 (comando -> cmdentrada .)
    ]               reduce using rule 11 (comando -> cmdentrada .)


state 15

    (43) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 34
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 16

    (2) programa -> error ID : [ listacmd . ]

    ]               shift and go to state 48


state 17

    (10) comando -> cmdatribui .

    INPUT           reduce using rule 10 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 10 (comando -> cmdatribui .)
    IF              reduce using rule 10 (comando -> cmdatribui .)
    error           reduce using rule 10 (comando -> cmdatribui .)
    WHILE           reduce using rule 10 (comando -> cmdatribui .)
    ID              reduce using rule 10 (comando -> cmdatribui .)
    ]               reduce using rule 10 (comando -> cmdatribui .)


state 18

    (12) comando -> cmdsaida .

    INPUT           reduce using rule 12 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 12 (comando -> cmdsaida .)
    IF              reduce using rule 12 (comando -> cmdsaida .)
    error           reduce using rule 12 (comando -> cmdsaida .)
    WHILE           reduce using rule 12 (comando -> cmdsaida .)
    ID              reduce using rule 12 (comando -> cmdsaida .)
    ]               reduce using rule 12 (comando -> cmdsaida .)


state 19

    (23) cmdatribui -> listaidenti . SIM_ATTR expressao ;
    (24) cmdatribui -> listaidenti . SIM_ATTR expressao error

    SIM_ATTR        shift and go to state 49


state 20

    (34) cmdselecao -> error . expressao : [ listacmd ] elif else ;
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 50
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 21

    (25) cmdentrada -> INPUT . ( listaidenti ) ;
    (26) cmdentrada -> INPUT . ( listaidenti error ;
    (27) cmdentrada -> INPUT . error listaidenti ) ;
    (28) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 51
    error           shift and go to state 52


state 22

    (15) listaidenti -> ID . listaindenti1
    (16) listaindenti1 -> . empty
    (17) listaindenti1 -> . , listaidenti
    (18) listaindenti1 -> . error listaidenti
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 53
    error           shift and go to state 54
    SIM_ATTR        reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaindenti1                  shift and go to state 55
    empty                          shift and go to state 56

state 23

    (33) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (37) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (38) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 57
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 24

    (14) comando -> cmdrepeticao .

    INPUT           reduce using rule 14 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 14 (comando -> cmdrepeticao .)
    IF              reduce using rule 14 (comando -> cmdrepeticao .)
    error           reduce using rule 14 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 14 (comando -> cmdrepeticao .)
    ID              reduce using rule 14 (comando -> cmdrepeticao .)
    ]               reduce using rule 14 (comando -> cmdrepeticao .)


state 25

    (7) listacmd -> comando . listacmd1
    (8) listacmd1 -> . empty
    (9) listacmd1 -> . listacmd
    (6) empty -> .
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

  ! shift/reduce conflict for error resolved as shift
    ]               reduce using rule 6 (empty -> .)
    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    listacmd1                      shift and go to state 59
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 58
    cmdsaida                       shift and go to state 18
    empty                          shift and go to state 60
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 26

    (29) cmdsaida -> OUTPUT . ( listaexp ) ;
    (30) cmdsaida -> OUTPUT . ( listaexp error ;
    (31) cmdsaida -> OUTPUT . error listaexp ) ;
    (32) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 61
    error           shift and go to state 62


state 27

    (3) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 63


state 28

    (4) programa -> DEF ID : error listacmd . ]

    ]               shift and go to state 64


state 29

    (1) programa -> DEF ID : [ listacmd . ]
    (5) programa -> DEF ID : [ listacmd . error

    ]               shift and go to state 66
    error           shift and go to state 65


state 30

    (79) elemento -> REAL .

    SIM_POT         reduce using rule 79 (elemento -> REAL .)
    *               reduce using rule 79 (elemento -> REAL .)
    /               reduce using rule 79 (elemento -> REAL .)
    %               reduce using rule 79 (elemento -> REAL .)
    +               reduce using rule 79 (elemento -> REAL .)
    -               reduce using rule 79 (elemento -> REAL .)
    SIM_EQ          reduce using rule 79 (elemento -> REAL .)
    SIM_DIF         reduce using rule 79 (elemento -> REAL .)
    <               reduce using rule 79 (elemento -> REAL .)
    SIM_LE          reduce using rule 79 (elemento -> REAL .)
    >               reduce using rule 79 (elemento -> REAL .)
    SIM_GE          reduce using rule 79 (elemento -> REAL .)
    error           reduce using rule 79 (elemento -> REAL .)
    OR              reduce using rule 79 (elemento -> REAL .)
    AND             reduce using rule 79 (elemento -> REAL .)
    :               reduce using rule 79 (elemento -> REAL .)
    )               reduce using rule 79 (elemento -> REAL .)
    ;               reduce using rule 79 (elemento -> REAL .)
    ,               reduce using rule 79 (elemento -> REAL .)


state 31

    (83) elemento -> - . elemento
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 68

state 32

    (50) valor -> TRUE .

    OR              reduce using rule 50 (valor -> TRUE .)
    AND             reduce using rule 50 (valor -> TRUE .)
    error           reduce using rule 50 (valor -> TRUE .)
    :               reduce using rule 50 (valor -> TRUE .)
    )               reduce using rule 50 (valor -> TRUE .)
    ;               reduce using rule 50 (valor -> TRUE .)
    ,               reduce using rule 50 (valor -> TRUE .)


state 33

    (78) elemento -> INTEIRO .

    SIM_POT         reduce using rule 78 (elemento -> INTEIRO .)
    *               reduce using rule 78 (elemento -> INTEIRO .)
    /               reduce using rule 78 (elemento -> INTEIRO .)
    %               reduce using rule 78 (elemento -> INTEIRO .)
    +               reduce using rule 78 (elemento -> INTEIRO .)
    -               reduce using rule 78 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 78 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 78 (elemento -> INTEIRO .)
    <               reduce using rule 78 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 78 (elemento -> INTEIRO .)
    >               reduce using rule 78 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 78 (elemento -> INTEIRO .)
    error           reduce using rule 78 (elemento -> INTEIRO .)
    OR              reduce using rule 78 (elemento -> INTEIRO .)
    AND             reduce using rule 78 (elemento -> INTEIRO .)
    :               reduce using rule 78 (elemento -> INTEIRO .)
    )               reduce using rule 78 (elemento -> INTEIRO .)
    ;               reduce using rule 78 (elemento -> INTEIRO .)
    ,               reduce using rule 78 (elemento -> INTEIRO .)


state 34

    (43) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;

    :               shift and go to state 69


state 35

    (82) elemento -> + . elemento
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 70

state 36

    (69) termo -> fator . termo1
    (70) termo1 -> . empty
    (71) termo1 -> . * fator termo1
    (72) termo1 -> . / fator termo1
    (73) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 73
    /               shift and go to state 74
    %               shift and go to state 72
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 71
    empty                          shift and go to state 75

state 37

    (55) relacional -> aritmetica . relacional1
    (56) relacional1 -> . operador aritmetica
    (57) relacional1 -> . empty
    (58) operador -> . SIM_EQ
    (59) operador -> . SIM_DIF
    (60) operador -> . <
    (61) operador -> . SIM_LE
    (62) operador -> . >
    (63) operador -> . SIM_GE
    (64) operador -> . error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    SIM_EQ          shift and go to state 76
    SIM_DIF         shift and go to state 79
    <               shift and go to state 83
    SIM_LE          shift and go to state 85
    >               shift and go to state 82
    SIM_GE          shift and go to state 78
    error           shift and go to state 80
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    relacional1                    shift and go to state 81
    operador                       shift and go to state 77
    empty                          shift and go to state 84

state 38

    (81) elemento -> ( . expressao )
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 86
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 39

    (44) expressao -> valor . expressao1
    (45) expressao1 -> . empty
    (46) expressao1 -> . OR valor expressao1
    (47) expressao1 -> . AND valor expressao1
    (48) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 90
    AND             shift and go to state 87
    error           shift and go to state 88
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 89
    empty                          shift and go to state 91

state 40

    (80) elemento -> LITERAL .

    SIM_POT         reduce using rule 80 (elemento -> LITERAL .)
    *               reduce using rule 80 (elemento -> LITERAL .)
    /               reduce using rule 80 (elemento -> LITERAL .)
    %               reduce using rule 80 (elemento -> LITERAL .)
    +               reduce using rule 80 (elemento -> LITERAL .)
    -               reduce using rule 80 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 80 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 80 (elemento -> LITERAL .)
    <               reduce using rule 80 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 80 (elemento -> LITERAL .)
    >               reduce using rule 80 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 80 (elemento -> LITERAL .)
    error           reduce using rule 80 (elemento -> LITERAL .)
    OR              reduce using rule 80 (elemento -> LITERAL .)
    AND             reduce using rule 80 (elemento -> LITERAL .)
    :               reduce using rule 80 (elemento -> LITERAL .)
    )               reduce using rule 80 (elemento -> LITERAL .)
    ;               reduce using rule 80 (elemento -> LITERAL .)
    ,               reduce using rule 80 (elemento -> LITERAL .)


state 41

    (65) aritmetica -> termo . aritmetica1
    (66) aritmetica1 -> . empty
    (67) aritmetica1 -> . + termo aritmetica1
    (68) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 93
    -               shift and go to state 94
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 92
    empty                          shift and go to state 95

state 42

    (49) valor -> relacional .

    OR              reduce using rule 49 (valor -> relacional .)
    AND             reduce using rule 49 (valor -> relacional .)
    error           reduce using rule 49 (valor -> relacional .)
    :               reduce using rule 49 (valor -> relacional .)
    )               reduce using rule 49 (valor -> relacional .)
    ;               reduce using rule 49 (valor -> relacional .)
    ,               reduce using rule 49 (valor -> relacional .)


state 43

    (77) elemento -> ID .

    SIM_POT         reduce using rule 77 (elemento -> ID .)
    *               reduce using rule 77 (elemento -> ID .)
    /               reduce using rule 77 (elemento -> ID .)
    %               reduce using rule 77 (elemento -> ID .)
    +               reduce using rule 77 (elemento -> ID .)
    -               reduce using rule 77 (elemento -> ID .)
    SIM_EQ          reduce using rule 77 (elemento -> ID .)
    SIM_DIF         reduce using rule 77 (elemento -> ID .)
    <               reduce using rule 77 (elemento -> ID .)
    SIM_LE          reduce using rule 77 (elemento -> ID .)
    >               reduce using rule 77 (elemento -> ID .)
    SIM_GE          reduce using rule 77 (elemento -> ID .)
    error           reduce using rule 77 (elemento -> ID .)
    OR              reduce using rule 77 (elemento -> ID .)
    AND             reduce using rule 77 (elemento -> ID .)
    :               reduce using rule 77 (elemento -> ID .)
    )               reduce using rule 77 (elemento -> ID .)
    ;               reduce using rule 77 (elemento -> ID .)
    ,               reduce using rule 77 (elemento -> ID .)


state 44

    (74) fator -> elemento . fator1
    (75) fator1 -> . empty
    (76) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 97
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 96
    empty                          shift and go to state 98

state 45

    (51) valor -> FALSE .

    OR              reduce using rule 51 (valor -> FALSE .)
    AND             reduce using rule 51 (valor -> FALSE .)
    error           reduce using rule 51 (valor -> FALSE .)
    :               reduce using rule 51 (valor -> FALSE .)
    )               reduce using rule 51 (valor -> FALSE .)
    ;               reduce using rule 51 (valor -> FALSE .)
    ,               reduce using rule 51 (valor -> FALSE .)


state 46

    (53) valor -> error .
    (54) valor -> error . valor
    (84) elemento -> error .
    (85) elemento -> error . expressao error
    (86) elemento -> error . elemento
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (44) expressao -> . valor expressao1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1

  ! reduce/reduce conflict for error resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for OR resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for : resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for ) resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for ; resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for , resolved using rule 53 (valor -> error .)
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    OR              reduce using rule 53 (valor -> error .)
    AND             reduce using rule 53 (valor -> error .)
    :               reduce using rule 53 (valor -> error .)
    )               reduce using rule 53 (valor -> error .)
    ;               reduce using rule 53 (valor -> error .)
    ,               reduce using rule 53 (valor -> error .)
    SIM_POT         reduce using rule 84 (elemento -> error .)
    *               reduce using rule 84 (elemento -> error .)
    /               reduce using rule 84 (elemento -> error .)
    %               reduce using rule 84 (elemento -> error .)
    SIM_EQ          reduce using rule 84 (elemento -> error .)
    SIM_DIF         reduce using rule 84 (elemento -> error .)
    <               reduce using rule 84 (elemento -> error .)
    SIM_LE          reduce using rule 84 (elemento -> error .)
    >               reduce using rule 84 (elemento -> error .)
    SIM_GE          reduce using rule 84 (elemento -> error .)
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

  ! error           [ reduce using rule 53 (valor -> error .) ]
  ! +               [ reduce using rule 84 (elemento -> error .) ]
  ! -               [ reduce using rule 84 (elemento -> error .) ]
  ! error           [ reduce using rule 84 (elemento -> error .) ]
  ! OR              [ reduce using rule 84 (elemento -> error .) ]
  ! AND             [ reduce using rule 84 (elemento -> error .) ]
  ! :               [ reduce using rule 84 (elemento -> error .) ]
  ! )               [ reduce using rule 84 (elemento -> error .) ]
  ! ;               [ reduce using rule 84 (elemento -> error .) ]
  ! ,               [ reduce using rule 84 (elemento -> error .) ]

    expressao                      shift and go to state 99
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 100
    relacional                     shift and go to state 42
    elemento                       shift and go to state 101

state 47

    (52) valor -> NOT . valor
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 102
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 48

    (2) programa -> error ID : [ listacmd ] .

    $end            reduce using rule 2 (programa -> error ID : [ listacmd ] .)


state 49

    (23) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (24) cmdatribui -> listaidenti SIM_ATTR . expressao error
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 103
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 50

    (34) cmdselecao -> error expressao . : [ listacmd ] elif else ;

    :               shift and go to state 104


state 51

    (25) cmdentrada -> INPUT ( . listaidenti ) ;
    (26) cmdentrada -> INPUT ( . listaidenti error ;
    (28) cmdentrada -> INPUT ( . listaidenti ) error
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 105

state 52

    (27) cmdentrada -> INPUT error . listaidenti ) ;
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 106

state 53

    (17) listaindenti1 -> , . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 107

state 54

    (18) listaindenti1 -> error . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 22

    listaidenti                    shift and go to state 108

state 55

    (15) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 15 (listaidenti -> ID listaindenti1 .)


state 56

    (16) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 16 (listaindenti1 -> empty .)
    )               reduce using rule 16 (listaindenti1 -> empty .)
    error           reduce using rule 16 (listaindenti1 -> empty .)


state 57

    (33) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (35) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (36) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (37) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (38) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 110
    error           shift and go to state 109


state 58

    (9) listacmd1 -> listacmd .

    ]               reduce using rule 9 (listacmd1 -> listacmd .)
    error           reduce using rule 9 (listacmd1 -> listacmd .)


state 59

    (7) listacmd -> comando listacmd1 .

    ]               reduce using rule 7 (listacmd -> comando listacmd1 .)
    error           reduce using rule 7 (listacmd -> comando listacmd1 .)


state 60

    (8) listacmd1 -> empty .

    ]               reduce using rule 8 (listacmd1 -> empty .)
    error           reduce using rule 8 (listacmd1 -> empty .)


state 61

    (29) cmdsaida -> OUTPUT ( . listaexp ) ;
    (30) cmdsaida -> OUTPUT ( . listaexp error ;
    (32) cmdsaida -> OUTPUT ( . listaexp ) error
    (19) listaexp -> . expressao listaexp1
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 111
    listaexp                       shift and go to state 112
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 62

    (31) cmdsaida -> OUTPUT error . listaexp ) ;
    (19) listaexp -> . expressao listaexp1
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 111
    listaexp                       shift and go to state 113
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 63

    (3) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 3 (programa -> DEF ID error [ listacmd ] .)


state 64

    (4) programa -> DEF ID : error listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID : error listacmd ] .)


state 65

    (5) programa -> DEF ID : [ listacmd error .

    $end            reduce using rule 5 (programa -> DEF ID : [ listacmd error .)


state 66

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 67

    (84) elemento -> error .
    (85) elemento -> error . expressao error
    (86) elemento -> error . elemento
    (44) expressao -> . valor expressao1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 84 (elemento -> error .)
    *               reduce using rule 84 (elemento -> error .)
    /               reduce using rule 84 (elemento -> error .)
    %               reduce using rule 84 (elemento -> error .)
    SIM_EQ          reduce using rule 84 (elemento -> error .)
    SIM_DIF         reduce using rule 84 (elemento -> error .)
    <               reduce using rule 84 (elemento -> error .)
    SIM_LE          reduce using rule 84 (elemento -> error .)
    >               reduce using rule 84 (elemento -> error .)
    SIM_GE          reduce using rule 84 (elemento -> error .)
    OR              reduce using rule 84 (elemento -> error .)
    AND             reduce using rule 84 (elemento -> error .)
    :               reduce using rule 84 (elemento -> error .)
    )               reduce using rule 84 (elemento -> error .)
    ;               reduce using rule 84 (elemento -> error .)
    ,               reduce using rule 84 (elemento -> error .)
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 114
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47

  ! +               [ reduce using rule 84 (elemento -> error .) ]
  ! -               [ reduce using rule 84 (elemento -> error .) ]
  ! error           [ reduce using rule 84 (elemento -> error .) ]

    expressao                      shift and go to state 99
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 101

state 68

    (83) elemento -> - elemento .

    SIM_POT         reduce using rule 83 (elemento -> - elemento .)
    *               reduce using rule 83 (elemento -> - elemento .)
    /               reduce using rule 83 (elemento -> - elemento .)
    %               reduce using rule 83 (elemento -> - elemento .)
    +               reduce using rule 83 (elemento -> - elemento .)
    -               reduce using rule 83 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 83 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 83 (elemento -> - elemento .)
    <               reduce using rule 83 (elemento -> - elemento .)
    SIM_LE          reduce using rule 83 (elemento -> - elemento .)
    >               reduce using rule 83 (elemento -> - elemento .)
    SIM_GE          reduce using rule 83 (elemento -> - elemento .)
    error           reduce using rule 83 (elemento -> - elemento .)
    OR              reduce using rule 83 (elemento -> - elemento .)
    AND             reduce using rule 83 (elemento -> - elemento .)
    :               reduce using rule 83 (elemento -> - elemento .)
    )               reduce using rule 83 (elemento -> - elemento .)
    ;               reduce using rule 83 (elemento -> - elemento .)
    ,               reduce using rule 83 (elemento -> - elemento .)


state 69

    (43) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;

    [               shift and go to state 115


state 70

    (82) elemento -> + elemento .

    SIM_POT         reduce using rule 82 (elemento -> + elemento .)
    *               reduce using rule 82 (elemento -> + elemento .)
    /               reduce using rule 82 (elemento -> + elemento .)
    %               reduce using rule 82 (elemento -> + elemento .)
    +               reduce using rule 82 (elemento -> + elemento .)
    -               reduce using rule 82 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 82 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 82 (elemento -> + elemento .)
    <               reduce using rule 82 (elemento -> + elemento .)
    SIM_LE          reduce using rule 82 (elemento -> + elemento .)
    >               reduce using rule 82 (elemento -> + elemento .)
    SIM_GE          reduce using rule 82 (elemento -> + elemento .)
    error           reduce using rule 82 (elemento -> + elemento .)
    OR              reduce using rule 82 (elemento -> + elemento .)
    AND             reduce using rule 82 (elemento -> + elemento .)
    :               reduce using rule 82 (elemento -> + elemento .)
    )               reduce using rule 82 (elemento -> + elemento .)
    ;               reduce using rule 82 (elemento -> + elemento .)
    ,               reduce using rule 82 (elemento -> + elemento .)


state 71

    (69) termo -> fator termo1 .

    +               reduce using rule 69 (termo -> fator termo1 .)
    -               reduce using rule 69 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 69 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 69 (termo -> fator termo1 .)
    <               reduce using rule 69 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 69 (termo -> fator termo1 .)
    >               reduce using rule 69 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 69 (termo -> fator termo1 .)
    error           reduce using rule 69 (termo -> fator termo1 .)
    OR              reduce using rule 69 (termo -> fator termo1 .)
    AND             reduce using rule 69 (termo -> fator termo1 .)
    :               reduce using rule 69 (termo -> fator termo1 .)
    )               reduce using rule 69 (termo -> fator termo1 .)
    ;               reduce using rule 69 (termo -> fator termo1 .)
    ,               reduce using rule 69 (termo -> fator termo1 .)


state 72

    (73) termo1 -> % . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 116

state 73

    (71) termo1 -> * . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 117

state 74

    (72) termo1 -> / . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 44
    fator                          shift and go to state 118

state 75

    (70) termo1 -> empty .

    +               reduce using rule 70 (termo1 -> empty .)
    -               reduce using rule 70 (termo1 -> empty .)
    SIM_EQ          reduce using rule 70 (termo1 -> empty .)
    SIM_DIF         reduce using rule 70 (termo1 -> empty .)
    <               reduce using rule 70 (termo1 -> empty .)
    SIM_LE          reduce using rule 70 (termo1 -> empty .)
    >               reduce using rule 70 (termo1 -> empty .)
    SIM_GE          reduce using rule 70 (termo1 -> empty .)
    error           reduce using rule 70 (termo1 -> empty .)
    OR              reduce using rule 70 (termo1 -> empty .)
    AND             reduce using rule 70 (termo1 -> empty .)
    :               reduce using rule 70 (termo1 -> empty .)
    )               reduce using rule 70 (termo1 -> empty .)
    ;               reduce using rule 70 (termo1 -> empty .)
    ,               reduce using rule 70 (termo1 -> empty .)


state 76

    (58) operador -> SIM_EQ .

    ID              reduce using rule 58 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 58 (operador -> SIM_EQ .)
    REAL            reduce using rule 58 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 58 (operador -> SIM_EQ .)
    (               reduce using rule 58 (operador -> SIM_EQ .)
    +               reduce using rule 58 (operador -> SIM_EQ .)
    -               reduce using rule 58 (operador -> SIM_EQ .)
    error           reduce using rule 58 (operador -> SIM_EQ .)


state 77

    (56) relacional1 -> operador . aritmetica
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    aritmetica                     shift and go to state 119
    termo                          shift and go to state 41
    elemento                       shift and go to state 44

state 78

    (63) operador -> SIM_GE .

    ID              reduce using rule 63 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 63 (operador -> SIM_GE .)
    REAL            reduce using rule 63 (operador -> SIM_GE .)
    LITERAL         reduce using rule 63 (operador -> SIM_GE .)
    (               reduce using rule 63 (operador -> SIM_GE .)
    +               reduce using rule 63 (operador -> SIM_GE .)
    -               reduce using rule 63 (operador -> SIM_GE .)
    error           reduce using rule 63 (operador -> SIM_GE .)


state 79

    (59) operador -> SIM_DIF .

    ID              reduce using rule 59 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 59 (operador -> SIM_DIF .)
    REAL            reduce using rule 59 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 59 (operador -> SIM_DIF .)
    (               reduce using rule 59 (operador -> SIM_DIF .)
    +               reduce using rule 59 (operador -> SIM_DIF .)
    -               reduce using rule 59 (operador -> SIM_DIF .)
    error           reduce using rule 59 (operador -> SIM_DIF .)


state 80

    (64) operador -> error .

    ID              reduce using rule 64 (operador -> error .)
    INTEIRO         reduce using rule 64 (operador -> error .)
    REAL            reduce using rule 64 (operador -> error .)
    LITERAL         reduce using rule 64 (operador -> error .)
    (               reduce using rule 64 (operador -> error .)
    +               reduce using rule 64 (operador -> error .)
    -               reduce using rule 64 (operador -> error .)
    error           reduce using rule 64 (operador -> error .)


state 81

    (55) relacional -> aritmetica relacional1 .

    OR              reduce using rule 55 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 55 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 55 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 55 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 55 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 55 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 55 (relacional -> aritmetica relacional1 .)


state 82

    (62) operador -> > .

    ID              reduce using rule 62 (operador -> > .)
    INTEIRO         reduce using rule 62 (operador -> > .)
    REAL            reduce using rule 62 (operador -> > .)
    LITERAL         reduce using rule 62 (operador -> > .)
    (               reduce using rule 62 (operador -> > .)
    +               reduce using rule 62 (operador -> > .)
    -               reduce using rule 62 (operador -> > .)
    error           reduce using rule 62 (operador -> > .)


state 83

    (60) operador -> < .

    ID              reduce using rule 60 (operador -> < .)
    INTEIRO         reduce using rule 60 (operador -> < .)
    REAL            reduce using rule 60 (operador -> < .)
    LITERAL         reduce using rule 60 (operador -> < .)
    (               reduce using rule 60 (operador -> < .)
    +               reduce using rule 60 (operador -> < .)
    -               reduce using rule 60 (operador -> < .)
    error           reduce using rule 60 (operador -> < .)


state 84

    (57) relacional1 -> empty .

    OR              reduce using rule 57 (relacional1 -> empty .)
    AND             reduce using rule 57 (relacional1 -> empty .)
    error           reduce using rule 57 (relacional1 -> empty .)
    :               reduce using rule 57 (relacional1 -> empty .)
    )               reduce using rule 57 (relacional1 -> empty .)
    ;               reduce using rule 57 (relacional1 -> empty .)
    ,               reduce using rule 57 (relacional1 -> empty .)


state 85

    (61) operador -> SIM_LE .

    ID              reduce using rule 61 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 61 (operador -> SIM_LE .)
    REAL            reduce using rule 61 (operador -> SIM_LE .)
    LITERAL         reduce using rule 61 (operador -> SIM_LE .)
    (               reduce using rule 61 (operador -> SIM_LE .)
    +               reduce using rule 61 (operador -> SIM_LE .)
    -               reduce using rule 61 (operador -> SIM_LE .)
    error           reduce using rule 61 (operador -> SIM_LE .)


state 86

    (81) elemento -> ( expressao . )

    )               shift and go to state 120


state 87

    (47) expressao1 -> AND . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 121
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 88

    (48) expressao1 -> error . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 122
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 89

    (44) expressao -> valor expressao1 .

    ;               reduce using rule 44 (expressao -> valor expressao1 .)
    error           reduce using rule 44 (expressao -> valor expressao1 .)
    ,               reduce using rule 44 (expressao -> valor expressao1 .)
    )               reduce using rule 44 (expressao -> valor expressao1 .)
    :               reduce using rule 44 (expressao -> valor expressao1 .)


state 90

    (46) expressao1 -> OR . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 123
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 91

    (45) expressao1 -> empty .

    :               reduce using rule 45 (expressao1 -> empty .)
    error           reduce using rule 45 (expressao1 -> empty .)
    )               reduce using rule 45 (expressao1 -> empty .)
    ;               reduce using rule 45 (expressao1 -> empty .)
    ,               reduce using rule 45 (expressao1 -> empty .)


state 92

    (65) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 65 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 65 (aritmetica -> termo aritmetica1 .)


state 93

    (67) aritmetica1 -> + . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    termo                          shift and go to state 124
    elemento                       shift and go to state 44

state 94

    (68) aritmetica1 -> - . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    fator                          shift and go to state 36
    termo                          shift and go to state 125
    elemento                       shift and go to state 44

state 95

    (66) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 66 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 66 (aritmetica1 -> empty .)
    <               reduce using rule 66 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 66 (aritmetica1 -> empty .)
    >               reduce using rule 66 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 66 (aritmetica1 -> empty .)
    error           reduce using rule 66 (aritmetica1 -> empty .)
    OR              reduce using rule 66 (aritmetica1 -> empty .)
    AND             reduce using rule 66 (aritmetica1 -> empty .)
    :               reduce using rule 66 (aritmetica1 -> empty .)
    )               reduce using rule 66 (aritmetica1 -> empty .)
    ;               reduce using rule 66 (aritmetica1 -> empty .)
    ,               reduce using rule 66 (aritmetica1 -> empty .)


state 96

    (74) fator -> elemento fator1 .

    *               reduce using rule 74 (fator -> elemento fator1 .)
    /               reduce using rule 74 (fator -> elemento fator1 .)
    %               reduce using rule 74 (fator -> elemento fator1 .)
    +               reduce using rule 74 (fator -> elemento fator1 .)
    -               reduce using rule 74 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 74 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 74 (fator -> elemento fator1 .)
    <               reduce using rule 74 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 74 (fator -> elemento fator1 .)
    >               reduce using rule 74 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 74 (fator -> elemento fator1 .)
    error           reduce using rule 74 (fator -> elemento fator1 .)
    OR              reduce using rule 74 (fator -> elemento fator1 .)
    AND             reduce using rule 74 (fator -> elemento fator1 .)
    ,               reduce using rule 74 (fator -> elemento fator1 .)
    )               reduce using rule 74 (fator -> elemento fator1 .)
    ;               reduce using rule 74 (fator -> elemento fator1 .)
    :               reduce using rule 74 (fator -> elemento fator1 .)


state 97

    (76) fator1 -> SIM_POT . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 67

    elemento                       shift and go to state 126

state 98

    (75) fator1 -> empty .

    *               reduce using rule 75 (fator1 -> empty .)
    /               reduce using rule 75 (fator1 -> empty .)
    %               reduce using rule 75 (fator1 -> empty .)
    +               reduce using rule 75 (fator1 -> empty .)
    -               reduce using rule 75 (fator1 -> empty .)
    SIM_EQ          reduce using rule 75 (fator1 -> empty .)
    SIM_DIF         reduce using rule 75 (fator1 -> empty .)
    <               reduce using rule 75 (fator1 -> empty .)
    SIM_LE          reduce using rule 75 (fator1 -> empty .)
    >               reduce using rule 75 (fator1 -> empty .)
    SIM_GE          reduce using rule 75 (fator1 -> empty .)
    error           reduce using rule 75 (fator1 -> empty .)
    OR              reduce using rule 75 (fator1 -> empty .)
    AND             reduce using rule 75 (fator1 -> empty .)
    :               reduce using rule 75 (fator1 -> empty .)
    )               reduce using rule 75 (fator1 -> empty .)
    ;               reduce using rule 75 (fator1 -> empty .)
    ,               reduce using rule 75 (fator1 -> empty .)


state 99

    (85) elemento -> error expressao . error

    error           shift and go to state 127


state 100

    (54) valor -> error valor .
    (44) expressao -> valor . expressao1
    (45) expressao1 -> . empty
    (46) expressao1 -> . OR valor expressao1
    (47) expressao1 -> . AND valor expressao1
    (48) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
    :               reduce using rule 54 (valor -> error valor .)
    )               reduce using rule 54 (valor -> error valor .)
    ;               reduce using rule 54 (valor -> error valor .)
    ,               reduce using rule 54 (valor -> error valor .)
    OR              shift and go to state 90
    AND             shift and go to state 87
    error           shift and go to state 88

  ! OR              [ reduce using rule 54 (valor -> error valor .) ]
  ! AND             [ reduce using rule 54 (valor -> error valor .) ]
  ! error           [ reduce using rule 54 (valor -> error valor .) ]
  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 89
    empty                          shift and go to state 91

state 101

    (86) elemento -> error elemento .
    (74) fator -> elemento . fator1
    (75) fator1 -> . empty
    (76) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

  ! shift/reduce conflict for SIM_POT resolved as shift
  ! reduce/reduce conflict for * resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for / resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for % resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for + resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for - resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_EQ resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_DIF resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for < resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_LE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for > resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_GE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for error resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for : resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ) resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ; resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for , resolved using rule 6 (empty -> .)
    SIM_POT         shift and go to state 97
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! SIM_POT         [ reduce using rule 86 (elemento -> error elemento .) ]
  ! *               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! /               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! %               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! +               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! -               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! SIM_EQ          [ reduce using rule 86 (elemento -> error elemento .) ]
  ! SIM_DIF         [ reduce using rule 86 (elemento -> error elemento .) ]
  ! <               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! SIM_LE          [ reduce using rule 86 (elemento -> error elemento .) ]
  ! >               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! SIM_GE          [ reduce using rule 86 (elemento -> error elemento .) ]
  ! error           [ reduce using rule 86 (elemento -> error elemento .) ]
  ! OR              [ reduce using rule 86 (elemento -> error elemento .) ]
  ! AND             [ reduce using rule 86 (elemento -> error elemento .) ]
  ! :               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! )               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! ;               [ reduce using rule 86 (elemento -> error elemento .) ]
  ! ,               [ reduce using rule 86 (elemento -> error elemento .) ]

    fator1                         shift and go to state 96
    empty                          shift and go to state 98

state 102

    (52) valor -> NOT valor .

    OR              reduce using rule 52 (valor -> NOT valor .)
    AND             reduce using rule 52 (valor -> NOT valor .)
    error           reduce using rule 52 (valor -> NOT valor .)
    :               reduce using rule 52 (valor -> NOT valor .)
    )               reduce using rule 52 (valor -> NOT valor .)
    ;               reduce using rule 52 (valor -> NOT valor .)
    ,               reduce using rule 52 (valor -> NOT valor .)


state 103

    (23) cmdatribui -> listaidenti SIM_ATTR expressao . ;
    (24) cmdatribui -> listaidenti SIM_ATTR expressao . error

    ;               shift and go to state 128
    error           shift and go to state 129


state 104

    (34) cmdselecao -> error expressao : . [ listacmd ] elif else ;

    [               shift and go to state 130


state 105

    (25) cmdentrada -> INPUT ( listaidenti . ) ;
    (26) cmdentrada -> INPUT ( listaidenti . error ;
    (28) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 131
    error           shift and go to state 132


state 106

    (27) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 133


state 107

    (17) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 17 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 17 (listaindenti1 -> , listaidenti .)


state 108

    (18) listaindenti1 -> error listaidenti .

    SIM_ATTR        reduce using rule 18 (listaindenti1 -> error listaidenti .)
    )               reduce using rule 18 (listaindenti1 -> error listaidenti .)
    error           reduce using rule 18 (listaindenti1 -> error listaidenti .)


state 109

    (35) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 134


state 110

    (33) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (36) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (37) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (38) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 136
    error           shift and go to state 135


state 111

    (19) listaexp -> expressao . listaexp1
    (20) listaexp1 -> . , listaexp
    (21) listaexp1 -> . empty
    (22) listaexp1 -> . error listaexp
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 138
    error           shift and go to state 139
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaexp1                      shift and go to state 137
    empty                          shift and go to state 140

state 112

    (29) cmdsaida -> OUTPUT ( listaexp . ) ;
    (30) cmdsaida -> OUTPUT ( listaexp . error ;
    (32) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 141
    error           shift and go to state 142


state 113

    (31) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 143


state 114

    (84) elemento -> error .
    (85) elemento -> error . expressao error
    (86) elemento -> error . elemento
    (53) valor -> error .
    (54) valor -> error . valor
    (44) expressao -> . valor expressao1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1

  ! reduce/reduce conflict for OR resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 53 (valor -> error .)
  ! reduce/reduce conflict for error resolved using rule 53 (valor -> error .)
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 84 (elemento -> error .)
    *               reduce using rule 84 (elemento -> error .)
    /               reduce using rule 84 (elemento -> error .)
    %               reduce using rule 84 (elemento -> error .)
    SIM_EQ          reduce using rule 84 (elemento -> error .)
    SIM_DIF         reduce using rule 84 (elemento -> error .)
    <               reduce using rule 84 (elemento -> error .)
    SIM_LE          reduce using rule 84 (elemento -> error .)
    >               reduce using rule 84 (elemento -> error .)
    SIM_GE          reduce using rule 84 (elemento -> error .)
    :               reduce using rule 84 (elemento -> error .)
    )               reduce using rule 84 (elemento -> error .)
    ;               reduce using rule 84 (elemento -> error .)
    ,               reduce using rule 84 (elemento -> error .)
    OR              reduce using rule 53 (valor -> error .)
    AND             reduce using rule 53 (valor -> error .)
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31
    error           shift and go to state 114
    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47

  ! +               [ reduce using rule 84 (elemento -> error .) ]
  ! -               [ reduce using rule 84 (elemento -> error .) ]
  ! error           [ reduce using rule 84 (elemento -> error .) ]
  ! OR              [ reduce using rule 84 (elemento -> error .) ]
  ! AND             [ reduce using rule 84 (elemento -> error .) ]
  ! error           [ reduce using rule 53 (valor -> error .) ]

    expressao                      shift and go to state 99
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 100
    relacional                     shift and go to state 42
    elemento                       shift and go to state 101

state 115

    (43) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 144
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 116

    (73) termo1 -> % fator . termo1
    (70) termo1 -> . empty
    (71) termo1 -> . * fator termo1
    (72) termo1 -> . / fator termo1
    (73) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 73
    /               shift and go to state 74
    %               shift and go to state 72
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 145
    empty                          shift and go to state 75

state 117

    (71) termo1 -> * fator . termo1
    (70) termo1 -> . empty
    (71) termo1 -> . * fator termo1
    (72) termo1 -> . / fator termo1
    (73) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 73
    /               shift and go to state 74
    %               shift and go to state 72
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 146
    empty                          shift and go to state 75

state 118

    (72) termo1 -> / fator . termo1
    (70) termo1 -> . empty
    (71) termo1 -> . * fator termo1
    (72) termo1 -> . / fator termo1
    (73) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 73
    /               shift and go to state 74
    %               shift and go to state 72
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 147
    empty                          shift and go to state 75

state 119

    (56) relacional1 -> operador aritmetica .

    OR              reduce using rule 56 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 56 (relacional1 -> operador aritmetica .)
    error           reduce using rule 56 (relacional1 -> operador aritmetica .)
    :               reduce using rule 56 (relacional1 -> operador aritmetica .)
    )               reduce using rule 56 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 56 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 56 (relacional1 -> operador aritmetica .)


state 120

    (81) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 81 (elemento -> ( expressao ) .)
    *               reduce using rule 81 (elemento -> ( expressao ) .)
    /               reduce using rule 81 (elemento -> ( expressao ) .)
    %               reduce using rule 81 (elemento -> ( expressao ) .)
    +               reduce using rule 81 (elemento -> ( expressao ) .)
    -               reduce using rule 81 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 81 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 81 (elemento -> ( expressao ) .)
    <               reduce using rule 81 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 81 (elemento -> ( expressao ) .)
    >               reduce using rule 81 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 81 (elemento -> ( expressao ) .)
    error           reduce using rule 81 (elemento -> ( expressao ) .)
    OR              reduce using rule 81 (elemento -> ( expressao ) .)
    AND             reduce using rule 81 (elemento -> ( expressao ) .)
    :               reduce using rule 81 (elemento -> ( expressao ) .)
    )               reduce using rule 81 (elemento -> ( expressao ) .)
    ;               reduce using rule 81 (elemento -> ( expressao ) .)
    ,               reduce using rule 81 (elemento -> ( expressao ) .)


state 121

    (47) expressao1 -> AND valor . expressao1
    (45) expressao1 -> . empty
    (46) expressao1 -> . OR valor expressao1
    (47) expressao1 -> . AND valor expressao1
    (48) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 90
    AND             shift and go to state 87
    error           shift and go to state 88
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 148
    empty                          shift and go to state 91

state 122

    (48) expressao1 -> error valor . expressao1
    (45) expressao1 -> . empty
    (46) expressao1 -> . OR valor expressao1
    (47) expressao1 -> . AND valor expressao1
    (48) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 90
    AND             shift and go to state 87
    error           shift and go to state 88
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 149
    empty                          shift and go to state 91

state 123

    (46) expressao1 -> OR valor . expressao1
    (45) expressao1 -> . empty
    (46) expressao1 -> . OR valor expressao1
    (47) expressao1 -> . AND valor expressao1
    (48) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 90
    AND             shift and go to state 87
    error           shift and go to state 88
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 150
    empty                          shift and go to state 91

state 124

    (67) aritmetica1 -> + termo . aritmetica1
    (66) aritmetica1 -> . empty
    (67) aritmetica1 -> . + termo aritmetica1
    (68) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 93
    -               shift and go to state 94
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 151
    empty                          shift and go to state 95

state 125

    (68) aritmetica1 -> - termo . aritmetica1
    (66) aritmetica1 -> . empty
    (67) aritmetica1 -> . + termo aritmetica1
    (68) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 93
    -               shift and go to state 94
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 152
    empty                          shift and go to state 95

state 126

    (76) fator1 -> SIM_POT elemento . fator1
    (75) fator1 -> . empty
    (76) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 97
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 153
    empty                          shift and go to state 98

state 127

    (85) elemento -> error expressao error .

    SIM_POT         reduce using rule 85 (elemento -> error expressao error .)
    *               reduce using rule 85 (elemento -> error expressao error .)
    /               reduce using rule 85 (elemento -> error expressao error .)
    %               reduce using rule 85 (elemento -> error expressao error .)
    +               reduce using rule 85 (elemento -> error expressao error .)
    -               reduce using rule 85 (elemento -> error expressao error .)
    SIM_EQ          reduce using rule 85 (elemento -> error expressao error .)
    SIM_DIF         reduce using rule 85 (elemento -> error expressao error .)
    <               reduce using rule 85 (elemento -> error expressao error .)
    SIM_LE          reduce using rule 85 (elemento -> error expressao error .)
    >               reduce using rule 85 (elemento -> error expressao error .)
    SIM_GE          reduce using rule 85 (elemento -> error expressao error .)
    error           reduce using rule 85 (elemento -> error expressao error .)
    OR              reduce using rule 85 (elemento -> error expressao error .)
    AND             reduce using rule 85 (elemento -> error expressao error .)
    :               reduce using rule 85 (elemento -> error expressao error .)
    )               reduce using rule 85 (elemento -> error expressao error .)
    ;               reduce using rule 85 (elemento -> error expressao error .)
    ,               reduce using rule 85 (elemento -> error expressao error .)


state 128

    (23) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 129

    (24) cmdatribui -> listaidenti SIM_ATTR expressao error .

    INPUT           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    OUTPUT          reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    IF              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    error           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    WHILE           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ID              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ]               reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)


state 130

    (34) cmdselecao -> error expressao : [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 154
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 131

    (25) cmdentrada -> INPUT ( listaidenti ) . ;
    (28) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 156
    error           shift and go to state 155


state 132

    (26) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 157


state 133

    (27) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 158


state 134

    (35) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 159
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 135

    (36) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 160
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 136

    (33) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (37) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (38) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 161
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 137

    (19) listaexp -> expressao listaexp1 .

    )               reduce using rule 19 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 19 (listaexp -> expressao listaexp1 .)


state 138

    (20) listaexp1 -> , . listaexp
    (19) listaexp -> . expressao listaexp1
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 111
    listaexp                       shift and go to state 162
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 139

    (22) listaexp1 -> error . listaexp
    (19) listaexp -> . expressao listaexp1
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    expressao                      shift and go to state 111
    listaexp                       shift and go to state 163
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    aritmetica                     shift and go to state 37
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 140

    (21) listaexp1 -> empty .

    )               reduce using rule 21 (listaexp1 -> empty .)
    error           reduce using rule 21 (listaexp1 -> empty .)


state 141

    (29) cmdsaida -> OUTPUT ( listaexp ) . ;
    (32) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 165
    error           shift and go to state 164


state 142

    (30) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 166


state 143

    (31) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 167


state 144

    (43) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;

    ]               shift and go to state 168


state 145

    (73) termo1 -> % fator termo1 .

    +               reduce using rule 73 (termo1 -> % fator termo1 .)
    -               reduce using rule 73 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 73 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 73 (termo1 -> % fator termo1 .)
    <               reduce using rule 73 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 73 (termo1 -> % fator termo1 .)
    >               reduce using rule 73 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 73 (termo1 -> % fator termo1 .)
    error           reduce using rule 73 (termo1 -> % fator termo1 .)
    OR              reduce using rule 73 (termo1 -> % fator termo1 .)
    AND             reduce using rule 73 (termo1 -> % fator termo1 .)
    :               reduce using rule 73 (termo1 -> % fator termo1 .)
    )               reduce using rule 73 (termo1 -> % fator termo1 .)
    ;               reduce using rule 73 (termo1 -> % fator termo1 .)
    ,               reduce using rule 73 (termo1 -> % fator termo1 .)


state 146

    (71) termo1 -> * fator termo1 .

    +               reduce using rule 71 (termo1 -> * fator termo1 .)
    -               reduce using rule 71 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 71 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 71 (termo1 -> * fator termo1 .)
    <               reduce using rule 71 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 71 (termo1 -> * fator termo1 .)
    >               reduce using rule 71 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 71 (termo1 -> * fator termo1 .)
    error           reduce using rule 71 (termo1 -> * fator termo1 .)
    OR              reduce using rule 71 (termo1 -> * fator termo1 .)
    AND             reduce using rule 71 (termo1 -> * fator termo1 .)
    :               reduce using rule 71 (termo1 -> * fator termo1 .)
    )               reduce using rule 71 (termo1 -> * fator termo1 .)
    ;               reduce using rule 71 (termo1 -> * fator termo1 .)
    ,               reduce using rule 71 (termo1 -> * fator termo1 .)


state 147

    (72) termo1 -> / fator termo1 .

    +               reduce using rule 72 (termo1 -> / fator termo1 .)
    -               reduce using rule 72 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 72 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 72 (termo1 -> / fator termo1 .)
    <               reduce using rule 72 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 72 (termo1 -> / fator termo1 .)
    >               reduce using rule 72 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 72 (termo1 -> / fator termo1 .)
    error           reduce using rule 72 (termo1 -> / fator termo1 .)
    OR              reduce using rule 72 (termo1 -> / fator termo1 .)
    AND             reduce using rule 72 (termo1 -> / fator termo1 .)
    :               reduce using rule 72 (termo1 -> / fator termo1 .)
    )               reduce using rule 72 (termo1 -> / fator termo1 .)
    ;               reduce using rule 72 (termo1 -> / fator termo1 .)
    ,               reduce using rule 72 (termo1 -> / fator termo1 .)


state 148

    (47) expressao1 -> AND valor expressao1 .

    :               reduce using rule 47 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 47 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 47 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 47 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 47 (expressao1 -> AND valor expressao1 .)


state 149

    (48) expressao1 -> error valor expressao1 .

    :               reduce using rule 48 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 48 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 48 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 48 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 48 (expressao1 -> error valor expressao1 .)


state 150

    (46) expressao1 -> OR valor expressao1 .

    :               reduce using rule 46 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 46 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 46 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 46 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 46 (expressao1 -> OR valor expressao1 .)


state 151

    (67) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 67 (aritmetica1 -> + termo aritmetica1 .)


state 152

    (68) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 68 (aritmetica1 -> - termo aritmetica1 .)


state 153

    (76) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 76 (fator1 -> SIM_POT elemento fator1 .)


state 154

    (34) cmdselecao -> error expressao : [ listacmd . ] elif else ;

    ]               shift and go to state 169


state 155

    (28) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)


state 156

    (25) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 157

    (26) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)


state 158

    (27) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)


state 159

    (35) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 170


state 160

    (36) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 171


state 161

    (33) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (37) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (38) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 173
    error           shift and go to state 172


state 162

    (20) listaexp1 -> , listaexp .

    )               reduce using rule 20 (listaexp1 -> , listaexp .)
    error           reduce using rule 20 (listaexp1 -> , listaexp .)


state 163

    (22) listaexp1 -> error listaexp .

    )               reduce using rule 22 (listaexp1 -> error listaexp .)
    error           reduce using rule 22 (listaexp1 -> error listaexp .)


state 164

    (32) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 165

    (29) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 166

    (30) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 167

    (31) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 168

    (43) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 175

state 169

    (34) cmdselecao -> error expressao : [ listacmd ] . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 177
    empty                          shift and go to state 179

state 170

    (35) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 180
    empty                          shift and go to state 179

state 171

    (36) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 181
    empty                          shift and go to state 179

state 172

    (37) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 182
    empty                          shift and go to state 179

state 173

    (33) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (38) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 183
    empty                          shift and go to state 179

state 174

    (42) else -> ELSE . : [ listacmd ]

    :               shift and go to state 184


state 175

    (43) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;

    ;               shift and go to state 185


state 176

    (41) else -> empty .

    ;               reduce using rule 41 (else -> empty .)
    error           reduce using rule 41 (else -> empty .)


state 177

    (34) cmdselecao -> error expressao : [ listacmd ] elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 186

state 178

    (40) elif -> ELIF . expressao : [ listacmd ] elif
    (44) expressao -> . valor expressao1
    (49) valor -> . relacional
    (50) valor -> . TRUE
    (51) valor -> . FALSE
    (52) valor -> . NOT valor
    (53) valor -> . error
    (54) valor -> . error valor
    (55) relacional -> . aritmetica relacional1
    (65) aritmetica -> . termo aritmetica1
    (69) termo -> . fator termo1
    (74) fator -> . elemento fator1
    (77) elemento -> . ID
    (78) elemento -> . INTEIRO
    (79) elemento -> . REAL
    (80) elemento -> . LITERAL
    (81) elemento -> . ( expressao )
    (82) elemento -> . + elemento
    (83) elemento -> . - elemento
    (84) elemento -> . error
    (85) elemento -> . error expressao error
    (86) elemento -> . error elemento

    TRUE            shift and go to state 32
    FALSE           shift and go to state 45
    NOT             shift and go to state 47
    error           shift and go to state 46
    ID              shift and go to state 43
    INTEIRO         shift and go to state 33
    REAL            shift and go to state 30
    LITERAL         shift and go to state 40
    (               shift and go to state 38
    +               shift and go to state 35
    -               shift and go to state 31

    aritmetica                     shift and go to state 37
    expressao                      shift and go to state 187
    fator                          shift and go to state 36
    termo                          shift and go to state 41
    valor                          shift and go to state 39
    relacional                     shift and go to state 42
    elemento                       shift and go to state 44

state 179

    (39) elif -> empty .

    ELSE            reduce using rule 39 (elif -> empty .)
    ;               reduce using rule 39 (elif -> empty .)
    error           reduce using rule 39 (elif -> empty .)


state 180

    (35) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 188

state 181

    (36) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 189

state 182

    (37) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 190

state 183

    (33) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (38) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (41) else -> . empty
    (42) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 174
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    empty                          shift and go to state 176
    else                           shift and go to state 191

state 184

    (42) else -> ELSE : . [ listacmd ]

    [               shift and go to state 192


state 185

    (43) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 43 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 186

    (34) cmdselecao -> error expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 193


state 187

    (40) elif -> ELIF expressao . : [ listacmd ] elif

    :               shift and go to state 194


state 188

    (35) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 195


state 189

    (36) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 196


state 190

    (37) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 197


state 191

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (38) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 199
    error           shift and go to state 198


state 192

    (42) else -> ELSE : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 200
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 193

    (34) cmdselecao -> error expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 34 (cmdselecao -> error expressao : [ listacmd ] elif else ; .)


state 194

    (40) elif -> ELIF expressao : . [ listacmd ] elif

    [               shift and go to state 201


state 195

    (35) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 35 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 196

    (36) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 36 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 197

    (37) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 198

    (38) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 38 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 199

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 200

    (42) else -> ELSE : [ listacmd . ]

    ]               shift and go to state 202


state 201

    (40) elif -> ELIF expressao : [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (34) cmdselecao -> . error expressao : [ listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (36) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (37) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (38) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (43) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 21
    OUTPUT          shift and go to state 26
    IF              shift and go to state 23
    error           shift and go to state 20
    WHILE           shift and go to state 15
    ID              shift and go to state 22

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 24
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 203
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 25
    cmdatribui                     shift and go to state 17

state 202

    (42) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 42 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 42 (else -> ELSE : [ listacmd ] .)


state 203

    (40) elif -> ELIF expressao : [ listacmd . ] elif

    ]               shift and go to state 204


state 204

    (40) elif -> ELIF expressao : [ listacmd ] . elif
    (39) elif -> . empty
    (40) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 178
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)

    elif                           shift and go to state 205
    empty                          shift and go to state 179

state 205

    (40) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 40 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 22 resolved as shift
WARNING: shift/reduce conflict for error in state 25 resolved as shift
WARNING: shift/reduce conflict for error in state 37 resolved as shift
WARNING: shift/reduce conflict for error in state 39 resolved as shift
WARNING: shift/reduce conflict for error in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 46 resolved as shift
WARNING: shift/reduce conflict for - in state 46 resolved as shift
WARNING: shift/reduce conflict for + in state 67 resolved as shift
WARNING: shift/reduce conflict for - in state 67 resolved as shift
WARNING: shift/reduce conflict for error in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 100 resolved as shift
WARNING: shift/reduce conflict for AND in state 100 resolved as shift
WARNING: shift/reduce conflict for error in state 100 resolved as shift
WARNING: shift/reduce conflict for error in state 100 resolved as shift
WARNING: shift/reduce conflict for SIM_POT in state 101 resolved as shift
WARNING: shift/reduce conflict for error in state 111 resolved as shift
WARNING: shift/reduce conflict for + in state 114 resolved as shift
WARNING: shift/reduce conflict for - in state 114 resolved as shift
WARNING: shift/reduce conflict for error in state 114 resolved as shift
WARNING: shift/reduce conflict for error in state 121 resolved as shift
WARNING: shift/reduce conflict for error in state 122 resolved as shift
WARNING: shift/reduce conflict for error in state 123 resolved as shift
WARNING: reduce/reduce conflict in state 46 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 46
WARNING: reduce/reduce conflict in state 101 resolved using rule (empty -> <empty>)
WARNING: rejected rule (elemento -> error elemento) in state 101
WARNING: reduce/reduce conflict in state 114 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 114
WARNING: Rule (elemento -> error elemento) is never reduced
