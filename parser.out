Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     programa -> error ID : [ listacmd ]
Rule 3     programa -> DEF ID error [ listacmd ]
Rule 4     programa -> DEF ID : error listacmd ]
Rule 5     programa -> DEF ID : [ listacmd error
Rule 6     empty -> <empty>
Rule 7     listacmd -> comando listacmd1
Rule 8     listacmd1 -> empty
Rule 9     listacmd1 -> listacmd
Rule 10    comando -> cmdatribui
Rule 11    comando -> cmdentrada
Rule 12    comando -> cmdsaida
Rule 13    comando -> cmdselecao
Rule 14    comando -> cmdrepeticao
Rule 15    listaidenti -> ID listaindenti1
Rule 16    listaindenti1 -> empty
Rule 17    listaindenti1 -> , listaidenti
Rule 18    listaindenti1 -> error listaidenti
Rule 19    listaexp -> expressao listaexp1
Rule 20    listaexp1 -> , listaexp
Rule 21    listaexp1 -> empty
Rule 22    listaexp1 -> error listaexp
Rule 23    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 24    cmdatribui -> listaidenti SIM_ATTR expressao error
Rule 25    cmdentrada -> INPUT ( listaidenti ) ;
Rule 26    cmdentrada -> INPUT ( listaidenti error ;
Rule 27    cmdentrada -> INPUT error listaidenti ) ;
Rule 28    cmdentrada -> INPUT ( listaidenti ) error
Rule 29    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 30    cmdsaida -> OUTPUT ( listaexp error ;
Rule 31    cmdsaida -> OUTPUT error listaexp ) ;
Rule 32    cmdsaida -> OUTPUT ( listaexp ) error
Rule 33    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 34    elif -> empty
Rule 35    elif -> ELIF expressao : [ listacmd ] elif
Rule 36    else -> empty
Rule 37    else -> ELSE : [ listacmd ]
Rule 38    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 39    expressao -> valor expressao1
Rule 40    expressao1 -> empty
Rule 41    expressao1 -> OR valor expressao1
Rule 42    expressao1 -> AND valor expressao1
Rule 43    expressao1 -> error valor expressao1
Rule 44    valor -> relacional
Rule 45    valor -> TRUE
Rule 46    valor -> FALSE
Rule 47    valor -> NOT valor
Rule 48    valor -> error
Rule 49    valor -> error valor
Rule 50    relacional -> aritmetica relacional1
Rule 51    relacional1 -> operador aritmetica
Rule 52    relacional1 -> empty
Rule 53    operador -> SIM_EQ
Rule 54    operador -> SIM_DIF
Rule 55    operador -> <
Rule 56    operador -> SIM_LE
Rule 57    operador -> >
Rule 58    operador -> SIM_GE
Rule 59    operador -> error
Rule 60    aritmetica -> termo aritmetica1
Rule 61    aritmetica1 -> empty
Rule 62    aritmetica1 -> + termo aritmetica1
Rule 63    aritmetica1 -> - termo aritmetica1
Rule 64    termo -> fator termo1
Rule 65    termo1 -> empty
Rule 66    termo1 -> * fator termo1
Rule 67    termo1 -> / fator termo1
Rule 68    termo1 -> % fator termo1
Rule 69    fator -> elemento fator1
Rule 70    fator1 -> empty
Rule 71    fator1 -> SIM_POT elemento fator1
Rule 72    elemento -> ID
Rule 73    elemento -> INTEIRO
Rule 74    elemento -> REAL
Rule 75    elemento -> LITERAL
Rule 76    elemento -> ( expressao )
Rule 77    elemento -> + elemento
Rule 78    elemento -> - elemento
Rule 79    elemento -> error
Rule 80    elemento -> error expressao error
Rule 81    elemento -> error elemento

Terminals, with rules where they appear

%                    : 68
(                    : 25 26 28 29 30 32 76
)                    : 25 27 28 29 31 32 76
*                    : 66
+                    : 62 77
,                    : 17 20
-                    : 63 78
/                    : 67
:                    : 1 2 4 5 33 35 37 38
;                    : 23 25 26 27 29 30 31 33 38
<                    : 55
>                    : 57
AND                  : 42
BINARIO              : 
DEF                  : 1 3 4 5
ELIF                 : 35
ELSE                 : 37
FALSE                : 46
HEXADECIMAL          : 
ID                   : 1 2 3 4 5 15 72
IF                   : 33
INPUT                : 25 26 27 28
INTEIRO              : 73
LITERAL              : 75
NOT                  : 47
OCTAL                : 
OR                   : 41
OUTPUT               : 29 30 31 32
REAL                 : 74
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 23 24
SIM_DIF              : 54
SIM_EQ               : 53
SIM_GE               : 58
SIM_LE               : 56
SIM_POT              : 71
TRUE                 : 45
WHILE                : 38
[                    : 1 2 3 5 33 35 37 38
]                    : 1 2 3 4 33 35 37 38
error                : 2 3 4 5 18 22 24 26 27 28 30 31 32 43 48 49 59 79 80 80 81

Nonterminals, with rules where they appear

aritmetica           : 50 51
aritmetica1          : 60 62 63
cmdatribui           : 10
cmdentrada           : 11
cmdrepeticao         : 14
cmdsaida             : 12
cmdselecao           : 13
comando              : 7
elemento             : 69 71 77 78 81
elif                 : 33 35
else                 : 33 38
empty                : 8 16 21 34 36 40 52 61 65 70
expressao            : 19 23 24 33 35 38 76 80
expressao1           : 39 41 42 43
fator                : 64 66 67 68
fator1               : 69 71
listacmd             : 1 2 3 4 5 9 33 35 37 38
listacmd1            : 7
listaexp             : 20 22 29 30 31 32
listaexp1            : 19
listaidenti          : 17 18 23 24 25 26 27 28
listaindenti1        : 15
operador             : 51
programa             : 0
relacional           : 44
relacional1          : 50
termo                : 60 62 63
termo1               : 64 66 67 68
valor                : 39 41 42 43 47 49

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]
    (2) programa -> . error ID : [ listacmd ]
    (3) programa -> . DEF ID error [ listacmd ]
    (4) programa -> . DEF ID : error listacmd ]
    (5) programa -> . DEF ID : [ listacmd error

    DEF             shift and go to state 3
    error           shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> error . ID : [ listacmd ]

    ID              shift and go to state 4


state 3

    (1) programa -> DEF . ID : [ listacmd ]
    (3) programa -> DEF . ID error [ listacmd ]
    (4) programa -> DEF . ID : error listacmd ]
    (5) programa -> DEF . ID : [ listacmd error

    ID              shift and go to state 5


state 4

    (2) programa -> error ID . : [ listacmd ]

    :               shift and go to state 6


state 5

    (1) programa -> DEF ID . : [ listacmd ]
    (3) programa -> DEF ID . error [ listacmd ]
    (4) programa -> DEF ID . : error listacmd ]
    (5) programa -> DEF ID . : [ listacmd error

    :               shift and go to state 8
    error           shift and go to state 7


state 6

    (2) programa -> error ID : . [ listacmd ]

    [               shift and go to state 9


state 7

    (3) programa -> DEF ID error . [ listacmd ]

    [               shift and go to state 10


state 8

    (1) programa -> DEF ID : . [ listacmd ]
    (4) programa -> DEF ID : . error listacmd ]
    (5) programa -> DEF ID : . [ listacmd error

    [               shift and go to state 12
    error           shift and go to state 11


state 9

    (2) programa -> error ID : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 16
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 10

    (3) programa -> DEF ID error [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 26
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 11

    (4) programa -> DEF ID : error . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 27
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 12

    (1) programa -> DEF ID : [ . listacmd ]
    (5) programa -> DEF ID : [ . listacmd error
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 28
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 13

    (13) comando -> cmdselecao .

    INPUT           reduce using rule 13 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 13 (comando -> cmdselecao .)
    IF              reduce using rule 13 (comando -> cmdselecao .)
    WHILE           reduce using rule 13 (comando -> cmdselecao .)
    ID              reduce using rule 13 (comando -> cmdselecao .)
    ]               reduce using rule 13 (comando -> cmdselecao .)
    error           reduce using rule 13 (comando -> cmdselecao .)


state 14

    (11) comando -> cmdentrada .

    INPUT           reduce using rule 11 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 11 (comando -> cmdentrada .)
    IF              reduce using rule 11 (comando -> cmdentrada .)
    WHILE           reduce using rule 11 (comando -> cmdentrada .)
    ID              reduce using rule 11 (comando -> cmdentrada .)
    ]               reduce using rule 11 (comando -> cmdentrada .)
    error           reduce using rule 11 (comando -> cmdentrada .)


state 15

    (38) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 33
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 16

    (2) programa -> error ID : [ listacmd . ]

    ]               shift and go to state 47


state 17

    (10) comando -> cmdatribui .

    INPUT           reduce using rule 10 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 10 (comando -> cmdatribui .)
    IF              reduce using rule 10 (comando -> cmdatribui .)
    WHILE           reduce using rule 10 (comando -> cmdatribui .)
    ID              reduce using rule 10 (comando -> cmdatribui .)
    ]               reduce using rule 10 (comando -> cmdatribui .)
    error           reduce using rule 10 (comando -> cmdatribui .)


state 18

    (12) comando -> cmdsaida .

    INPUT           reduce using rule 12 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 12 (comando -> cmdsaida .)
    IF              reduce using rule 12 (comando -> cmdsaida .)
    WHILE           reduce using rule 12 (comando -> cmdsaida .)
    ID              reduce using rule 12 (comando -> cmdsaida .)
    ]               reduce using rule 12 (comando -> cmdsaida .)
    error           reduce using rule 12 (comando -> cmdsaida .)


state 19

    (23) cmdatribui -> listaidenti . SIM_ATTR expressao ;
    (24) cmdatribui -> listaidenti . SIM_ATTR expressao error

    SIM_ATTR        shift and go to state 48


state 20

    (25) cmdentrada -> INPUT . ( listaidenti ) ;
    (26) cmdentrada -> INPUT . ( listaidenti error ;
    (27) cmdentrada -> INPUT . error listaidenti ) ;
    (28) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 49
    error           shift and go to state 50


state 21

    (15) listaidenti -> ID . listaindenti1
    (16) listaindenti1 -> . empty
    (17) listaindenti1 -> . , listaidenti
    (18) listaindenti1 -> . error listaidenti
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 51
    error           shift and go to state 52
    SIM_ATTR        reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaindenti1                  shift and go to state 53
    empty                          shift and go to state 54

state 22

    (33) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 55
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 23

    (14) comando -> cmdrepeticao .

    INPUT           reduce using rule 14 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 14 (comando -> cmdrepeticao .)
    IF              reduce using rule 14 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 14 (comando -> cmdrepeticao .)
    ID              reduce using rule 14 (comando -> cmdrepeticao .)
    ]               reduce using rule 14 (comando -> cmdrepeticao .)
    error           reduce using rule 14 (comando -> cmdrepeticao .)


state 24

    (7) listacmd -> comando . listacmd1
    (8) listacmd1 -> . empty
    (9) listacmd1 -> . listacmd
    (6) empty -> .
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    ]               reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    listacmd1                      shift and go to state 57
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 56
    cmdsaida                       shift and go to state 18
    empty                          shift and go to state 58
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 25

    (29) cmdsaida -> OUTPUT . ( listaexp ) ;
    (30) cmdsaida -> OUTPUT . ( listaexp error ;
    (31) cmdsaida -> OUTPUT . error listaexp ) ;
    (32) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 59
    error           shift and go to state 60


state 26

    (3) programa -> DEF ID error [ listacmd . ]

    ]               shift and go to state 61


state 27

    (4) programa -> DEF ID : error listacmd . ]

    ]               shift and go to state 62


state 28

    (1) programa -> DEF ID : [ listacmd . ]
    (5) programa -> DEF ID : [ listacmd . error

    ]               shift and go to state 64
    error           shift and go to state 63


state 29

    (74) elemento -> REAL .

    SIM_POT         reduce using rule 74 (elemento -> REAL .)
    *               reduce using rule 74 (elemento -> REAL .)
    /               reduce using rule 74 (elemento -> REAL .)
    %               reduce using rule 74 (elemento -> REAL .)
    +               reduce using rule 74 (elemento -> REAL .)
    -               reduce using rule 74 (elemento -> REAL .)
    SIM_EQ          reduce using rule 74 (elemento -> REAL .)
    SIM_DIF         reduce using rule 74 (elemento -> REAL .)
    <               reduce using rule 74 (elemento -> REAL .)
    SIM_LE          reduce using rule 74 (elemento -> REAL .)
    >               reduce using rule 74 (elemento -> REAL .)
    SIM_GE          reduce using rule 74 (elemento -> REAL .)
    error           reduce using rule 74 (elemento -> REAL .)
    OR              reduce using rule 74 (elemento -> REAL .)
    AND             reduce using rule 74 (elemento -> REAL .)
    :               reduce using rule 74 (elemento -> REAL .)
    )               reduce using rule 74 (elemento -> REAL .)
    ;               reduce using rule 74 (elemento -> REAL .)
    ,               reduce using rule 74 (elemento -> REAL .)


state 30

    (78) elemento -> - . elemento
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 66

state 31

    (45) valor -> TRUE .

    OR              reduce using rule 45 (valor -> TRUE .)
    AND             reduce using rule 45 (valor -> TRUE .)
    error           reduce using rule 45 (valor -> TRUE .)
    :               reduce using rule 45 (valor -> TRUE .)
    )               reduce using rule 45 (valor -> TRUE .)
    ;               reduce using rule 45 (valor -> TRUE .)
    ,               reduce using rule 45 (valor -> TRUE .)


state 32

    (73) elemento -> INTEIRO .

    SIM_POT         reduce using rule 73 (elemento -> INTEIRO .)
    *               reduce using rule 73 (elemento -> INTEIRO .)
    /               reduce using rule 73 (elemento -> INTEIRO .)
    %               reduce using rule 73 (elemento -> INTEIRO .)
    +               reduce using rule 73 (elemento -> INTEIRO .)
    -               reduce using rule 73 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 73 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 73 (elemento -> INTEIRO .)
    <               reduce using rule 73 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 73 (elemento -> INTEIRO .)
    >               reduce using rule 73 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 73 (elemento -> INTEIRO .)
    error           reduce using rule 73 (elemento -> INTEIRO .)
    OR              reduce using rule 73 (elemento -> INTEIRO .)
    AND             reduce using rule 73 (elemento -> INTEIRO .)
    :               reduce using rule 73 (elemento -> INTEIRO .)
    )               reduce using rule 73 (elemento -> INTEIRO .)
    ;               reduce using rule 73 (elemento -> INTEIRO .)
    ,               reduce using rule 73 (elemento -> INTEIRO .)


state 33

    (38) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;

    :               shift and go to state 67


state 34

    (77) elemento -> + . elemento
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 68

state 35

    (64) termo -> fator . termo1
    (65) termo1 -> . empty
    (66) termo1 -> . * fator termo1
    (67) termo1 -> . / fator termo1
    (68) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 71
    /               shift and go to state 72
    %               shift and go to state 70
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 69
    empty                          shift and go to state 73

state 36

    (50) relacional -> aritmetica . relacional1
    (51) relacional1 -> . operador aritmetica
    (52) relacional1 -> . empty
    (53) operador -> . SIM_EQ
    (54) operador -> . SIM_DIF
    (55) operador -> . <
    (56) operador -> . SIM_LE
    (57) operador -> . >
    (58) operador -> . SIM_GE
    (59) operador -> . error
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    SIM_EQ          shift and go to state 74
    SIM_DIF         shift and go to state 77
    <               shift and go to state 81
    SIM_LE          shift and go to state 83
    >               shift and go to state 80
    SIM_GE          shift and go to state 76
    error           shift and go to state 78
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    relacional1                    shift and go to state 79
    operador                       shift and go to state 75
    empty                          shift and go to state 82

state 37

    (76) elemento -> ( . expressao )
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 84
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 38

    (39) expressao -> valor . expressao1
    (40) expressao1 -> . empty
    (41) expressao1 -> . OR valor expressao1
    (42) expressao1 -> . AND valor expressao1
    (43) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 88
    AND             shift and go to state 85
    error           shift and go to state 86
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 87
    empty                          shift and go to state 89

state 39

    (75) elemento -> LITERAL .

    SIM_POT         reduce using rule 75 (elemento -> LITERAL .)
    *               reduce using rule 75 (elemento -> LITERAL .)
    /               reduce using rule 75 (elemento -> LITERAL .)
    %               reduce using rule 75 (elemento -> LITERAL .)
    +               reduce using rule 75 (elemento -> LITERAL .)
    -               reduce using rule 75 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 75 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 75 (elemento -> LITERAL .)
    <               reduce using rule 75 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 75 (elemento -> LITERAL .)
    >               reduce using rule 75 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 75 (elemento -> LITERAL .)
    error           reduce using rule 75 (elemento -> LITERAL .)
    OR              reduce using rule 75 (elemento -> LITERAL .)
    AND             reduce using rule 75 (elemento -> LITERAL .)
    :               reduce using rule 75 (elemento -> LITERAL .)
    )               reduce using rule 75 (elemento -> LITERAL .)
    ;               reduce using rule 75 (elemento -> LITERAL .)
    ,               reduce using rule 75 (elemento -> LITERAL .)


state 40

    (60) aritmetica -> termo . aritmetica1
    (61) aritmetica1 -> . empty
    (62) aritmetica1 -> . + termo aritmetica1
    (63) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 91
    -               shift and go to state 92
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 90
    empty                          shift and go to state 93

state 41

    (44) valor -> relacional .

    OR              reduce using rule 44 (valor -> relacional .)
    AND             reduce using rule 44 (valor -> relacional .)
    error           reduce using rule 44 (valor -> relacional .)
    :               reduce using rule 44 (valor -> relacional .)
    )               reduce using rule 44 (valor -> relacional .)
    ;               reduce using rule 44 (valor -> relacional .)
    ,               reduce using rule 44 (valor -> relacional .)


state 42

    (72) elemento -> ID .

    SIM_POT         reduce using rule 72 (elemento -> ID .)
    *               reduce using rule 72 (elemento -> ID .)
    /               reduce using rule 72 (elemento -> ID .)
    %               reduce using rule 72 (elemento -> ID .)
    +               reduce using rule 72 (elemento -> ID .)
    -               reduce using rule 72 (elemento -> ID .)
    SIM_EQ          reduce using rule 72 (elemento -> ID .)
    SIM_DIF         reduce using rule 72 (elemento -> ID .)
    <               reduce using rule 72 (elemento -> ID .)
    SIM_LE          reduce using rule 72 (elemento -> ID .)
    >               reduce using rule 72 (elemento -> ID .)
    SIM_GE          reduce using rule 72 (elemento -> ID .)
    error           reduce using rule 72 (elemento -> ID .)
    OR              reduce using rule 72 (elemento -> ID .)
    AND             reduce using rule 72 (elemento -> ID .)
    :               reduce using rule 72 (elemento -> ID .)
    )               reduce using rule 72 (elemento -> ID .)
    ;               reduce using rule 72 (elemento -> ID .)
    ,               reduce using rule 72 (elemento -> ID .)


state 43

    (69) fator -> elemento . fator1
    (70) fator1 -> . empty
    (71) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 95
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 94
    empty                          shift and go to state 96

state 44

    (46) valor -> FALSE .

    OR              reduce using rule 46 (valor -> FALSE .)
    AND             reduce using rule 46 (valor -> FALSE .)
    error           reduce using rule 46 (valor -> FALSE .)
    :               reduce using rule 46 (valor -> FALSE .)
    )               reduce using rule 46 (valor -> FALSE .)
    ;               reduce using rule 46 (valor -> FALSE .)
    ,               reduce using rule 46 (valor -> FALSE .)


state 45

    (48) valor -> error .
    (49) valor -> error . valor
    (79) elemento -> error .
    (80) elemento -> error . expressao error
    (81) elemento -> error . elemento
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (39) expressao -> . valor expressao1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1

  ! reduce/reduce conflict for error resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for OR resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for : resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for ) resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for ; resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for , resolved using rule 48 (valor -> error .)
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    OR              reduce using rule 48 (valor -> error .)
    AND             reduce using rule 48 (valor -> error .)
    :               reduce using rule 48 (valor -> error .)
    )               reduce using rule 48 (valor -> error .)
    ;               reduce using rule 48 (valor -> error .)
    ,               reduce using rule 48 (valor -> error .)
    SIM_POT         reduce using rule 79 (elemento -> error .)
    *               reduce using rule 79 (elemento -> error .)
    /               reduce using rule 79 (elemento -> error .)
    %               reduce using rule 79 (elemento -> error .)
    SIM_EQ          reduce using rule 79 (elemento -> error .)
    SIM_DIF         reduce using rule 79 (elemento -> error .)
    <               reduce using rule 79 (elemento -> error .)
    SIM_LE          reduce using rule 79 (elemento -> error .)
    >               reduce using rule 79 (elemento -> error .)
    SIM_GE          reduce using rule 79 (elemento -> error .)
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

  ! error           [ reduce using rule 48 (valor -> error .) ]
  ! +               [ reduce using rule 79 (elemento -> error .) ]
  ! -               [ reduce using rule 79 (elemento -> error .) ]
  ! error           [ reduce using rule 79 (elemento -> error .) ]
  ! OR              [ reduce using rule 79 (elemento -> error .) ]
  ! AND             [ reduce using rule 79 (elemento -> error .) ]
  ! :               [ reduce using rule 79 (elemento -> error .) ]
  ! )               [ reduce using rule 79 (elemento -> error .) ]
  ! ;               [ reduce using rule 79 (elemento -> error .) ]
  ! ,               [ reduce using rule 79 (elemento -> error .) ]

    expressao                      shift and go to state 97
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 98
    relacional                     shift and go to state 41
    elemento                       shift and go to state 99

state 46

    (47) valor -> NOT . valor
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 100
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 47

    (2) programa -> error ID : [ listacmd ] .

    $end            reduce using rule 2 (programa -> error ID : [ listacmd ] .)


state 48

    (23) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (24) cmdatribui -> listaidenti SIM_ATTR . expressao error
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 101
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 49

    (25) cmdentrada -> INPUT ( . listaidenti ) ;
    (26) cmdentrada -> INPUT ( . listaidenti error ;
    (28) cmdentrada -> INPUT ( . listaidenti ) error
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 102

state 50

    (27) cmdentrada -> INPUT error . listaidenti ) ;
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 103

state 51

    (17) listaindenti1 -> , . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 104

state 52

    (18) listaindenti1 -> error . listaidenti
    (15) listaidenti -> . ID listaindenti1

    ID              shift and go to state 21

    listaidenti                    shift and go to state 105

state 53

    (15) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 15 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 15 (listaidenti -> ID listaindenti1 .)


state 54

    (16) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 16 (listaindenti1 -> empty .)
    )               reduce using rule 16 (listaindenti1 -> empty .)
    error           reduce using rule 16 (listaindenti1 -> empty .)


state 55

    (33) cmdselecao -> IF expressao . : [ listacmd ] elif else ;

    :               shift and go to state 106


state 56

    (9) listacmd1 -> listacmd .

    ]               reduce using rule 9 (listacmd1 -> listacmd .)
    error           reduce using rule 9 (listacmd1 -> listacmd .)


state 57

    (7) listacmd -> comando listacmd1 .

    ]               reduce using rule 7 (listacmd -> comando listacmd1 .)
    error           reduce using rule 7 (listacmd -> comando listacmd1 .)


state 58

    (8) listacmd1 -> empty .

    ]               reduce using rule 8 (listacmd1 -> empty .)
    error           reduce using rule 8 (listacmd1 -> empty .)


state 59

    (29) cmdsaida -> OUTPUT ( . listaexp ) ;
    (30) cmdsaida -> OUTPUT ( . listaexp error ;
    (32) cmdsaida -> OUTPUT ( . listaexp ) error
    (19) listaexp -> . expressao listaexp1
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 108
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 60

    (31) cmdsaida -> OUTPUT error . listaexp ) ;
    (19) listaexp -> . expressao listaexp1
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 109
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 61

    (3) programa -> DEF ID error [ listacmd ] .

    $end            reduce using rule 3 (programa -> DEF ID error [ listacmd ] .)


state 62

    (4) programa -> DEF ID : error listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID : error listacmd ] .)


state 63

    (5) programa -> DEF ID : [ listacmd error .

    $end            reduce using rule 5 (programa -> DEF ID : [ listacmd error .)


state 64

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 65

    (79) elemento -> error .
    (80) elemento -> error . expressao error
    (81) elemento -> error . elemento
    (39) expressao -> . valor expressao1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 79 (elemento -> error .)
    *               reduce using rule 79 (elemento -> error .)
    /               reduce using rule 79 (elemento -> error .)
    %               reduce using rule 79 (elemento -> error .)
    SIM_EQ          reduce using rule 79 (elemento -> error .)
    SIM_DIF         reduce using rule 79 (elemento -> error .)
    <               reduce using rule 79 (elemento -> error .)
    SIM_LE          reduce using rule 79 (elemento -> error .)
    >               reduce using rule 79 (elemento -> error .)
    SIM_GE          reduce using rule 79 (elemento -> error .)
    OR              reduce using rule 79 (elemento -> error .)
    AND             reduce using rule 79 (elemento -> error .)
    :               reduce using rule 79 (elemento -> error .)
    )               reduce using rule 79 (elemento -> error .)
    ;               reduce using rule 79 (elemento -> error .)
    ,               reduce using rule 79 (elemento -> error .)
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 110
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46

  ! +               [ reduce using rule 79 (elemento -> error .) ]
  ! -               [ reduce using rule 79 (elemento -> error .) ]
  ! error           [ reduce using rule 79 (elemento -> error .) ]

    expressao                      shift and go to state 97
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 99

state 66

    (78) elemento -> - elemento .

    SIM_POT         reduce using rule 78 (elemento -> - elemento .)
    *               reduce using rule 78 (elemento -> - elemento .)
    /               reduce using rule 78 (elemento -> - elemento .)
    %               reduce using rule 78 (elemento -> - elemento .)
    +               reduce using rule 78 (elemento -> - elemento .)
    -               reduce using rule 78 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 78 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 78 (elemento -> - elemento .)
    <               reduce using rule 78 (elemento -> - elemento .)
    SIM_LE          reduce using rule 78 (elemento -> - elemento .)
    >               reduce using rule 78 (elemento -> - elemento .)
    SIM_GE          reduce using rule 78 (elemento -> - elemento .)
    error           reduce using rule 78 (elemento -> - elemento .)
    OR              reduce using rule 78 (elemento -> - elemento .)
    AND             reduce using rule 78 (elemento -> - elemento .)
    :               reduce using rule 78 (elemento -> - elemento .)
    )               reduce using rule 78 (elemento -> - elemento .)
    ;               reduce using rule 78 (elemento -> - elemento .)
    ,               reduce using rule 78 (elemento -> - elemento .)


state 67

    (38) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;

    [               shift and go to state 111


state 68

    (77) elemento -> + elemento .

    SIM_POT         reduce using rule 77 (elemento -> + elemento .)
    *               reduce using rule 77 (elemento -> + elemento .)
    /               reduce using rule 77 (elemento -> + elemento .)
    %               reduce using rule 77 (elemento -> + elemento .)
    +               reduce using rule 77 (elemento -> + elemento .)
    -               reduce using rule 77 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 77 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 77 (elemento -> + elemento .)
    <               reduce using rule 77 (elemento -> + elemento .)
    SIM_LE          reduce using rule 77 (elemento -> + elemento .)
    >               reduce using rule 77 (elemento -> + elemento .)
    SIM_GE          reduce using rule 77 (elemento -> + elemento .)
    error           reduce using rule 77 (elemento -> + elemento .)
    OR              reduce using rule 77 (elemento -> + elemento .)
    AND             reduce using rule 77 (elemento -> + elemento .)
    :               reduce using rule 77 (elemento -> + elemento .)
    )               reduce using rule 77 (elemento -> + elemento .)
    ;               reduce using rule 77 (elemento -> + elemento .)
    ,               reduce using rule 77 (elemento -> + elemento .)


state 69

    (64) termo -> fator termo1 .

    +               reduce using rule 64 (termo -> fator termo1 .)
    -               reduce using rule 64 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 64 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 64 (termo -> fator termo1 .)
    <               reduce using rule 64 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 64 (termo -> fator termo1 .)
    >               reduce using rule 64 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 64 (termo -> fator termo1 .)
    error           reduce using rule 64 (termo -> fator termo1 .)
    OR              reduce using rule 64 (termo -> fator termo1 .)
    AND             reduce using rule 64 (termo -> fator termo1 .)
    :               reduce using rule 64 (termo -> fator termo1 .)
    )               reduce using rule 64 (termo -> fator termo1 .)
    ;               reduce using rule 64 (termo -> fator termo1 .)
    ,               reduce using rule 64 (termo -> fator termo1 .)


state 70

    (68) termo1 -> % . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 43
    fator                          shift and go to state 112

state 71

    (66) termo1 -> * . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 43
    fator                          shift and go to state 113

state 72

    (67) termo1 -> / . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 43
    fator                          shift and go to state 114

state 73

    (65) termo1 -> empty .

    +               reduce using rule 65 (termo1 -> empty .)
    -               reduce using rule 65 (termo1 -> empty .)
    SIM_EQ          reduce using rule 65 (termo1 -> empty .)
    SIM_DIF         reduce using rule 65 (termo1 -> empty .)
    <               reduce using rule 65 (termo1 -> empty .)
    SIM_LE          reduce using rule 65 (termo1 -> empty .)
    >               reduce using rule 65 (termo1 -> empty .)
    SIM_GE          reduce using rule 65 (termo1 -> empty .)
    error           reduce using rule 65 (termo1 -> empty .)
    OR              reduce using rule 65 (termo1 -> empty .)
    AND             reduce using rule 65 (termo1 -> empty .)
    :               reduce using rule 65 (termo1 -> empty .)
    )               reduce using rule 65 (termo1 -> empty .)
    ;               reduce using rule 65 (termo1 -> empty .)
    ,               reduce using rule 65 (termo1 -> empty .)


state 74

    (53) operador -> SIM_EQ .

    ID              reduce using rule 53 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 53 (operador -> SIM_EQ .)
    REAL            reduce using rule 53 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 53 (operador -> SIM_EQ .)
    (               reduce using rule 53 (operador -> SIM_EQ .)
    +               reduce using rule 53 (operador -> SIM_EQ .)
    -               reduce using rule 53 (operador -> SIM_EQ .)
    error           reduce using rule 53 (operador -> SIM_EQ .)


state 75

    (51) relacional1 -> operador . aritmetica
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    fator                          shift and go to state 35
    aritmetica                     shift and go to state 115
    termo                          shift and go to state 40
    elemento                       shift and go to state 43

state 76

    (58) operador -> SIM_GE .

    ID              reduce using rule 58 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 58 (operador -> SIM_GE .)
    REAL            reduce using rule 58 (operador -> SIM_GE .)
    LITERAL         reduce using rule 58 (operador -> SIM_GE .)
    (               reduce using rule 58 (operador -> SIM_GE .)
    +               reduce using rule 58 (operador -> SIM_GE .)
    -               reduce using rule 58 (operador -> SIM_GE .)
    error           reduce using rule 58 (operador -> SIM_GE .)


state 77

    (54) operador -> SIM_DIF .

    ID              reduce using rule 54 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 54 (operador -> SIM_DIF .)
    REAL            reduce using rule 54 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 54 (operador -> SIM_DIF .)
    (               reduce using rule 54 (operador -> SIM_DIF .)
    +               reduce using rule 54 (operador -> SIM_DIF .)
    -               reduce using rule 54 (operador -> SIM_DIF .)
    error           reduce using rule 54 (operador -> SIM_DIF .)


state 78

    (59) operador -> error .

    ID              reduce using rule 59 (operador -> error .)
    INTEIRO         reduce using rule 59 (operador -> error .)
    REAL            reduce using rule 59 (operador -> error .)
    LITERAL         reduce using rule 59 (operador -> error .)
    (               reduce using rule 59 (operador -> error .)
    +               reduce using rule 59 (operador -> error .)
    -               reduce using rule 59 (operador -> error .)
    error           reduce using rule 59 (operador -> error .)


state 79

    (50) relacional -> aritmetica relacional1 .

    OR              reduce using rule 50 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 50 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 50 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 50 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 50 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 50 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 50 (relacional -> aritmetica relacional1 .)


state 80

    (57) operador -> > .

    ID              reduce using rule 57 (operador -> > .)
    INTEIRO         reduce using rule 57 (operador -> > .)
    REAL            reduce using rule 57 (operador -> > .)
    LITERAL         reduce using rule 57 (operador -> > .)
    (               reduce using rule 57 (operador -> > .)
    +               reduce using rule 57 (operador -> > .)
    -               reduce using rule 57 (operador -> > .)
    error           reduce using rule 57 (operador -> > .)


state 81

    (55) operador -> < .

    ID              reduce using rule 55 (operador -> < .)
    INTEIRO         reduce using rule 55 (operador -> < .)
    REAL            reduce using rule 55 (operador -> < .)
    LITERAL         reduce using rule 55 (operador -> < .)
    (               reduce using rule 55 (operador -> < .)
    +               reduce using rule 55 (operador -> < .)
    -               reduce using rule 55 (operador -> < .)
    error           reduce using rule 55 (operador -> < .)


state 82

    (52) relacional1 -> empty .

    OR              reduce using rule 52 (relacional1 -> empty .)
    AND             reduce using rule 52 (relacional1 -> empty .)
    error           reduce using rule 52 (relacional1 -> empty .)
    :               reduce using rule 52 (relacional1 -> empty .)
    )               reduce using rule 52 (relacional1 -> empty .)
    ;               reduce using rule 52 (relacional1 -> empty .)
    ,               reduce using rule 52 (relacional1 -> empty .)


state 83

    (56) operador -> SIM_LE .

    ID              reduce using rule 56 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 56 (operador -> SIM_LE .)
    REAL            reduce using rule 56 (operador -> SIM_LE .)
    LITERAL         reduce using rule 56 (operador -> SIM_LE .)
    (               reduce using rule 56 (operador -> SIM_LE .)
    +               reduce using rule 56 (operador -> SIM_LE .)
    -               reduce using rule 56 (operador -> SIM_LE .)
    error           reduce using rule 56 (operador -> SIM_LE .)


state 84

    (76) elemento -> ( expressao . )

    )               shift and go to state 116


state 85

    (42) expressao1 -> AND . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 117
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 86

    (43) expressao1 -> error . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 118
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 87

    (39) expressao -> valor expressao1 .

    ,               reduce using rule 39 (expressao -> valor expressao1 .)
    error           reduce using rule 39 (expressao -> valor expressao1 .)
    )               reduce using rule 39 (expressao -> valor expressao1 .)
    :               reduce using rule 39 (expressao -> valor expressao1 .)
    ;               reduce using rule 39 (expressao -> valor expressao1 .)


state 88

    (41) expressao1 -> OR . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 119
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 89

    (40) expressao1 -> empty .

    :               reduce using rule 40 (expressao1 -> empty .)
    )               reduce using rule 40 (expressao1 -> empty .)
    ;               reduce using rule 40 (expressao1 -> empty .)
    error           reduce using rule 40 (expressao1 -> empty .)
    ,               reduce using rule 40 (expressao1 -> empty .)


state 90

    (60) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 60 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 60 (aritmetica -> termo aritmetica1 .)


state 91

    (62) aritmetica1 -> + . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    fator                          shift and go to state 35
    termo                          shift and go to state 120
    elemento                       shift and go to state 43

state 92

    (63) aritmetica1 -> - . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    fator                          shift and go to state 35
    termo                          shift and go to state 121
    elemento                       shift and go to state 43

state 93

    (61) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 61 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 61 (aritmetica1 -> empty .)
    <               reduce using rule 61 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 61 (aritmetica1 -> empty .)
    >               reduce using rule 61 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 61 (aritmetica1 -> empty .)
    error           reduce using rule 61 (aritmetica1 -> empty .)
    OR              reduce using rule 61 (aritmetica1 -> empty .)
    AND             reduce using rule 61 (aritmetica1 -> empty .)
    :               reduce using rule 61 (aritmetica1 -> empty .)
    )               reduce using rule 61 (aritmetica1 -> empty .)
    ;               reduce using rule 61 (aritmetica1 -> empty .)
    ,               reduce using rule 61 (aritmetica1 -> empty .)


state 94

    (69) fator -> elemento fator1 .

    *               reduce using rule 69 (fator -> elemento fator1 .)
    /               reduce using rule 69 (fator -> elemento fator1 .)
    %               reduce using rule 69 (fator -> elemento fator1 .)
    +               reduce using rule 69 (fator -> elemento fator1 .)
    -               reduce using rule 69 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 69 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 69 (fator -> elemento fator1 .)
    <               reduce using rule 69 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 69 (fator -> elemento fator1 .)
    >               reduce using rule 69 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 69 (fator -> elemento fator1 .)
    error           reduce using rule 69 (fator -> elemento fator1 .)
    OR              reduce using rule 69 (fator -> elemento fator1 .)
    AND             reduce using rule 69 (fator -> elemento fator1 .)
    :               reduce using rule 69 (fator -> elemento fator1 .)
    )               reduce using rule 69 (fator -> elemento fator1 .)
    ;               reduce using rule 69 (fator -> elemento fator1 .)
    ,               reduce using rule 69 (fator -> elemento fator1 .)


state 95

    (71) fator1 -> SIM_POT . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 65

    elemento                       shift and go to state 122

state 96

    (70) fator1 -> empty .

    *               reduce using rule 70 (fator1 -> empty .)
    /               reduce using rule 70 (fator1 -> empty .)
    %               reduce using rule 70 (fator1 -> empty .)
    +               reduce using rule 70 (fator1 -> empty .)
    -               reduce using rule 70 (fator1 -> empty .)
    SIM_EQ          reduce using rule 70 (fator1 -> empty .)
    SIM_DIF         reduce using rule 70 (fator1 -> empty .)
    <               reduce using rule 70 (fator1 -> empty .)
    SIM_LE          reduce using rule 70 (fator1 -> empty .)
    >               reduce using rule 70 (fator1 -> empty .)
    SIM_GE          reduce using rule 70 (fator1 -> empty .)
    error           reduce using rule 70 (fator1 -> empty .)
    OR              reduce using rule 70 (fator1 -> empty .)
    AND             reduce using rule 70 (fator1 -> empty .)
    :               reduce using rule 70 (fator1 -> empty .)
    )               reduce using rule 70 (fator1 -> empty .)
    ;               reduce using rule 70 (fator1 -> empty .)
    ,               reduce using rule 70 (fator1 -> empty .)


state 97

    (80) elemento -> error expressao . error

    error           shift and go to state 123


state 98

    (49) valor -> error valor .
    (39) expressao -> valor . expressao1
    (40) expressao1 -> . empty
    (41) expressao1 -> . OR valor expressao1
    (42) expressao1 -> . AND valor expressao1
    (43) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
    :               reduce using rule 49 (valor -> error valor .)
    )               reduce using rule 49 (valor -> error valor .)
    ;               reduce using rule 49 (valor -> error valor .)
    ,               reduce using rule 49 (valor -> error valor .)
    OR              shift and go to state 88
    AND             shift and go to state 85
    error           shift and go to state 86

  ! OR              [ reduce using rule 49 (valor -> error valor .) ]
  ! AND             [ reduce using rule 49 (valor -> error valor .) ]
  ! error           [ reduce using rule 49 (valor -> error valor .) ]
  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 87
    empty                          shift and go to state 89

state 99

    (81) elemento -> error elemento .
    (69) fator -> elemento . fator1
    (70) fator1 -> . empty
    (71) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

  ! shift/reduce conflict for SIM_POT resolved as shift
  ! reduce/reduce conflict for * resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for / resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for % resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for + resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for - resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_EQ resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_DIF resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for < resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_LE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for > resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for SIM_GE resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for error resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for : resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ) resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for ; resolved using rule 6 (empty -> .)
  ! reduce/reduce conflict for , resolved using rule 6 (empty -> .)
    SIM_POT         shift and go to state 95
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! SIM_POT         [ reduce using rule 81 (elemento -> error elemento .) ]
  ! *               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! /               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! %               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! +               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! -               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! SIM_EQ          [ reduce using rule 81 (elemento -> error elemento .) ]
  ! SIM_DIF         [ reduce using rule 81 (elemento -> error elemento .) ]
  ! <               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! SIM_LE          [ reduce using rule 81 (elemento -> error elemento .) ]
  ! >               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! SIM_GE          [ reduce using rule 81 (elemento -> error elemento .) ]
  ! error           [ reduce using rule 81 (elemento -> error elemento .) ]
  ! OR              [ reduce using rule 81 (elemento -> error elemento .) ]
  ! AND             [ reduce using rule 81 (elemento -> error elemento .) ]
  ! :               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! )               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! ;               [ reduce using rule 81 (elemento -> error elemento .) ]
  ! ,               [ reduce using rule 81 (elemento -> error elemento .) ]

    fator1                         shift and go to state 94
    empty                          shift and go to state 96

state 100

    (47) valor -> NOT valor .

    OR              reduce using rule 47 (valor -> NOT valor .)
    AND             reduce using rule 47 (valor -> NOT valor .)
    error           reduce using rule 47 (valor -> NOT valor .)
    :               reduce using rule 47 (valor -> NOT valor .)
    )               reduce using rule 47 (valor -> NOT valor .)
    ;               reduce using rule 47 (valor -> NOT valor .)
    ,               reduce using rule 47 (valor -> NOT valor .)


state 101

    (23) cmdatribui -> listaidenti SIM_ATTR expressao . ;
    (24) cmdatribui -> listaidenti SIM_ATTR expressao . error

    ;               shift and go to state 124
    error           shift and go to state 125


state 102

    (25) cmdentrada -> INPUT ( listaidenti . ) ;
    (26) cmdentrada -> INPUT ( listaidenti . error ;
    (28) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 126
    error           shift and go to state 127


state 103

    (27) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 128


state 104

    (17) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 17 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 17 (listaindenti1 -> , listaidenti .)


state 105

    (18) listaindenti1 -> error listaidenti .

    SIM_ATTR        reduce using rule 18 (listaindenti1 -> error listaidenti .)
    )               reduce using rule 18 (listaindenti1 -> error listaidenti .)
    error           reduce using rule 18 (listaindenti1 -> error listaidenti .)


state 106

    (33) cmdselecao -> IF expressao : . [ listacmd ] elif else ;

    [               shift and go to state 129


state 107

    (19) listaexp -> expressao . listaexp1
    (20) listaexp1 -> . , listaexp
    (21) listaexp1 -> . empty
    (22) listaexp1 -> . error listaexp
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 131
    error           shift and go to state 132
    )               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    listaexp1                      shift and go to state 130
    empty                          shift and go to state 133

state 108

    (29) cmdsaida -> OUTPUT ( listaexp . ) ;
    (30) cmdsaida -> OUTPUT ( listaexp . error ;
    (32) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 134
    error           shift and go to state 135


state 109

    (31) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 136


state 110

    (79) elemento -> error .
    (80) elemento -> error . expressao error
    (81) elemento -> error . elemento
    (48) valor -> error .
    (49) valor -> error . valor
    (39) expressao -> . valor expressao1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1

  ! reduce/reduce conflict for OR resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 48 (valor -> error .)
  ! reduce/reduce conflict for error resolved using rule 48 (valor -> error .)
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 79 (elemento -> error .)
    *               reduce using rule 79 (elemento -> error .)
    /               reduce using rule 79 (elemento -> error .)
    %               reduce using rule 79 (elemento -> error .)
    SIM_EQ          reduce using rule 79 (elemento -> error .)
    SIM_DIF         reduce using rule 79 (elemento -> error .)
    <               reduce using rule 79 (elemento -> error .)
    SIM_LE          reduce using rule 79 (elemento -> error .)
    >               reduce using rule 79 (elemento -> error .)
    SIM_GE          reduce using rule 79 (elemento -> error .)
    :               reduce using rule 79 (elemento -> error .)
    )               reduce using rule 79 (elemento -> error .)
    ;               reduce using rule 79 (elemento -> error .)
    ,               reduce using rule 79 (elemento -> error .)
    OR              reduce using rule 48 (valor -> error .)
    AND             reduce using rule 48 (valor -> error .)
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30
    error           shift and go to state 110
    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46

  ! +               [ reduce using rule 79 (elemento -> error .) ]
  ! -               [ reduce using rule 79 (elemento -> error .) ]
  ! error           [ reduce using rule 79 (elemento -> error .) ]
  ! OR              [ reduce using rule 79 (elemento -> error .) ]
  ! AND             [ reduce using rule 79 (elemento -> error .) ]
  ! error           [ reduce using rule 48 (valor -> error .) ]

    expressao                      shift and go to state 97
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 98
    relacional                     shift and go to state 41
    elemento                       shift and go to state 99

state 111

    (38) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 137
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 112

    (68) termo1 -> % fator . termo1
    (65) termo1 -> . empty
    (66) termo1 -> . * fator termo1
    (67) termo1 -> . / fator termo1
    (68) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 71
    /               shift and go to state 72
    %               shift and go to state 70
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 138
    empty                          shift and go to state 73

state 113

    (66) termo1 -> * fator . termo1
    (65) termo1 -> . empty
    (66) termo1 -> . * fator termo1
    (67) termo1 -> . / fator termo1
    (68) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 71
    /               shift and go to state 72
    %               shift and go to state 70
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 139
    empty                          shift and go to state 73

state 114

    (67) termo1 -> / fator . termo1
    (65) termo1 -> . empty
    (66) termo1 -> . * fator termo1
    (67) termo1 -> . / fator termo1
    (68) termo1 -> . % fator termo1
    (6) empty -> .

    *               shift and go to state 71
    /               shift and go to state 72
    %               shift and go to state 70
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    termo1                         shift and go to state 140
    empty                          shift and go to state 73

state 115

    (51) relacional1 -> operador aritmetica .

    OR              reduce using rule 51 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 51 (relacional1 -> operador aritmetica .)
    error           reduce using rule 51 (relacional1 -> operador aritmetica .)
    :               reduce using rule 51 (relacional1 -> operador aritmetica .)
    )               reduce using rule 51 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 51 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 51 (relacional1 -> operador aritmetica .)


state 116

    (76) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 76 (elemento -> ( expressao ) .)
    *               reduce using rule 76 (elemento -> ( expressao ) .)
    /               reduce using rule 76 (elemento -> ( expressao ) .)
    %               reduce using rule 76 (elemento -> ( expressao ) .)
    +               reduce using rule 76 (elemento -> ( expressao ) .)
    -               reduce using rule 76 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 76 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 76 (elemento -> ( expressao ) .)
    <               reduce using rule 76 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 76 (elemento -> ( expressao ) .)
    >               reduce using rule 76 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 76 (elemento -> ( expressao ) .)
    error           reduce using rule 76 (elemento -> ( expressao ) .)
    OR              reduce using rule 76 (elemento -> ( expressao ) .)
    AND             reduce using rule 76 (elemento -> ( expressao ) .)
    :               reduce using rule 76 (elemento -> ( expressao ) .)
    )               reduce using rule 76 (elemento -> ( expressao ) .)
    ;               reduce using rule 76 (elemento -> ( expressao ) .)
    ,               reduce using rule 76 (elemento -> ( expressao ) .)


state 117

    (42) expressao1 -> AND valor . expressao1
    (40) expressao1 -> . empty
    (41) expressao1 -> . OR valor expressao1
    (42) expressao1 -> . AND valor expressao1
    (43) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 88
    AND             shift and go to state 85
    error           shift and go to state 86
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 141
    empty                          shift and go to state 89

state 118

    (43) expressao1 -> error valor . expressao1
    (40) expressao1 -> . empty
    (41) expressao1 -> . OR valor expressao1
    (42) expressao1 -> . AND valor expressao1
    (43) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 88
    AND             shift and go to state 85
    error           shift and go to state 86
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 142
    empty                          shift and go to state 89

state 119

    (41) expressao1 -> OR valor . expressao1
    (40) expressao1 -> . empty
    (41) expressao1 -> . OR valor expressao1
    (42) expressao1 -> . AND valor expressao1
    (43) expressao1 -> . error valor expressao1
    (6) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 88
    AND             shift and go to state 85
    error           shift and go to state 86
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

  ! error           [ reduce using rule 6 (empty -> .) ]

    expressao1                     shift and go to state 143
    empty                          shift and go to state 89

state 120

    (62) aritmetica1 -> + termo . aritmetica1
    (61) aritmetica1 -> . empty
    (62) aritmetica1 -> . + termo aritmetica1
    (63) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 91
    -               shift and go to state 92
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 144
    empty                          shift and go to state 93

state 121

    (63) aritmetica1 -> - termo . aritmetica1
    (61) aritmetica1 -> . empty
    (62) aritmetica1 -> . + termo aritmetica1
    (63) aritmetica1 -> . - termo aritmetica1
    (6) empty -> .

    +               shift and go to state 91
    -               shift and go to state 92
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    aritmetica1                    shift and go to state 145
    empty                          shift and go to state 93

state 122

    (71) fator1 -> SIM_POT elemento . fator1
    (70) fator1 -> . empty
    (71) fator1 -> . SIM_POT elemento fator1
    (6) empty -> .

    SIM_POT         shift and go to state 95
    *               reduce using rule 6 (empty -> .)
    /               reduce using rule 6 (empty -> .)
    %               reduce using rule 6 (empty -> .)
    +               reduce using rule 6 (empty -> .)
    -               reduce using rule 6 (empty -> .)
    SIM_EQ          reduce using rule 6 (empty -> .)
    SIM_DIF         reduce using rule 6 (empty -> .)
    <               reduce using rule 6 (empty -> .)
    SIM_LE          reduce using rule 6 (empty -> .)
    >               reduce using rule 6 (empty -> .)
    SIM_GE          reduce using rule 6 (empty -> .)
    error           reduce using rule 6 (empty -> .)
    OR              reduce using rule 6 (empty -> .)
    AND             reduce using rule 6 (empty -> .)
    :               reduce using rule 6 (empty -> .)
    )               reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)
    ,               reduce using rule 6 (empty -> .)

    fator1                         shift and go to state 146
    empty                          shift and go to state 96

state 123

    (80) elemento -> error expressao error .

    SIM_POT         reduce using rule 80 (elemento -> error expressao error .)
    *               reduce using rule 80 (elemento -> error expressao error .)
    /               reduce using rule 80 (elemento -> error expressao error .)
    %               reduce using rule 80 (elemento -> error expressao error .)
    +               reduce using rule 80 (elemento -> error expressao error .)
    -               reduce using rule 80 (elemento -> error expressao error .)
    SIM_EQ          reduce using rule 80 (elemento -> error expressao error .)
    SIM_DIF         reduce using rule 80 (elemento -> error expressao error .)
    <               reduce using rule 80 (elemento -> error expressao error .)
    SIM_LE          reduce using rule 80 (elemento -> error expressao error .)
    >               reduce using rule 80 (elemento -> error expressao error .)
    SIM_GE          reduce using rule 80 (elemento -> error expressao error .)
    error           reduce using rule 80 (elemento -> error expressao error .)
    OR              reduce using rule 80 (elemento -> error expressao error .)
    AND             reduce using rule 80 (elemento -> error expressao error .)
    :               reduce using rule 80 (elemento -> error expressao error .)
    )               reduce using rule 80 (elemento -> error expressao error .)
    ;               reduce using rule 80 (elemento -> error expressao error .)
    ,               reduce using rule 80 (elemento -> error expressao error .)


state 124

    (23) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 125

    (24) cmdatribui -> listaidenti SIM_ATTR expressao error .

    INPUT           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    OUTPUT          reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    IF              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    WHILE           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ID              reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    ]               reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)
    error           reduce using rule 24 (cmdatribui -> listaidenti SIM_ATTR expressao error .)


state 126

    (25) cmdentrada -> INPUT ( listaidenti ) . ;
    (28) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 148
    error           shift and go to state 147


state 127

    (26) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 149


state 128

    (27) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 150


state 129

    (33) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 151
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 130

    (19) listaexp -> expressao listaexp1 .

    )               reduce using rule 19 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 19 (listaexp -> expressao listaexp1 .)


state 131

    (20) listaexp1 -> , . listaexp
    (19) listaexp -> . expressao listaexp1
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 152
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 132

    (22) listaexp1 -> error . listaexp
    (19) listaexp -> . expressao listaexp1
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    expressao                      shift and go to state 107
    listaexp                       shift and go to state 153
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    aritmetica                     shift and go to state 36
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 133

    (21) listaexp1 -> empty .

    )               reduce using rule 21 (listaexp1 -> empty .)
    error           reduce using rule 21 (listaexp1 -> empty .)


state 134

    (29) cmdsaida -> OUTPUT ( listaexp ) . ;
    (32) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 155
    error           shift and go to state 154


state 135

    (30) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 156


state 136

    (31) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 157


state 137

    (38) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;

    ]               shift and go to state 158


state 138

    (68) termo1 -> % fator termo1 .

    +               reduce using rule 68 (termo1 -> % fator termo1 .)
    -               reduce using rule 68 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 68 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 68 (termo1 -> % fator termo1 .)
    <               reduce using rule 68 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 68 (termo1 -> % fator termo1 .)
    >               reduce using rule 68 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 68 (termo1 -> % fator termo1 .)
    error           reduce using rule 68 (termo1 -> % fator termo1 .)
    OR              reduce using rule 68 (termo1 -> % fator termo1 .)
    AND             reduce using rule 68 (termo1 -> % fator termo1 .)
    :               reduce using rule 68 (termo1 -> % fator termo1 .)
    )               reduce using rule 68 (termo1 -> % fator termo1 .)
    ;               reduce using rule 68 (termo1 -> % fator termo1 .)
    ,               reduce using rule 68 (termo1 -> % fator termo1 .)


state 139

    (66) termo1 -> * fator termo1 .

    +               reduce using rule 66 (termo1 -> * fator termo1 .)
    -               reduce using rule 66 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 66 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 66 (termo1 -> * fator termo1 .)
    <               reduce using rule 66 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 66 (termo1 -> * fator termo1 .)
    >               reduce using rule 66 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 66 (termo1 -> * fator termo1 .)
    error           reduce using rule 66 (termo1 -> * fator termo1 .)
    OR              reduce using rule 66 (termo1 -> * fator termo1 .)
    AND             reduce using rule 66 (termo1 -> * fator termo1 .)
    :               reduce using rule 66 (termo1 -> * fator termo1 .)
    )               reduce using rule 66 (termo1 -> * fator termo1 .)
    ;               reduce using rule 66 (termo1 -> * fator termo1 .)
    ,               reduce using rule 66 (termo1 -> * fator termo1 .)


state 140

    (67) termo1 -> / fator termo1 .

    +               reduce using rule 67 (termo1 -> / fator termo1 .)
    -               reduce using rule 67 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 67 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 67 (termo1 -> / fator termo1 .)
    <               reduce using rule 67 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 67 (termo1 -> / fator termo1 .)
    >               reduce using rule 67 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 67 (termo1 -> / fator termo1 .)
    error           reduce using rule 67 (termo1 -> / fator termo1 .)
    OR              reduce using rule 67 (termo1 -> / fator termo1 .)
    AND             reduce using rule 67 (termo1 -> / fator termo1 .)
    :               reduce using rule 67 (termo1 -> / fator termo1 .)
    )               reduce using rule 67 (termo1 -> / fator termo1 .)
    ;               reduce using rule 67 (termo1 -> / fator termo1 .)
    ,               reduce using rule 67 (termo1 -> / fator termo1 .)


state 141

    (42) expressao1 -> AND valor expressao1 .

    :               reduce using rule 42 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 42 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 42 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 42 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 42 (expressao1 -> AND valor expressao1 .)


state 142

    (43) expressao1 -> error valor expressao1 .

    :               reduce using rule 43 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 43 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 43 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 43 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 43 (expressao1 -> error valor expressao1 .)


state 143

    (41) expressao1 -> OR valor expressao1 .

    :               reduce using rule 41 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 41 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 41 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 41 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 41 (expressao1 -> OR valor expressao1 .)


state 144

    (62) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 62 (aritmetica1 -> + termo aritmetica1 .)


state 145

    (63) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 63 (aritmetica1 -> - termo aritmetica1 .)


state 146

    (71) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 71 (fator1 -> SIM_POT elemento fator1 .)


state 147

    (28) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 28 (cmdentrada -> INPUT ( listaidenti ) error .)


state 148

    (25) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 149

    (26) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 26 (cmdentrada -> INPUT ( listaidenti error ; .)


state 150

    (27) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 27 (cmdentrada -> INPUT error listaidenti ) ; .)


state 151

    (33) cmdselecao -> IF expressao : [ listacmd . ] elif else ;

    ]               shift and go to state 159


state 152

    (20) listaexp1 -> , listaexp .

    )               reduce using rule 20 (listaexp1 -> , listaexp .)
    error           reduce using rule 20 (listaexp1 -> , listaexp .)


state 153

    (22) listaexp1 -> error listaexp .

    )               reduce using rule 22 (listaexp1 -> error listaexp .)
    error           reduce using rule 22 (listaexp1 -> error listaexp .)


state 154

    (32) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 32 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 155

    (29) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 156

    (30) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 157

    (31) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 31 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 158

    (38) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (36) else -> . empty
    (37) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 160
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 161

state 159

    (33) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (34) elif -> . empty
    (35) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 164
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 163
    empty                          shift and go to state 165

state 160

    (37) else -> ELSE . : [ listacmd ]

    :               shift and go to state 166


state 161

    (38) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;

    ;               shift and go to state 167


state 162

    (36) else -> empty .

    ;               reduce using rule 36 (else -> empty .)


state 163

    (33) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (36) else -> . empty
    (37) else -> . ELSE : [ listacmd ]
    (6) empty -> .

    ELSE            shift and go to state 160
    ;               reduce using rule 6 (empty -> .)

    empty                          shift and go to state 162
    else                           shift and go to state 168

state 164

    (35) elif -> ELIF . expressao : [ listacmd ] elif
    (39) expressao -> . valor expressao1
    (44) valor -> . relacional
    (45) valor -> . TRUE
    (46) valor -> . FALSE
    (47) valor -> . NOT valor
    (48) valor -> . error
    (49) valor -> . error valor
    (50) relacional -> . aritmetica relacional1
    (60) aritmetica -> . termo aritmetica1
    (64) termo -> . fator termo1
    (69) fator -> . elemento fator1
    (72) elemento -> . ID
    (73) elemento -> . INTEIRO
    (74) elemento -> . REAL
    (75) elemento -> . LITERAL
    (76) elemento -> . ( expressao )
    (77) elemento -> . + elemento
    (78) elemento -> . - elemento
    (79) elemento -> . error
    (80) elemento -> . error expressao error
    (81) elemento -> . error elemento

    TRUE            shift and go to state 31
    FALSE           shift and go to state 44
    NOT             shift and go to state 46
    error           shift and go to state 45
    ID              shift and go to state 42
    INTEIRO         shift and go to state 32
    REAL            shift and go to state 29
    LITERAL         shift and go to state 39
    (               shift and go to state 37
    +               shift and go to state 34
    -               shift and go to state 30

    aritmetica                     shift and go to state 36
    expressao                      shift and go to state 169
    fator                          shift and go to state 35
    termo                          shift and go to state 40
    valor                          shift and go to state 38
    relacional                     shift and go to state 41
    elemento                       shift and go to state 43

state 165

    (34) elif -> empty .

    ELSE            reduce using rule 34 (elif -> empty .)
    ;               reduce using rule 34 (elif -> empty .)


state 166

    (37) else -> ELSE : . [ listacmd ]

    [               shift and go to state 170


state 167

    (38) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 38 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 168

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 171


state 169

    (35) elif -> ELIF expressao . : [ listacmd ] elif

    :               shift and go to state 172


state 170

    (37) else -> ELSE : [ . listacmd ]
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 173
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 171

    (33) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 172

    (35) elif -> ELIF expressao : . [ listacmd ] elif

    [               shift and go to state 174


state 173

    (37) else -> ELSE : [ listacmd . ]

    ]               shift and go to state 175


state 174

    (35) elif -> ELIF expressao : [ . listacmd ] elif
    (7) listacmd -> . comando listacmd1
    (10) comando -> . cmdatribui
    (11) comando -> . cmdentrada
    (12) comando -> . cmdsaida
    (13) comando -> . cmdselecao
    (14) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdatribui -> . listaidenti SIM_ATTR expressao error
    (25) cmdentrada -> . INPUT ( listaidenti ) ;
    (26) cmdentrada -> . INPUT ( listaidenti error ;
    (27) cmdentrada -> . INPUT error listaidenti ) ;
    (28) cmdentrada -> . INPUT ( listaidenti ) error
    (29) cmdsaida -> . OUTPUT ( listaexp ) ;
    (30) cmdsaida -> . OUTPUT ( listaexp error ;
    (31) cmdsaida -> . OUTPUT error listaexp ) ;
    (32) cmdsaida -> . OUTPUT ( listaexp ) error
    (33) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (15) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 20
    OUTPUT          shift and go to state 25
    IF              shift and go to state 22
    WHILE           shift and go to state 15
    ID              shift and go to state 21

    listaidenti                    shift and go to state 19
    cmdrepeticao                   shift and go to state 23
    cmdselecao                     shift and go to state 13
    cmdentrada                     shift and go to state 14
    listacmd                       shift and go to state 176
    cmdsaida                       shift and go to state 18
    comando                        shift and go to state 24
    cmdatribui                     shift and go to state 17

state 175

    (37) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 37 (else -> ELSE : [ listacmd ] .)


state 176

    (35) elif -> ELIF expressao : [ listacmd . ] elif

    ]               shift and go to state 177


state 177

    (35) elif -> ELIF expressao : [ listacmd ] . elif
    (34) elif -> . empty
    (35) elif -> . ELIF expressao : [ listacmd ] elif
    (6) empty -> .

    ELIF            shift and go to state 164
    ELSE            reduce using rule 6 (empty -> .)
    ;               reduce using rule 6 (empty -> .)

    elif                           shift and go to state 178
    empty                          shift and go to state 165

state 178

    (35) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 35 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 35 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 21 resolved as shift
WARNING: shift/reduce conflict for error in state 36 resolved as shift
WARNING: shift/reduce conflict for error in state 38 resolved as shift
WARNING: shift/reduce conflict for error in state 45 resolved as shift
WARNING: shift/reduce conflict for + in state 45 resolved as shift
WARNING: shift/reduce conflict for - in state 45 resolved as shift
WARNING: shift/reduce conflict for + in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 65 resolved as shift
WARNING: shift/reduce conflict for error in state 65 resolved as shift
WARNING: shift/reduce conflict for OR in state 98 resolved as shift
WARNING: shift/reduce conflict for AND in state 98 resolved as shift
WARNING: shift/reduce conflict for error in state 98 resolved as shift
WARNING: shift/reduce conflict for error in state 98 resolved as shift
WARNING: shift/reduce conflict for SIM_POT in state 99 resolved as shift
WARNING: shift/reduce conflict for error in state 107 resolved as shift
WARNING: shift/reduce conflict for + in state 110 resolved as shift
WARNING: shift/reduce conflict for - in state 110 resolved as shift
WARNING: shift/reduce conflict for error in state 110 resolved as shift
WARNING: shift/reduce conflict for error in state 117 resolved as shift
WARNING: shift/reduce conflict for error in state 118 resolved as shift
WARNING: shift/reduce conflict for error in state 119 resolved as shift
WARNING: reduce/reduce conflict in state 45 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 45
WARNING: reduce/reduce conflict in state 99 resolved using rule (empty -> <empty>)
WARNING: rejected rule (elemento -> error elemento) in state 99
WARNING: reduce/reduce conflict in state 110 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 110
WARNING: Rule (elemento -> error elemento) is never reduced
