Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     empty -> <empty>
Rule 3     listacmd -> comando listacmd1
Rule 4     listacmd1 -> empty
Rule 5     listacmd1 -> listacmd
Rule 6     comando -> cmdatribui
Rule 7     comando -> cmdentrada
Rule 8     comando -> cmdsaida
Rule 9     comando -> cmdselecao
Rule 10    comando -> cmdrepeticao
Rule 11    listaidenti -> ID listaindenti1
Rule 12    listaindenti1 -> empty
Rule 13    listaindenti1 -> , listaidenti
Rule 14    listaexp -> expressao listaexp1
Rule 15    listaexp1 -> , listaexp
Rule 16    listaexp1 -> empty
Rule 17    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 18    cmdentrada -> INPUT ( listaidenti ) ;
Rule 19    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 20    cmdsaida -> OUTPUT ( listaexp error ;
Rule 21    cmdsaida -> OUTPUT error listaexp ) ;
Rule 22    cmdsaida -> OUTPUT ( listaexp ) error
Rule 23    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 24    elif -> empty
Rule 25    elif -> ELIF expressao : [ listacmd ] elif
Rule 26    else -> empty
Rule 27    else -> ELSE : [ listacmd ]
Rule 28    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 29    expressao -> valor expressao1
Rule 30    expressao1 -> empty
Rule 31    expressao1 -> OR valor expressao1
Rule 32    expressao1 -> AND valor expressao1
Rule 33    expressao1 -> error valor expressao1
Rule 34    valor -> relacional
Rule 35    valor -> TRUE
Rule 36    valor -> FALSE
Rule 37    valor -> NOT valor
Rule 38    valor -> error
Rule 39    valor -> error valor
Rule 40    relacional -> aritmetica relacional1
Rule 41    relacional1 -> operador aritmetica
Rule 42    relacional1 -> empty
Rule 43    operador -> SIM_EQ
Rule 44    operador -> SIM_DIF
Rule 45    operador -> <
Rule 46    operador -> SIM_LE
Rule 47    operador -> >
Rule 48    operador -> SIM_GE
Rule 49    operador -> error
Rule 50    aritmetica -> termo aritmetica1
Rule 51    aritmetica1 -> empty
Rule 52    aritmetica1 -> + termo aritmetica1
Rule 53    aritmetica1 -> - termo aritmetica1
Rule 54    termo -> fator termo1
Rule 55    termo1 -> empty
Rule 56    termo1 -> * fator termo1
Rule 57    termo1 -> / fator termo1
Rule 58    termo1 -> % fator termo1
Rule 59    fator -> elemento fator1
Rule 60    fator1 -> empty
Rule 61    fator1 -> SIM_POT elemento fator1
Rule 62    elemento -> ID
Rule 63    elemento -> INTEIRO
Rule 64    elemento -> REAL
Rule 65    elemento -> LITERAL
Rule 66    elemento -> ( expressao )
Rule 67    elemento -> + elemento
Rule 68    elemento -> - elemento
Rule 69    elemento -> error
Rule 70    elemento -> error expressao error
Rule 71    elemento -> error elemento

Terminals, with rules where they appear

%                    : 58
(                    : 18 19 20 22 66
)                    : 18 19 21 22 66
*                    : 56
+                    : 52 67
,                    : 13 15
-                    : 53 68
/                    : 57
:                    : 1 23 25 27 28
;                    : 17 18 19 20 21 23 28
<                    : 45
>                    : 47
AND                  : 32
BINARIO              : 
DEF                  : 1
ELIF                 : 25
ELSE                 : 27
FALSE                : 36
HEXADECIMAL          : 
ID                   : 1 11 62
IF                   : 23
INPUT                : 18
INTEIRO              : 63
LITERAL              : 65
NOT                  : 37
OCTAL                : 
OR                   : 31
OUTPUT               : 19 20 21 22
REAL                 : 64
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 17
SIM_DIF              : 44
SIM_EQ               : 43
SIM_GE               : 48
SIM_LE               : 46
SIM_POT              : 61
TRUE                 : 35
WHILE                : 28
[                    : 1 23 25 27 28
]                    : 1 23 25 27 28
error                : 20 21 22 33 38 39 49 69 70 70 71

Nonterminals, with rules where they appear

aritmetica           : 40 41
aritmetica1          : 50 52 53
cmdatribui           : 6
cmdentrada           : 7
cmdrepeticao         : 10
cmdsaida             : 8
cmdselecao           : 9
comando              : 3
elemento             : 59 61 67 68 71
elif                 : 23 25
else                 : 23 28
empty                : 4 12 16 24 26 30 42 51 55 60
expressao            : 14 17 23 25 28 66 70
expressao1           : 29 31 32 33
fator                : 54 56 57 58
fator1               : 59 61
listacmd             : 1 5 23 25 27 28
listacmd1            : 3
listaexp             : 15 19 20 21 22
listaexp1            : 14
listaidenti          : 13 17 18
listaindenti1        : 11
operador             : 41
programa             : 0
relacional           : 34
relacional1          : 40
termo                : 50 52 53
termo1               : 54 56 57 58
valor                : 29 31 32 33 37 39

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]

    DEF             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> DEF . ID : [ listacmd ]

    ID              shift and go to state 3


state 3

    (1) programa -> DEF ID . : [ listacmd ]

    :               shift and go to state 4


state 4

    (1) programa -> DEF ID : . [ listacmd ]

    [               shift and go to state 5


state 5

    (1) programa -> DEF ID : [ . listacmd ]
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 9
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 6

    (9) comando -> cmdselecao .

    INPUT           reduce using rule 9 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 9 (comando -> cmdselecao .)
    IF              reduce using rule 9 (comando -> cmdselecao .)
    WHILE           reduce using rule 9 (comando -> cmdselecao .)
    ID              reduce using rule 9 (comando -> cmdselecao .)
    ]               reduce using rule 9 (comando -> cmdselecao .)


state 7

    (7) comando -> cmdentrada .

    INPUT           reduce using rule 7 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 7 (comando -> cmdentrada .)
    IF              reduce using rule 7 (comando -> cmdentrada .)
    WHILE           reduce using rule 7 (comando -> cmdentrada .)
    ID              reduce using rule 7 (comando -> cmdentrada .)
    ]               reduce using rule 7 (comando -> cmdentrada .)


state 8

    (28) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 23
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 9

    (1) programa -> DEF ID : [ listacmd . ]

    ]               shift and go to state 37


state 10

    (6) comando -> cmdatribui .

    INPUT           reduce using rule 6 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 6 (comando -> cmdatribui .)
    IF              reduce using rule 6 (comando -> cmdatribui .)
    WHILE           reduce using rule 6 (comando -> cmdatribui .)
    ID              reduce using rule 6 (comando -> cmdatribui .)
    ]               reduce using rule 6 (comando -> cmdatribui .)


state 11

    (8) comando -> cmdsaida .

    INPUT           reduce using rule 8 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 8 (comando -> cmdsaida .)
    IF              reduce using rule 8 (comando -> cmdsaida .)
    WHILE           reduce using rule 8 (comando -> cmdsaida .)
    ID              reduce using rule 8 (comando -> cmdsaida .)
    ]               reduce using rule 8 (comando -> cmdsaida .)


state 12

    (17) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 38


state 13

    (18) cmdentrada -> INPUT . ( listaidenti ) ;

    (               shift and go to state 39


state 14

    (11) listaidenti -> ID . listaindenti1
    (12) listaindenti1 -> . empty
    (13) listaindenti1 -> . , listaidenti
    (2) empty -> .

    ,               shift and go to state 42
    SIM_ATTR        reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)

    listaindenti1                  shift and go to state 40
    empty                          shift and go to state 41

state 15

    (23) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 43
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 16

    (10) comando -> cmdrepeticao .

    INPUT           reduce using rule 10 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 10 (comando -> cmdrepeticao .)
    IF              reduce using rule 10 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 10 (comando -> cmdrepeticao .)
    ID              reduce using rule 10 (comando -> cmdrepeticao .)
    ]               reduce using rule 10 (comando -> cmdrepeticao .)


state 17

    (3) listacmd -> comando . listacmd1
    (4) listacmd1 -> . empty
    (5) listacmd1 -> . listacmd
    (2) empty -> .
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    ]               reduce using rule 2 (empty -> .)
    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    listacmd1                      shift and go to state 45
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 44
    cmdsaida                       shift and go to state 11
    empty                          shift and go to state 46
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 18

    (19) cmdsaida -> OUTPUT . ( listaexp ) ;
    (20) cmdsaida -> OUTPUT . ( listaexp error ;
    (21) cmdsaida -> OUTPUT . error listaexp ) ;
    (22) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 47
    error           shift and go to state 48


state 19

    (64) elemento -> REAL .

    SIM_POT         reduce using rule 64 (elemento -> REAL .)
    *               reduce using rule 64 (elemento -> REAL .)
    /               reduce using rule 64 (elemento -> REAL .)
    %               reduce using rule 64 (elemento -> REAL .)
    +               reduce using rule 64 (elemento -> REAL .)
    -               reduce using rule 64 (elemento -> REAL .)
    SIM_EQ          reduce using rule 64 (elemento -> REAL .)
    SIM_DIF         reduce using rule 64 (elemento -> REAL .)
    <               reduce using rule 64 (elemento -> REAL .)
    SIM_LE          reduce using rule 64 (elemento -> REAL .)
    >               reduce using rule 64 (elemento -> REAL .)
    SIM_GE          reduce using rule 64 (elemento -> REAL .)
    error           reduce using rule 64 (elemento -> REAL .)
    OR              reduce using rule 64 (elemento -> REAL .)
    AND             reduce using rule 64 (elemento -> REAL .)
    :               reduce using rule 64 (elemento -> REAL .)
    )               reduce using rule 64 (elemento -> REAL .)
    ;               reduce using rule 64 (elemento -> REAL .)
    ,               reduce using rule 64 (elemento -> REAL .)


state 20

    (68) elemento -> - . elemento
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 50

state 21

    (35) valor -> TRUE .

    OR              reduce using rule 35 (valor -> TRUE .)
    AND             reduce using rule 35 (valor -> TRUE .)
    error           reduce using rule 35 (valor -> TRUE .)
    )               reduce using rule 35 (valor -> TRUE .)
    :               reduce using rule 35 (valor -> TRUE .)
    ;               reduce using rule 35 (valor -> TRUE .)
    ,               reduce using rule 35 (valor -> TRUE .)


state 22

    (63) elemento -> INTEIRO .

    SIM_POT         reduce using rule 63 (elemento -> INTEIRO .)
    *               reduce using rule 63 (elemento -> INTEIRO .)
    /               reduce using rule 63 (elemento -> INTEIRO .)
    %               reduce using rule 63 (elemento -> INTEIRO .)
    +               reduce using rule 63 (elemento -> INTEIRO .)
    -               reduce using rule 63 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 63 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 63 (elemento -> INTEIRO .)
    <               reduce using rule 63 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 63 (elemento -> INTEIRO .)
    >               reduce using rule 63 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 63 (elemento -> INTEIRO .)
    error           reduce using rule 63 (elemento -> INTEIRO .)
    OR              reduce using rule 63 (elemento -> INTEIRO .)
    AND             reduce using rule 63 (elemento -> INTEIRO .)
    :               reduce using rule 63 (elemento -> INTEIRO .)
    )               reduce using rule 63 (elemento -> INTEIRO .)
    ;               reduce using rule 63 (elemento -> INTEIRO .)
    ,               reduce using rule 63 (elemento -> INTEIRO .)


state 23

    (28) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;

    :               shift and go to state 51


state 24

    (67) elemento -> + . elemento
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 52

state 25

    (54) termo -> fator . termo1
    (55) termo1 -> . empty
    (56) termo1 -> . * fator termo1
    (57) termo1 -> . / fator termo1
    (58) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 55
    /               shift and go to state 56
    %               shift and go to state 54
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 53
    empty                          shift and go to state 57

state 26

    (40) relacional -> aritmetica . relacional1
    (41) relacional1 -> . operador aritmetica
    (42) relacional1 -> . empty
    (43) operador -> . SIM_EQ
    (44) operador -> . SIM_DIF
    (45) operador -> . <
    (46) operador -> . SIM_LE
    (47) operador -> . >
    (48) operador -> . SIM_GE
    (49) operador -> . error
    (2) empty -> .

  ! shift/reduce conflict for error resolved as shift
    SIM_EQ          shift and go to state 58
    SIM_DIF         shift and go to state 61
    <               shift and go to state 65
    SIM_LE          shift and go to state 67
    >               shift and go to state 64
    SIM_GE          shift and go to state 60
    error           shift and go to state 62
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! error           [ reduce using rule 2 (empty -> .) ]

    relacional1                    shift and go to state 63
    operador                       shift and go to state 59
    empty                          shift and go to state 66

state 27

    (66) elemento -> ( . expressao )
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 68
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 28

    (29) expressao -> valor . expressao1
    (30) expressao1 -> . empty
    (31) expressao1 -> . OR valor expressao1
    (32) expressao1 -> . AND valor expressao1
    (33) expressao1 -> . error valor expressao1
    (2) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 72
    AND             shift and go to state 69
    error           shift and go to state 70
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! error           [ reduce using rule 2 (empty -> .) ]

    expressao1                     shift and go to state 71
    empty                          shift and go to state 73

state 29

    (65) elemento -> LITERAL .

    SIM_POT         reduce using rule 65 (elemento -> LITERAL .)
    *               reduce using rule 65 (elemento -> LITERAL .)
    /               reduce using rule 65 (elemento -> LITERAL .)
    %               reduce using rule 65 (elemento -> LITERAL .)
    +               reduce using rule 65 (elemento -> LITERAL .)
    -               reduce using rule 65 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 65 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 65 (elemento -> LITERAL .)
    <               reduce using rule 65 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 65 (elemento -> LITERAL .)
    >               reduce using rule 65 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 65 (elemento -> LITERAL .)
    error           reduce using rule 65 (elemento -> LITERAL .)
    OR              reduce using rule 65 (elemento -> LITERAL .)
    AND             reduce using rule 65 (elemento -> LITERAL .)
    :               reduce using rule 65 (elemento -> LITERAL .)
    )               reduce using rule 65 (elemento -> LITERAL .)
    ;               reduce using rule 65 (elemento -> LITERAL .)
    ,               reduce using rule 65 (elemento -> LITERAL .)


state 30

    (50) aritmetica -> termo . aritmetica1
    (51) aritmetica1 -> . empty
    (52) aritmetica1 -> . + termo aritmetica1
    (53) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 75
    -               shift and go to state 76
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 74
    empty                          shift and go to state 77

state 31

    (34) valor -> relacional .

    OR              reduce using rule 34 (valor -> relacional .)
    AND             reduce using rule 34 (valor -> relacional .)
    error           reduce using rule 34 (valor -> relacional .)
    )               reduce using rule 34 (valor -> relacional .)
    :               reduce using rule 34 (valor -> relacional .)
    ;               reduce using rule 34 (valor -> relacional .)
    ,               reduce using rule 34 (valor -> relacional .)


state 32

    (62) elemento -> ID .

    SIM_POT         reduce using rule 62 (elemento -> ID .)
    *               reduce using rule 62 (elemento -> ID .)
    /               reduce using rule 62 (elemento -> ID .)
    %               reduce using rule 62 (elemento -> ID .)
    +               reduce using rule 62 (elemento -> ID .)
    -               reduce using rule 62 (elemento -> ID .)
    SIM_EQ          reduce using rule 62 (elemento -> ID .)
    SIM_DIF         reduce using rule 62 (elemento -> ID .)
    <               reduce using rule 62 (elemento -> ID .)
    SIM_LE          reduce using rule 62 (elemento -> ID .)
    >               reduce using rule 62 (elemento -> ID .)
    SIM_GE          reduce using rule 62 (elemento -> ID .)
    error           reduce using rule 62 (elemento -> ID .)
    OR              reduce using rule 62 (elemento -> ID .)
    AND             reduce using rule 62 (elemento -> ID .)
    :               reduce using rule 62 (elemento -> ID .)
    )               reduce using rule 62 (elemento -> ID .)
    ;               reduce using rule 62 (elemento -> ID .)
    ,               reduce using rule 62 (elemento -> ID .)


state 33

    (59) fator -> elemento . fator1
    (60) fator1 -> . empty
    (61) fator1 -> . SIM_POT elemento fator1
    (2) empty -> .

    SIM_POT         shift and go to state 79
    *               reduce using rule 2 (empty -> .)
    /               reduce using rule 2 (empty -> .)
    %               reduce using rule 2 (empty -> .)
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    fator1                         shift and go to state 78
    empty                          shift and go to state 80

state 34

    (36) valor -> FALSE .

    OR              reduce using rule 36 (valor -> FALSE .)
    AND             reduce using rule 36 (valor -> FALSE .)
    error           reduce using rule 36 (valor -> FALSE .)
    )               reduce using rule 36 (valor -> FALSE .)
    :               reduce using rule 36 (valor -> FALSE .)
    ;               reduce using rule 36 (valor -> FALSE .)
    ,               reduce using rule 36 (valor -> FALSE .)


state 35

    (38) valor -> error .
    (39) valor -> error . valor
    (69) elemento -> error .
    (70) elemento -> error . expressao error
    (71) elemento -> error . elemento
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (29) expressao -> . valor expressao1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1

  ! reduce/reduce conflict for error resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for OR resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for ) resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for , resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for ; resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for : resolved using rule 38 (valor -> error .)
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
    OR              reduce using rule 38 (valor -> error .)
    AND             reduce using rule 38 (valor -> error .)
    )               reduce using rule 38 (valor -> error .)
    :               reduce using rule 38 (valor -> error .)
    ;               reduce using rule 38 (valor -> error .)
    ,               reduce using rule 38 (valor -> error .)
    SIM_POT         reduce using rule 69 (elemento -> error .)
    *               reduce using rule 69 (elemento -> error .)
    /               reduce using rule 69 (elemento -> error .)
    %               reduce using rule 69 (elemento -> error .)
    SIM_EQ          reduce using rule 69 (elemento -> error .)
    SIM_DIF         reduce using rule 69 (elemento -> error .)
    <               reduce using rule 69 (elemento -> error .)
    SIM_LE          reduce using rule 69 (elemento -> error .)
    >               reduce using rule 69 (elemento -> error .)
    SIM_GE          reduce using rule 69 (elemento -> error .)
    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

  ! error           [ reduce using rule 38 (valor -> error .) ]
  ! +               [ reduce using rule 69 (elemento -> error .) ]
  ! -               [ reduce using rule 69 (elemento -> error .) ]
  ! error           [ reduce using rule 69 (elemento -> error .) ]
  ! OR              [ reduce using rule 69 (elemento -> error .) ]
  ! AND             [ reduce using rule 69 (elemento -> error .) ]
  ! )               [ reduce using rule 69 (elemento -> error .) ]
  ! ,               [ reduce using rule 69 (elemento -> error .) ]
  ! ;               [ reduce using rule 69 (elemento -> error .) ]
  ! :               [ reduce using rule 69 (elemento -> error .) ]

    expressao                      shift and go to state 81
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 82
    relacional                     shift and go to state 31
    elemento                       shift and go to state 83

state 36

    (37) valor -> NOT . valor
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 84
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 37

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 38

    (17) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 85
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 39

    (18) cmdentrada -> INPUT ( . listaidenti ) ;
    (11) listaidenti -> . ID listaindenti1

    ID              shift and go to state 14

    listaidenti                    shift and go to state 86

state 40

    (11) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 11 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 11 (listaidenti -> ID listaindenti1 .)


state 41

    (12) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 12 (listaindenti1 -> empty .)
    )               reduce using rule 12 (listaindenti1 -> empty .)


state 42

    (13) listaindenti1 -> , . listaidenti
    (11) listaidenti -> . ID listaindenti1

    ID              shift and go to state 14

    listaidenti                    shift and go to state 87

state 43

    (23) cmdselecao -> IF expressao . : [ listacmd ] elif else ;

    :               shift and go to state 88


state 44

    (5) listacmd1 -> listacmd .

    ]               reduce using rule 5 (listacmd1 -> listacmd .)


state 45

    (3) listacmd -> comando listacmd1 .

    ]               reduce using rule 3 (listacmd -> comando listacmd1 .)


state 46

    (4) listacmd1 -> empty .

    ]               reduce using rule 4 (listacmd1 -> empty .)


state 47

    (19) cmdsaida -> OUTPUT ( . listaexp ) ;
    (20) cmdsaida -> OUTPUT ( . listaexp error ;
    (22) cmdsaida -> OUTPUT ( . listaexp ) error
    (14) listaexp -> . expressao listaexp1
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 89
    listaexp                       shift and go to state 90
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 48

    (21) cmdsaida -> OUTPUT error . listaexp ) ;
    (14) listaexp -> . expressao listaexp1
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 89
    listaexp                       shift and go to state 91
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 49

    (69) elemento -> error .
    (70) elemento -> error . expressao error
    (71) elemento -> error . elemento
    (29) expressao -> . valor expressao1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 69 (elemento -> error .)
    *               reduce using rule 69 (elemento -> error .)
    /               reduce using rule 69 (elemento -> error .)
    %               reduce using rule 69 (elemento -> error .)
    SIM_EQ          reduce using rule 69 (elemento -> error .)
    SIM_DIF         reduce using rule 69 (elemento -> error .)
    <               reduce using rule 69 (elemento -> error .)
    SIM_LE          reduce using rule 69 (elemento -> error .)
    >               reduce using rule 69 (elemento -> error .)
    SIM_GE          reduce using rule 69 (elemento -> error .)
    OR              reduce using rule 69 (elemento -> error .)
    AND             reduce using rule 69 (elemento -> error .)
    :               reduce using rule 69 (elemento -> error .)
    )               reduce using rule 69 (elemento -> error .)
    ;               reduce using rule 69 (elemento -> error .)
    ,               reduce using rule 69 (elemento -> error .)
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 92
    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36

  ! +               [ reduce using rule 69 (elemento -> error .) ]
  ! -               [ reduce using rule 69 (elemento -> error .) ]
  ! error           [ reduce using rule 69 (elemento -> error .) ]

    expressao                      shift and go to state 81
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 83

state 50

    (68) elemento -> - elemento .

    SIM_POT         reduce using rule 68 (elemento -> - elemento .)
    *               reduce using rule 68 (elemento -> - elemento .)
    /               reduce using rule 68 (elemento -> - elemento .)
    %               reduce using rule 68 (elemento -> - elemento .)
    +               reduce using rule 68 (elemento -> - elemento .)
    -               reduce using rule 68 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 68 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 68 (elemento -> - elemento .)
    <               reduce using rule 68 (elemento -> - elemento .)
    SIM_LE          reduce using rule 68 (elemento -> - elemento .)
    >               reduce using rule 68 (elemento -> - elemento .)
    SIM_GE          reduce using rule 68 (elemento -> - elemento .)
    error           reduce using rule 68 (elemento -> - elemento .)
    OR              reduce using rule 68 (elemento -> - elemento .)
    AND             reduce using rule 68 (elemento -> - elemento .)
    :               reduce using rule 68 (elemento -> - elemento .)
    )               reduce using rule 68 (elemento -> - elemento .)
    ;               reduce using rule 68 (elemento -> - elemento .)
    ,               reduce using rule 68 (elemento -> - elemento .)


state 51

    (28) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;

    [               shift and go to state 93


state 52

    (67) elemento -> + elemento .

    SIM_POT         reduce using rule 67 (elemento -> + elemento .)
    *               reduce using rule 67 (elemento -> + elemento .)
    /               reduce using rule 67 (elemento -> + elemento .)
    %               reduce using rule 67 (elemento -> + elemento .)
    +               reduce using rule 67 (elemento -> + elemento .)
    -               reduce using rule 67 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 67 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 67 (elemento -> + elemento .)
    <               reduce using rule 67 (elemento -> + elemento .)
    SIM_LE          reduce using rule 67 (elemento -> + elemento .)
    >               reduce using rule 67 (elemento -> + elemento .)
    SIM_GE          reduce using rule 67 (elemento -> + elemento .)
    error           reduce using rule 67 (elemento -> + elemento .)
    OR              reduce using rule 67 (elemento -> + elemento .)
    AND             reduce using rule 67 (elemento -> + elemento .)
    :               reduce using rule 67 (elemento -> + elemento .)
    )               reduce using rule 67 (elemento -> + elemento .)
    ;               reduce using rule 67 (elemento -> + elemento .)
    ,               reduce using rule 67 (elemento -> + elemento .)


state 53

    (54) termo -> fator termo1 .

    +               reduce using rule 54 (termo -> fator termo1 .)
    -               reduce using rule 54 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 54 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 54 (termo -> fator termo1 .)
    <               reduce using rule 54 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 54 (termo -> fator termo1 .)
    >               reduce using rule 54 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 54 (termo -> fator termo1 .)
    error           reduce using rule 54 (termo -> fator termo1 .)
    OR              reduce using rule 54 (termo -> fator termo1 .)
    AND             reduce using rule 54 (termo -> fator termo1 .)
    )               reduce using rule 54 (termo -> fator termo1 .)
    :               reduce using rule 54 (termo -> fator termo1 .)
    ;               reduce using rule 54 (termo -> fator termo1 .)
    ,               reduce using rule 54 (termo -> fator termo1 .)


state 54

    (58) termo1 -> % . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 33
    fator                          shift and go to state 94

state 55

    (56) termo1 -> * . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 33
    fator                          shift and go to state 95

state 56

    (57) termo1 -> / . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 33
    fator                          shift and go to state 96

state 57

    (55) termo1 -> empty .

    +               reduce using rule 55 (termo1 -> empty .)
    -               reduce using rule 55 (termo1 -> empty .)
    SIM_EQ          reduce using rule 55 (termo1 -> empty .)
    SIM_DIF         reduce using rule 55 (termo1 -> empty .)
    <               reduce using rule 55 (termo1 -> empty .)
    SIM_LE          reduce using rule 55 (termo1 -> empty .)
    >               reduce using rule 55 (termo1 -> empty .)
    SIM_GE          reduce using rule 55 (termo1 -> empty .)
    error           reduce using rule 55 (termo1 -> empty .)
    OR              reduce using rule 55 (termo1 -> empty .)
    AND             reduce using rule 55 (termo1 -> empty .)
    :               reduce using rule 55 (termo1 -> empty .)
    )               reduce using rule 55 (termo1 -> empty .)
    ;               reduce using rule 55 (termo1 -> empty .)
    ,               reduce using rule 55 (termo1 -> empty .)


state 58

    (43) operador -> SIM_EQ .

    ID              reduce using rule 43 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 43 (operador -> SIM_EQ .)
    REAL            reduce using rule 43 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 43 (operador -> SIM_EQ .)
    (               reduce using rule 43 (operador -> SIM_EQ .)
    +               reduce using rule 43 (operador -> SIM_EQ .)
    -               reduce using rule 43 (operador -> SIM_EQ .)
    error           reduce using rule 43 (operador -> SIM_EQ .)


state 59

    (41) relacional1 -> operador . aritmetica
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    fator                          shift and go to state 25
    aritmetica                     shift and go to state 97
    termo                          shift and go to state 30
    elemento                       shift and go to state 33

state 60

    (48) operador -> SIM_GE .

    ID              reduce using rule 48 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 48 (operador -> SIM_GE .)
    REAL            reduce using rule 48 (operador -> SIM_GE .)
    LITERAL         reduce using rule 48 (operador -> SIM_GE .)
    (               reduce using rule 48 (operador -> SIM_GE .)
    +               reduce using rule 48 (operador -> SIM_GE .)
    -               reduce using rule 48 (operador -> SIM_GE .)
    error           reduce using rule 48 (operador -> SIM_GE .)


state 61

    (44) operador -> SIM_DIF .

    ID              reduce using rule 44 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 44 (operador -> SIM_DIF .)
    REAL            reduce using rule 44 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 44 (operador -> SIM_DIF .)
    (               reduce using rule 44 (operador -> SIM_DIF .)
    +               reduce using rule 44 (operador -> SIM_DIF .)
    -               reduce using rule 44 (operador -> SIM_DIF .)
    error           reduce using rule 44 (operador -> SIM_DIF .)


state 62

    (49) operador -> error .

    ID              reduce using rule 49 (operador -> error .)
    INTEIRO         reduce using rule 49 (operador -> error .)
    REAL            reduce using rule 49 (operador -> error .)
    LITERAL         reduce using rule 49 (operador -> error .)
    (               reduce using rule 49 (operador -> error .)
    +               reduce using rule 49 (operador -> error .)
    -               reduce using rule 49 (operador -> error .)
    error           reduce using rule 49 (operador -> error .)


state 63

    (40) relacional -> aritmetica relacional1 .

    OR              reduce using rule 40 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 40 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 40 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 40 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 40 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 40 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 40 (relacional -> aritmetica relacional1 .)


state 64

    (47) operador -> > .

    ID              reduce using rule 47 (operador -> > .)
    INTEIRO         reduce using rule 47 (operador -> > .)
    REAL            reduce using rule 47 (operador -> > .)
    LITERAL         reduce using rule 47 (operador -> > .)
    (               reduce using rule 47 (operador -> > .)
    +               reduce using rule 47 (operador -> > .)
    -               reduce using rule 47 (operador -> > .)
    error           reduce using rule 47 (operador -> > .)


state 65

    (45) operador -> < .

    ID              reduce using rule 45 (operador -> < .)
    INTEIRO         reduce using rule 45 (operador -> < .)
    REAL            reduce using rule 45 (operador -> < .)
    LITERAL         reduce using rule 45 (operador -> < .)
    (               reduce using rule 45 (operador -> < .)
    +               reduce using rule 45 (operador -> < .)
    -               reduce using rule 45 (operador -> < .)
    error           reduce using rule 45 (operador -> < .)


state 66

    (42) relacional1 -> empty .

    OR              reduce using rule 42 (relacional1 -> empty .)
    AND             reduce using rule 42 (relacional1 -> empty .)
    error           reduce using rule 42 (relacional1 -> empty .)
    :               reduce using rule 42 (relacional1 -> empty .)
    )               reduce using rule 42 (relacional1 -> empty .)
    ;               reduce using rule 42 (relacional1 -> empty .)
    ,               reduce using rule 42 (relacional1 -> empty .)


state 67

    (46) operador -> SIM_LE .

    ID              reduce using rule 46 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 46 (operador -> SIM_LE .)
    REAL            reduce using rule 46 (operador -> SIM_LE .)
    LITERAL         reduce using rule 46 (operador -> SIM_LE .)
    (               reduce using rule 46 (operador -> SIM_LE .)
    +               reduce using rule 46 (operador -> SIM_LE .)
    -               reduce using rule 46 (operador -> SIM_LE .)
    error           reduce using rule 46 (operador -> SIM_LE .)


state 68

    (66) elemento -> ( expressao . )

    )               shift and go to state 98


state 69

    (32) expressao1 -> AND . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 99
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 70

    (33) expressao1 -> error . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 100
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 71

    (29) expressao -> valor expressao1 .

    error           reduce using rule 29 (expressao -> valor expressao1 .)
    ,               reduce using rule 29 (expressao -> valor expressao1 .)
    )               reduce using rule 29 (expressao -> valor expressao1 .)
    :               reduce using rule 29 (expressao -> valor expressao1 .)
    ;               reduce using rule 29 (expressao -> valor expressao1 .)


state 72

    (31) expressao1 -> OR . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 101
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 73

    (30) expressao1 -> empty .

    :               reduce using rule 30 (expressao1 -> empty .)
    )               reduce using rule 30 (expressao1 -> empty .)
    ;               reduce using rule 30 (expressao1 -> empty .)
    ,               reduce using rule 30 (expressao1 -> empty .)
    error           reduce using rule 30 (expressao1 -> empty .)


state 74

    (50) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 50 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 50 (aritmetica -> termo aritmetica1 .)


state 75

    (52) aritmetica1 -> + . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    fator                          shift and go to state 25
    termo                          shift and go to state 102
    elemento                       shift and go to state 33

state 76

    (53) aritmetica1 -> - . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    fator                          shift and go to state 25
    termo                          shift and go to state 103
    elemento                       shift and go to state 33

state 77

    (51) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 51 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 51 (aritmetica1 -> empty .)
    <               reduce using rule 51 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 51 (aritmetica1 -> empty .)
    >               reduce using rule 51 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 51 (aritmetica1 -> empty .)
    error           reduce using rule 51 (aritmetica1 -> empty .)
    OR              reduce using rule 51 (aritmetica1 -> empty .)
    AND             reduce using rule 51 (aritmetica1 -> empty .)
    :               reduce using rule 51 (aritmetica1 -> empty .)
    )               reduce using rule 51 (aritmetica1 -> empty .)
    ;               reduce using rule 51 (aritmetica1 -> empty .)
    ,               reduce using rule 51 (aritmetica1 -> empty .)


state 78

    (59) fator -> elemento fator1 .

    *               reduce using rule 59 (fator -> elemento fator1 .)
    /               reduce using rule 59 (fator -> elemento fator1 .)
    %               reduce using rule 59 (fator -> elemento fator1 .)
    +               reduce using rule 59 (fator -> elemento fator1 .)
    -               reduce using rule 59 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 59 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 59 (fator -> elemento fator1 .)
    <               reduce using rule 59 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 59 (fator -> elemento fator1 .)
    >               reduce using rule 59 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 59 (fator -> elemento fator1 .)
    error           reduce using rule 59 (fator -> elemento fator1 .)
    OR              reduce using rule 59 (fator -> elemento fator1 .)
    AND             reduce using rule 59 (fator -> elemento fator1 .)
    :               reduce using rule 59 (fator -> elemento fator1 .)
    )               reduce using rule 59 (fator -> elemento fator1 .)
    ;               reduce using rule 59 (fator -> elemento fator1 .)
    ,               reduce using rule 59 (fator -> elemento fator1 .)


state 79

    (61) fator1 -> SIM_POT . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 49

    elemento                       shift and go to state 104

state 80

    (60) fator1 -> empty .

    *               reduce using rule 60 (fator1 -> empty .)
    /               reduce using rule 60 (fator1 -> empty .)
    %               reduce using rule 60 (fator1 -> empty .)
    +               reduce using rule 60 (fator1 -> empty .)
    -               reduce using rule 60 (fator1 -> empty .)
    SIM_EQ          reduce using rule 60 (fator1 -> empty .)
    SIM_DIF         reduce using rule 60 (fator1 -> empty .)
    <               reduce using rule 60 (fator1 -> empty .)
    SIM_LE          reduce using rule 60 (fator1 -> empty .)
    >               reduce using rule 60 (fator1 -> empty .)
    SIM_GE          reduce using rule 60 (fator1 -> empty .)
    error           reduce using rule 60 (fator1 -> empty .)
    OR              reduce using rule 60 (fator1 -> empty .)
    AND             reduce using rule 60 (fator1 -> empty .)
    :               reduce using rule 60 (fator1 -> empty .)
    )               reduce using rule 60 (fator1 -> empty .)
    ;               reduce using rule 60 (fator1 -> empty .)
    ,               reduce using rule 60 (fator1 -> empty .)


state 81

    (70) elemento -> error expressao . error

    error           shift and go to state 105


state 82

    (39) valor -> error valor .
    (29) expressao -> valor . expressao1
    (30) expressao1 -> . empty
    (31) expressao1 -> . OR valor expressao1
    (32) expressao1 -> . AND valor expressao1
    (33) expressao1 -> . error valor expressao1
    (2) empty -> .

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for error resolved as shift
    )               reduce using rule 39 (valor -> error valor .)
    :               reduce using rule 39 (valor -> error valor .)
    ;               reduce using rule 39 (valor -> error valor .)
    ,               reduce using rule 39 (valor -> error valor .)
    OR              shift and go to state 72
    AND             shift and go to state 69
    error           shift and go to state 70

  ! OR              [ reduce using rule 39 (valor -> error valor .) ]
  ! AND             [ reduce using rule 39 (valor -> error valor .) ]
  ! error           [ reduce using rule 39 (valor -> error valor .) ]
  ! error           [ reduce using rule 2 (empty -> .) ]

    expressao1                     shift and go to state 71
    empty                          shift and go to state 73

state 83

    (71) elemento -> error elemento .
    (59) fator -> elemento . fator1
    (60) fator1 -> . empty
    (61) fator1 -> . SIM_POT elemento fator1
    (2) empty -> .

  ! shift/reduce conflict for SIM_POT resolved as shift
  ! reduce/reduce conflict for * resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for / resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for % resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for + resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for - resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for SIM_EQ resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for SIM_DIF resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for < resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for SIM_LE resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for > resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for SIM_GE resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for error resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for OR resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for AND resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for : resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for ) resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for ; resolved using rule 2 (empty -> .)
  ! reduce/reduce conflict for , resolved using rule 2 (empty -> .)
    SIM_POT         shift and go to state 79
    *               reduce using rule 2 (empty -> .)
    /               reduce using rule 2 (empty -> .)
    %               reduce using rule 2 (empty -> .)
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! SIM_POT         [ reduce using rule 71 (elemento -> error elemento .) ]
  ! *               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! /               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! %               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! +               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! -               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! SIM_EQ          [ reduce using rule 71 (elemento -> error elemento .) ]
  ! SIM_DIF         [ reduce using rule 71 (elemento -> error elemento .) ]
  ! <               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! SIM_LE          [ reduce using rule 71 (elemento -> error elemento .) ]
  ! >               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! SIM_GE          [ reduce using rule 71 (elemento -> error elemento .) ]
  ! error           [ reduce using rule 71 (elemento -> error elemento .) ]
  ! OR              [ reduce using rule 71 (elemento -> error elemento .) ]
  ! AND             [ reduce using rule 71 (elemento -> error elemento .) ]
  ! :               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! )               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! ;               [ reduce using rule 71 (elemento -> error elemento .) ]
  ! ,               [ reduce using rule 71 (elemento -> error elemento .) ]

    fator1                         shift and go to state 78
    empty                          shift and go to state 80

state 84

    (37) valor -> NOT valor .

    OR              reduce using rule 37 (valor -> NOT valor .)
    AND             reduce using rule 37 (valor -> NOT valor .)
    error           reduce using rule 37 (valor -> NOT valor .)
    )               reduce using rule 37 (valor -> NOT valor .)
    :               reduce using rule 37 (valor -> NOT valor .)
    ;               reduce using rule 37 (valor -> NOT valor .)
    ,               reduce using rule 37 (valor -> NOT valor .)


state 85

    (17) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 106


state 86

    (18) cmdentrada -> INPUT ( listaidenti . ) ;

    )               shift and go to state 107


state 87

    (13) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 13 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 13 (listaindenti1 -> , listaidenti .)


state 88

    (23) cmdselecao -> IF expressao : . [ listacmd ] elif else ;

    [               shift and go to state 108


state 89

    (14) listaexp -> expressao . listaexp1
    (15) listaexp1 -> . , listaexp
    (16) listaexp1 -> . empty
    (2) empty -> .

    ,               shift and go to state 111
    )               reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)

    listaexp1                      shift and go to state 109
    empty                          shift and go to state 110

state 90

    (19) cmdsaida -> OUTPUT ( listaexp . ) ;
    (20) cmdsaida -> OUTPUT ( listaexp . error ;
    (22) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 112
    error           shift and go to state 113


state 91

    (21) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 114


state 92

    (69) elemento -> error .
    (70) elemento -> error . expressao error
    (71) elemento -> error . elemento
    (38) valor -> error .
    (39) valor -> error . valor
    (29) expressao -> . valor expressao1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1

  ! reduce/reduce conflict for OR resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for AND resolved using rule 38 (valor -> error .)
  ! reduce/reduce conflict for error resolved using rule 38 (valor -> error .)
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for error resolved as shift
    SIM_POT         reduce using rule 69 (elemento -> error .)
    *               reduce using rule 69 (elemento -> error .)
    /               reduce using rule 69 (elemento -> error .)
    %               reduce using rule 69 (elemento -> error .)
    SIM_EQ          reduce using rule 69 (elemento -> error .)
    SIM_DIF         reduce using rule 69 (elemento -> error .)
    <               reduce using rule 69 (elemento -> error .)
    SIM_LE          reduce using rule 69 (elemento -> error .)
    >               reduce using rule 69 (elemento -> error .)
    SIM_GE          reduce using rule 69 (elemento -> error .)
    :               reduce using rule 69 (elemento -> error .)
    )               reduce using rule 69 (elemento -> error .)
    ;               reduce using rule 69 (elemento -> error .)
    ,               reduce using rule 69 (elemento -> error .)
    OR              reduce using rule 38 (valor -> error .)
    AND             reduce using rule 38 (valor -> error .)
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20
    error           shift and go to state 92
    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36

  ! +               [ reduce using rule 69 (elemento -> error .) ]
  ! -               [ reduce using rule 69 (elemento -> error .) ]
  ! error           [ reduce using rule 69 (elemento -> error .) ]
  ! OR              [ reduce using rule 69 (elemento -> error .) ]
  ! AND             [ reduce using rule 69 (elemento -> error .) ]
  ! error           [ reduce using rule 38 (valor -> error .) ]

    expressao                      shift and go to state 81
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 82
    relacional                     shift and go to state 31
    elemento                       shift and go to state 83

state 93

    (28) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 115
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 94

    (58) termo1 -> % fator . termo1
    (55) termo1 -> . empty
    (56) termo1 -> . * fator termo1
    (57) termo1 -> . / fator termo1
    (58) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 55
    /               shift and go to state 56
    %               shift and go to state 54
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 116
    empty                          shift and go to state 57

state 95

    (56) termo1 -> * fator . termo1
    (55) termo1 -> . empty
    (56) termo1 -> . * fator termo1
    (57) termo1 -> . / fator termo1
    (58) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 55
    /               shift and go to state 56
    %               shift and go to state 54
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 117
    empty                          shift and go to state 57

state 96

    (57) termo1 -> / fator . termo1
    (55) termo1 -> . empty
    (56) termo1 -> . * fator termo1
    (57) termo1 -> . / fator termo1
    (58) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 55
    /               shift and go to state 56
    %               shift and go to state 54
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 118
    empty                          shift and go to state 57

state 97

    (41) relacional1 -> operador aritmetica .

    OR              reduce using rule 41 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 41 (relacional1 -> operador aritmetica .)
    error           reduce using rule 41 (relacional1 -> operador aritmetica .)
    :               reduce using rule 41 (relacional1 -> operador aritmetica .)
    )               reduce using rule 41 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 41 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 41 (relacional1 -> operador aritmetica .)


state 98

    (66) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 66 (elemento -> ( expressao ) .)
    *               reduce using rule 66 (elemento -> ( expressao ) .)
    /               reduce using rule 66 (elemento -> ( expressao ) .)
    %               reduce using rule 66 (elemento -> ( expressao ) .)
    +               reduce using rule 66 (elemento -> ( expressao ) .)
    -               reduce using rule 66 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 66 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 66 (elemento -> ( expressao ) .)
    <               reduce using rule 66 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 66 (elemento -> ( expressao ) .)
    >               reduce using rule 66 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 66 (elemento -> ( expressao ) .)
    error           reduce using rule 66 (elemento -> ( expressao ) .)
    OR              reduce using rule 66 (elemento -> ( expressao ) .)
    AND             reduce using rule 66 (elemento -> ( expressao ) .)
    :               reduce using rule 66 (elemento -> ( expressao ) .)
    )               reduce using rule 66 (elemento -> ( expressao ) .)
    ;               reduce using rule 66 (elemento -> ( expressao ) .)
    ,               reduce using rule 66 (elemento -> ( expressao ) .)


state 99

    (32) expressao1 -> AND valor . expressao1
    (30) expressao1 -> . empty
    (31) expressao1 -> . OR valor expressao1
    (32) expressao1 -> . AND valor expressao1
    (33) expressao1 -> . error valor expressao1
    (2) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 72
    AND             shift and go to state 69
    error           shift and go to state 70
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! error           [ reduce using rule 2 (empty -> .) ]

    expressao1                     shift and go to state 119
    empty                          shift and go to state 73

state 100

    (33) expressao1 -> error valor . expressao1
    (30) expressao1 -> . empty
    (31) expressao1 -> . OR valor expressao1
    (32) expressao1 -> . AND valor expressao1
    (33) expressao1 -> . error valor expressao1
    (2) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 72
    AND             shift and go to state 69
    error           shift and go to state 70
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! error           [ reduce using rule 2 (empty -> .) ]

    expressao1                     shift and go to state 120
    empty                          shift and go to state 73

state 101

    (31) expressao1 -> OR valor . expressao1
    (30) expressao1 -> . empty
    (31) expressao1 -> . OR valor expressao1
    (32) expressao1 -> . AND valor expressao1
    (33) expressao1 -> . error valor expressao1
    (2) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 72
    AND             shift and go to state 69
    error           shift and go to state 70
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

  ! error           [ reduce using rule 2 (empty -> .) ]

    expressao1                     shift and go to state 121
    empty                          shift and go to state 73

state 102

    (52) aritmetica1 -> + termo . aritmetica1
    (51) aritmetica1 -> . empty
    (52) aritmetica1 -> . + termo aritmetica1
    (53) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 75
    -               shift and go to state 76
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 122
    empty                          shift and go to state 77

state 103

    (53) aritmetica1 -> - termo . aritmetica1
    (51) aritmetica1 -> . empty
    (52) aritmetica1 -> . + termo aritmetica1
    (53) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 75
    -               shift and go to state 76
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 123
    empty                          shift and go to state 77

state 104

    (61) fator1 -> SIM_POT elemento . fator1
    (60) fator1 -> . empty
    (61) fator1 -> . SIM_POT elemento fator1
    (2) empty -> .

    SIM_POT         shift and go to state 79
    *               reduce using rule 2 (empty -> .)
    /               reduce using rule 2 (empty -> .)
    %               reduce using rule 2 (empty -> .)
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    error           reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    fator1                         shift and go to state 124
    empty                          shift and go to state 80

state 105

    (70) elemento -> error expressao error .

    SIM_POT         reduce using rule 70 (elemento -> error expressao error .)
    *               reduce using rule 70 (elemento -> error expressao error .)
    /               reduce using rule 70 (elemento -> error expressao error .)
    %               reduce using rule 70 (elemento -> error expressao error .)
    +               reduce using rule 70 (elemento -> error expressao error .)
    -               reduce using rule 70 (elemento -> error expressao error .)
    SIM_EQ          reduce using rule 70 (elemento -> error expressao error .)
    SIM_DIF         reduce using rule 70 (elemento -> error expressao error .)
    <               reduce using rule 70 (elemento -> error expressao error .)
    SIM_LE          reduce using rule 70 (elemento -> error expressao error .)
    >               reduce using rule 70 (elemento -> error expressao error .)
    SIM_GE          reduce using rule 70 (elemento -> error expressao error .)
    error           reduce using rule 70 (elemento -> error expressao error .)
    OR              reduce using rule 70 (elemento -> error expressao error .)
    AND             reduce using rule 70 (elemento -> error expressao error .)
    :               reduce using rule 70 (elemento -> error expressao error .)
    )               reduce using rule 70 (elemento -> error expressao error .)
    ;               reduce using rule 70 (elemento -> error expressao error .)
    ,               reduce using rule 70 (elemento -> error expressao error .)


state 106

    (17) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 107

    (18) cmdentrada -> INPUT ( listaidenti ) . ;

    ;               shift and go to state 125


state 108

    (23) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 126
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 109

    (14) listaexp -> expressao listaexp1 .

    )               reduce using rule 14 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 14 (listaexp -> expressao listaexp1 .)


state 110

    (16) listaexp1 -> empty .

    )               reduce using rule 16 (listaexp1 -> empty .)
    error           reduce using rule 16 (listaexp1 -> empty .)


state 111

    (15) listaexp1 -> , . listaexp
    (14) listaexp -> . expressao listaexp1
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 89
    listaexp                       shift and go to state 127
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 112

    (19) cmdsaida -> OUTPUT ( listaexp ) . ;
    (22) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 129
    error           shift and go to state 128


state 113

    (20) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 130


state 114

    (21) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 131


state 115

    (28) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;

    ]               shift and go to state 132


state 116

    (58) termo1 -> % fator termo1 .

    +               reduce using rule 58 (termo1 -> % fator termo1 .)
    -               reduce using rule 58 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 58 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 58 (termo1 -> % fator termo1 .)
    <               reduce using rule 58 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 58 (termo1 -> % fator termo1 .)
    >               reduce using rule 58 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 58 (termo1 -> % fator termo1 .)
    error           reduce using rule 58 (termo1 -> % fator termo1 .)
    OR              reduce using rule 58 (termo1 -> % fator termo1 .)
    AND             reduce using rule 58 (termo1 -> % fator termo1 .)
    :               reduce using rule 58 (termo1 -> % fator termo1 .)
    )               reduce using rule 58 (termo1 -> % fator termo1 .)
    ;               reduce using rule 58 (termo1 -> % fator termo1 .)
    ,               reduce using rule 58 (termo1 -> % fator termo1 .)


state 117

    (56) termo1 -> * fator termo1 .

    +               reduce using rule 56 (termo1 -> * fator termo1 .)
    -               reduce using rule 56 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 56 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 56 (termo1 -> * fator termo1 .)
    <               reduce using rule 56 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 56 (termo1 -> * fator termo1 .)
    >               reduce using rule 56 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 56 (termo1 -> * fator termo1 .)
    error           reduce using rule 56 (termo1 -> * fator termo1 .)
    OR              reduce using rule 56 (termo1 -> * fator termo1 .)
    AND             reduce using rule 56 (termo1 -> * fator termo1 .)
    :               reduce using rule 56 (termo1 -> * fator termo1 .)
    )               reduce using rule 56 (termo1 -> * fator termo1 .)
    ;               reduce using rule 56 (termo1 -> * fator termo1 .)
    ,               reduce using rule 56 (termo1 -> * fator termo1 .)


state 118

    (57) termo1 -> / fator termo1 .

    +               reduce using rule 57 (termo1 -> / fator termo1 .)
    -               reduce using rule 57 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 57 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 57 (termo1 -> / fator termo1 .)
    <               reduce using rule 57 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 57 (termo1 -> / fator termo1 .)
    >               reduce using rule 57 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 57 (termo1 -> / fator termo1 .)
    error           reduce using rule 57 (termo1 -> / fator termo1 .)
    OR              reduce using rule 57 (termo1 -> / fator termo1 .)
    AND             reduce using rule 57 (termo1 -> / fator termo1 .)
    :               reduce using rule 57 (termo1 -> / fator termo1 .)
    )               reduce using rule 57 (termo1 -> / fator termo1 .)
    ;               reduce using rule 57 (termo1 -> / fator termo1 .)
    ,               reduce using rule 57 (termo1 -> / fator termo1 .)


state 119

    (32) expressao1 -> AND valor expressao1 .

    :               reduce using rule 32 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 32 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 32 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 32 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 32 (expressao1 -> AND valor expressao1 .)


state 120

    (33) expressao1 -> error valor expressao1 .

    :               reduce using rule 33 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 33 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 33 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 33 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 33 (expressao1 -> error valor expressao1 .)


state 121

    (31) expressao1 -> OR valor expressao1 .

    :               reduce using rule 31 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 31 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 31 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 31 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 31 (expressao1 -> OR valor expressao1 .)


state 122

    (52) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 52 (aritmetica1 -> + termo aritmetica1 .)


state 123

    (53) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 53 (aritmetica1 -> - termo aritmetica1 .)


state 124

    (61) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 61 (fator1 -> SIM_POT elemento fator1 .)


state 125

    (18) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 126

    (23) cmdselecao -> IF expressao : [ listacmd . ] elif else ;

    ]               shift and go to state 133


state 127

    (15) listaexp1 -> , listaexp .

    )               reduce using rule 15 (listaexp1 -> , listaexp .)
    error           reduce using rule 15 (listaexp1 -> , listaexp .)


state 128

    (22) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 22 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 129

    (19) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 130

    (20) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 20 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 131

    (21) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 21 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 132

    (28) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (26) else -> . empty
    (27) else -> . ELSE : [ listacmd ]
    (2) empty -> .

    ELSE            shift and go to state 134
    ;               reduce using rule 2 (empty -> .)

    empty                          shift and go to state 136
    else                           shift and go to state 135

state 133

    (23) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (24) elif -> . empty
    (25) elif -> . ELIF expressao : [ listacmd ] elif
    (2) empty -> .

    ELIF            shift and go to state 138
    ELSE            reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)

    elif                           shift and go to state 137
    empty                          shift and go to state 139

state 134

    (27) else -> ELSE . : [ listacmd ]

    :               shift and go to state 140


state 135

    (28) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;

    ;               shift and go to state 141


state 136

    (26) else -> empty .

    ;               reduce using rule 26 (else -> empty .)


state 137

    (23) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (26) else -> . empty
    (27) else -> . ELSE : [ listacmd ]
    (2) empty -> .

    ELSE            shift and go to state 134
    ;               reduce using rule 2 (empty -> .)

    empty                          shift and go to state 136
    else                           shift and go to state 142

state 138

    (25) elif -> ELIF . expressao : [ listacmd ] elif
    (29) expressao -> . valor expressao1
    (34) valor -> . relacional
    (35) valor -> . TRUE
    (36) valor -> . FALSE
    (37) valor -> . NOT valor
    (38) valor -> . error
    (39) valor -> . error valor
    (40) relacional -> . aritmetica relacional1
    (50) aritmetica -> . termo aritmetica1
    (54) termo -> . fator termo1
    (59) fator -> . elemento fator1
    (62) elemento -> . ID
    (63) elemento -> . INTEIRO
    (64) elemento -> . REAL
    (65) elemento -> . LITERAL
    (66) elemento -> . ( expressao )
    (67) elemento -> . + elemento
    (68) elemento -> . - elemento
    (69) elemento -> . error
    (70) elemento -> . error expressao error
    (71) elemento -> . error elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 34
    NOT             shift and go to state 36
    error           shift and go to state 35
    ID              shift and go to state 32
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 29
    (               shift and go to state 27
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 143
    fator                          shift and go to state 25
    termo                          shift and go to state 30
    valor                          shift and go to state 28
    relacional                     shift and go to state 31
    elemento                       shift and go to state 33

state 139

    (24) elif -> empty .

    ELSE            reduce using rule 24 (elif -> empty .)
    ;               reduce using rule 24 (elif -> empty .)


state 140

    (27) else -> ELSE : . [ listacmd ]

    [               shift and go to state 144


state 141

    (28) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 28 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 142

    (23) cmdselecao -> IF expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 145


state 143

    (25) elif -> ELIF expressao . : [ listacmd ] elif

    :               shift and go to state 146


state 144

    (27) else -> ELSE : [ . listacmd ]
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 147
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 145

    (23) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 23 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 146

    (25) elif -> ELIF expressao : . [ listacmd ] elif

    [               shift and go to state 148


state 147

    (27) else -> ELSE : [ listacmd . ]

    ]               shift and go to state 149


state 148

    (25) elif -> ELIF expressao : [ . listacmd ] elif
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdsaida -> . OUTPUT ( listaexp error ;
    (21) cmdsaida -> . OUTPUT error listaexp ) ;
    (22) cmdsaida -> . OUTPUT ( listaexp ) error
    (23) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (28) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 150
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 149

    (27) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 27 (else -> ELSE : [ listacmd ] .)


state 150

    (25) elif -> ELIF expressao : [ listacmd . ] elif

    ]               shift and go to state 151


state 151

    (25) elif -> ELIF expressao : [ listacmd ] . elif
    (24) elif -> . empty
    (25) elif -> . ELIF expressao : [ listacmd ] elif
    (2) empty -> .

    ELIF            shift and go to state 138
    ELSE            reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)

    elif                           shift and go to state 152
    empty                          shift and go to state 139

state 152

    (25) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 25 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 25 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 26 resolved as shift
WARNING: shift/reduce conflict for error in state 28 resolved as shift
WARNING: shift/reduce conflict for error in state 35 resolved as shift
WARNING: shift/reduce conflict for + in state 35 resolved as shift
WARNING: shift/reduce conflict for - in state 35 resolved as shift
WARNING: shift/reduce conflict for + in state 49 resolved as shift
WARNING: shift/reduce conflict for - in state 49 resolved as shift
WARNING: shift/reduce conflict for error in state 49 resolved as shift
WARNING: shift/reduce conflict for OR in state 82 resolved as shift
WARNING: shift/reduce conflict for AND in state 82 resolved as shift
WARNING: shift/reduce conflict for error in state 82 resolved as shift
WARNING: shift/reduce conflict for error in state 82 resolved as shift
WARNING: shift/reduce conflict for SIM_POT in state 83 resolved as shift
WARNING: shift/reduce conflict for + in state 92 resolved as shift
WARNING: shift/reduce conflict for - in state 92 resolved as shift
WARNING: shift/reduce conflict for error in state 92 resolved as shift
WARNING: shift/reduce conflict for error in state 99 resolved as shift
WARNING: shift/reduce conflict for error in state 100 resolved as shift
WARNING: shift/reduce conflict for error in state 101 resolved as shift
WARNING: reduce/reduce conflict in state 35 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 35
WARNING: reduce/reduce conflict in state 83 resolved using rule (empty -> <empty>)
WARNING: rejected rule (elemento -> error elemento) in state 83
WARNING: reduce/reduce conflict in state 92 resolved using rule (valor -> error)
WARNING: rejected rule (elemento -> error) in state 92
WARNING: Rule (elemento -> error elemento) is never reduced
