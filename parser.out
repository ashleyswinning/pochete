Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID action : [ listacmd ]
Rule 2     programa -> empty
Rule 3     action -> <empty>
Rule 4     programa -> DEF ID action error [ listacmd ]
Rule 5     programa -> DEF ID action : error listacmd ]
Rule 6     programa -> DEF ID action : [ listacmd error
Rule 7     empty -> <empty>
Rule 8     listacmd -> comando listacmd1
Rule 9     listacmd1 -> empty
Rule 10    listacmd1 -> listacmd
Rule 11    comando -> cmdatribui
Rule 12    comando -> cmdentrada
Rule 13    comando -> cmdsaida
Rule 14    comando -> cmdselecao
Rule 15    comando -> cmdrepeticao
Rule 16    listaidenti -> ID listaindenti1
Rule 17    listaindenti1 -> empty
Rule 18    listaindenti1 -> , listaidenti
Rule 19    listaexp -> expressao listaexp1
Rule 20    listaexp1 -> , listaexp
Rule 21    listaexp1 -> empty
Rule 22    listaexp1 -> error listaexp
Rule 23    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 24    cmdentrada -> INPUT ( listaidenti ) ;
Rule 25    cmdentrada -> INPUT ( listaidenti error ;
Rule 26    cmdentrada -> INPUT error listaidenti ) ;
Rule 27    cmdentrada -> INPUT ( listaidenti ) error
Rule 28    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 29    cmdsaida -> OUTPUT ( listaexp error ;
Rule 30    cmdsaida -> OUTPUT error listaexp ) ;
Rule 31    cmdsaida -> OUTPUT ( listaexp ) error
Rule 32    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 33    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 34    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 35    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 36    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 37    elif -> empty
Rule 38    elif -> ELIF expressao : [ listacmd ] elif
Rule 39    elif -> ELIF expressao error [ listacmd ] elif
Rule 40    elif -> ELIF expressao : error listacmd ] elif
Rule 41    elif -> ELIF expressao : [ listacmd error elif
Rule 42    else -> empty
Rule 43    else -> ELSE : [ listacmd ]
Rule 44    else -> ELSE error [ listacmd ]
Rule 45    else -> ELSE : error listacmd ]
Rule 46    else -> ELSE : [ listacmd error
Rule 47    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 48    cmdrepeticao -> WHILE expressao error [ listacmd ] else ;
Rule 49    cmdrepeticao -> WHILE expressao : error listacmd ] else ;
Rule 50    cmdrepeticao -> WHILE expressao : [ listacmd error else ;
Rule 51    cmdrepeticao -> WHILE expressao : [ listacmd ] else error
Rule 52    expressao -> valor expressao1
Rule 53    expressao1 -> empty
Rule 54    expressao1 -> OR valor expressao1
Rule 55    expressao1 -> AND valor expressao1
Rule 56    expressao1 -> error valor expressao1
Rule 57    valor -> relacional
Rule 58    valor -> TRUE
Rule 59    valor -> FALSE
Rule 60    valor -> NOT valor
Rule 61    relacional -> aritmetica relacional1
Rule 62    relacional1 -> operador aritmetica
Rule 63    relacional1 -> empty
Rule 64    operador -> SIM_EQ
Rule 65    operador -> SIM_DIF
Rule 66    operador -> <
Rule 67    operador -> SIM_LE
Rule 68    operador -> >
Rule 69    operador -> SIM_GE
Rule 70    aritmetica -> termo aritmetica1
Rule 71    aritmetica1 -> empty
Rule 72    aritmetica1 -> + termo aritmetica1
Rule 73    aritmetica1 -> - termo aritmetica1
Rule 74    termo -> fator termo1
Rule 75    termo1 -> empty
Rule 76    termo1 -> * fator termo1
Rule 77    termo1 -> / fator termo1
Rule 78    termo1 -> % fator termo1
Rule 79    fator -> elemento fator1
Rule 80    fator1 -> empty
Rule 81    fator1 -> SIM_POT elemento fator1
Rule 82    elemento -> ID
Rule 83    elemento -> INTEIRO
Rule 84    elemento -> REAL
Rule 85    elemento -> LITERAL
Rule 86    elemento -> ( expressao )
Rule 87    elemento -> + elemento
Rule 88    elemento -> - elemento

Terminals, with rules where they appear

%                    : 78
(                    : 24 25 27 28 29 31 86
)                    : 24 26 27 28 30 31 86
*                    : 76
+                    : 72 87
,                    : 18 20
-                    : 73 88
/                    : 77
:                    : 1 5 6 32 34 35 36 38 40 41 43 45 46 47 49 50 51
;                    : 23 24 25 26 28 29 30 32 33 34 35 47 48 49 50
<                    : 66
>                    : 68
AND                  : 55
BINARIO              : 
DEF                  : 1 4 5 6
ELIF                 : 38 39 40 41
ELSE                 : 43 44 45 46
FALSE                : 59
HEXADECIMAL          : 
ID                   : 1 4 5 6 16 82
IF                   : 32 33 34 35 36
INPUT                : 24 25 26 27
INTEIRO              : 83
LITERAL              : 85
NOT                  : 60
OCTAL                : 
OR                   : 54
OUTPUT               : 28 29 30 31
REAL                 : 84
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 23
SIM_DIF              : 65
SIM_EQ               : 64
SIM_GE               : 69
SIM_LE               : 67
SIM_POT              : 81
TRUE                 : 58
WHILE                : 47 48 49 50 51
[                    : 1 4 6 32 33 35 36 38 39 41 43 44 46 47 48 50 51
]                    : 1 4 5 32 33 34 36 38 39 40 43 44 45 47 48 49 51
error                : 4 5 6 22 25 26 27 29 30 31 33 34 35 36 39 40 41 44 45 46 48 49 50 51 56

Nonterminals, with rules where they appear

action               : 1 4 5 6
aritmetica           : 61 62
aritmetica1          : 70 72 73
cmdatribui           : 11
cmdentrada           : 12
cmdrepeticao         : 15
cmdsaida             : 13
cmdselecao           : 14
comando              : 8
elemento             : 79 81 87 88
elif                 : 32 33 34 35 36 38 39 40 41
else                 : 32 33 34 35 36 47 48 49 50 51
empty                : 2 9 17 21 37 42 53 63 71 75 80
expressao            : 19 23 32 33 34 35 36 38 39 40 41 47 48 49 50 51 86
expressao1           : 52 54 55 56
fator                : 74 76 77 78
fator1               : 79 81
listacmd             : 1 4 5 6 10 32 33 34 35 36 38 39 40 41 43 44 45 46 47 48 49 50 51
listacmd1            : 8
listaexp             : 20 22 28 29 30 31
listaexp1            : 19
listaidenti          : 18 23 24 25 26 27
listaindenti1        : 16
operador             : 62
programa             : 0
relacional           : 57
relacional1          : 61
termo                : 70 72 73
termo1               : 74 76 77 78
valor                : 52 54 55 56 60

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID action : [ listacmd ]
    (2) programa -> . empty
    (4) programa -> . DEF ID action error [ listacmd ]
    (5) programa -> . DEF ID action : error listacmd ]
    (6) programa -> . DEF ID action : [ listacmd error
    (7) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 7 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID action : [ listacmd ]
    (4) programa -> DEF . ID action error [ listacmd ]
    (5) programa -> DEF . ID action : error listacmd ]
    (6) programa -> DEF . ID action : [ listacmd error

    ID              shift and go to state 4


state 4

    (1) programa -> DEF ID . action : [ listacmd ]
    (4) programa -> DEF ID . action error [ listacmd ]
    (5) programa -> DEF ID . action : error listacmd ]
    (6) programa -> DEF ID . action : [ listacmd error
    (3) action -> .

    :               reduce using rule 3 (action -> .)
    error           reduce using rule 3 (action -> .)

    action                         shift and go to state 5

state 5

    (1) programa -> DEF ID action . : [ listacmd ]
    (4) programa -> DEF ID action . error [ listacmd ]
    (5) programa -> DEF ID action . : error listacmd ]
    (6) programa -> DEF ID action . : [ listacmd error

    :               shift and go to state 7
    error           shift and go to state 6


state 6

    (4) programa -> DEF ID action error . [ listacmd ]

    [               shift and go to state 8


state 7

    (1) programa -> DEF ID action : . [ listacmd ]
    (5) programa -> DEF ID action : . error listacmd ]
    (6) programa -> DEF ID action : . [ listacmd error

    [               shift and go to state 10
    error           shift and go to state 9


state 8

    (4) programa -> DEF ID action error [ . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 14
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 9

    (5) programa -> DEF ID action : error . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 24
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 10

    (1) programa -> DEF ID action : [ . listacmd ]
    (6) programa -> DEF ID action : [ . listacmd error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 25
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 11

    (14) comando -> cmdselecao .

    INPUT           reduce using rule 14 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 14 (comando -> cmdselecao .)
    IF              reduce using rule 14 (comando -> cmdselecao .)
    WHILE           reduce using rule 14 (comando -> cmdselecao .)
    ID              reduce using rule 14 (comando -> cmdselecao .)
    ]               reduce using rule 14 (comando -> cmdselecao .)
    error           reduce using rule 14 (comando -> cmdselecao .)


state 12

    (12) comando -> cmdentrada .

    INPUT           reduce using rule 12 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 12 (comando -> cmdentrada .)
    IF              reduce using rule 12 (comando -> cmdentrada .)
    WHILE           reduce using rule 12 (comando -> cmdentrada .)
    ID              reduce using rule 12 (comando -> cmdentrada .)
    ]               reduce using rule 12 (comando -> cmdentrada .)
    error           reduce using rule 12 (comando -> cmdentrada .)


state 13

    (47) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE . expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE . expressao : error listacmd ] else ;
    (50) cmdrepeticao -> WHILE . expressao : [ listacmd error else ;
    (51) cmdrepeticao -> WHILE . expressao : [ listacmd ] else error
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 30
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 14

    (4) programa -> DEF ID action error [ listacmd . ]

    ]               shift and go to state 43


state 15

    (11) comando -> cmdatribui .

    INPUT           reduce using rule 11 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 11 (comando -> cmdatribui .)
    IF              reduce using rule 11 (comando -> cmdatribui .)
    WHILE           reduce using rule 11 (comando -> cmdatribui .)
    ID              reduce using rule 11 (comando -> cmdatribui .)
    ]               reduce using rule 11 (comando -> cmdatribui .)
    error           reduce using rule 11 (comando -> cmdatribui .)


state 16

    (13) comando -> cmdsaida .

    INPUT           reduce using rule 13 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 13 (comando -> cmdsaida .)
    IF              reduce using rule 13 (comando -> cmdsaida .)
    WHILE           reduce using rule 13 (comando -> cmdsaida .)
    ID              reduce using rule 13 (comando -> cmdsaida .)
    ]               reduce using rule 13 (comando -> cmdsaida .)
    error           reduce using rule 13 (comando -> cmdsaida .)


state 17

    (23) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 44


state 18

    (24) cmdentrada -> INPUT . ( listaidenti ) ;
    (25) cmdentrada -> INPUT . ( listaidenti error ;
    (26) cmdentrada -> INPUT . error listaidenti ) ;
    (27) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 45
    error           shift and go to state 46


state 19

    (16) listaidenti -> ID . listaindenti1
    (17) listaindenti1 -> . empty
    (18) listaindenti1 -> . , listaidenti
    (7) empty -> .

    ,               shift and go to state 49
    SIM_ATTR        reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    listaindenti1                  shift and go to state 47
    empty                          shift and go to state 48

state 20

    (32) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (35) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (36) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 50
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 21

    (15) comando -> cmdrepeticao .

    INPUT           reduce using rule 15 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 15 (comando -> cmdrepeticao .)
    IF              reduce using rule 15 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 15 (comando -> cmdrepeticao .)
    ID              reduce using rule 15 (comando -> cmdrepeticao .)
    ]               reduce using rule 15 (comando -> cmdrepeticao .)
    error           reduce using rule 15 (comando -> cmdrepeticao .)


state 22

    (8) listacmd -> comando . listacmd1
    (9) listacmd1 -> . empty
    (10) listacmd1 -> . listacmd
    (7) empty -> .
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    ]               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    listacmd1                      shift and go to state 52
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 51
    cmdsaida                       shift and go to state 16
    empty                          shift and go to state 53
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 23

    (28) cmdsaida -> OUTPUT . ( listaexp ) ;
    (29) cmdsaida -> OUTPUT . ( listaexp error ;
    (30) cmdsaida -> OUTPUT . error listaexp ) ;
    (31) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 54
    error           shift and go to state 55


state 24

    (5) programa -> DEF ID action : error listacmd . ]

    ]               shift and go to state 56


state 25

    (1) programa -> DEF ID action : [ listacmd . ]
    (6) programa -> DEF ID action : [ listacmd . error

    ]               shift and go to state 58
    error           shift and go to state 57


state 26

    (84) elemento -> REAL .

    SIM_POT         reduce using rule 84 (elemento -> REAL .)
    *               reduce using rule 84 (elemento -> REAL .)
    /               reduce using rule 84 (elemento -> REAL .)
    %               reduce using rule 84 (elemento -> REAL .)
    +               reduce using rule 84 (elemento -> REAL .)
    -               reduce using rule 84 (elemento -> REAL .)
    SIM_EQ          reduce using rule 84 (elemento -> REAL .)
    SIM_DIF         reduce using rule 84 (elemento -> REAL .)
    <               reduce using rule 84 (elemento -> REAL .)
    SIM_LE          reduce using rule 84 (elemento -> REAL .)
    >               reduce using rule 84 (elemento -> REAL .)
    SIM_GE          reduce using rule 84 (elemento -> REAL .)
    OR              reduce using rule 84 (elemento -> REAL .)
    AND             reduce using rule 84 (elemento -> REAL .)
    error           reduce using rule 84 (elemento -> REAL .)
    :               reduce using rule 84 (elemento -> REAL .)
    )               reduce using rule 84 (elemento -> REAL .)
    ;               reduce using rule 84 (elemento -> REAL .)
    ,               reduce using rule 84 (elemento -> REAL .)


state 27

    (88) elemento -> - . elemento
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 59

state 28

    (58) valor -> TRUE .

    OR              reduce using rule 58 (valor -> TRUE .)
    AND             reduce using rule 58 (valor -> TRUE .)
    error           reduce using rule 58 (valor -> TRUE .)
    :               reduce using rule 58 (valor -> TRUE .)
    ,               reduce using rule 58 (valor -> TRUE .)
    )               reduce using rule 58 (valor -> TRUE .)
    ;               reduce using rule 58 (valor -> TRUE .)


state 29

    (83) elemento -> INTEIRO .

    SIM_POT         reduce using rule 83 (elemento -> INTEIRO .)
    *               reduce using rule 83 (elemento -> INTEIRO .)
    /               reduce using rule 83 (elemento -> INTEIRO .)
    %               reduce using rule 83 (elemento -> INTEIRO .)
    +               reduce using rule 83 (elemento -> INTEIRO .)
    -               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 83 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 83 (elemento -> INTEIRO .)
    <               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 83 (elemento -> INTEIRO .)
    >               reduce using rule 83 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 83 (elemento -> INTEIRO .)
    OR              reduce using rule 83 (elemento -> INTEIRO .)
    AND             reduce using rule 83 (elemento -> INTEIRO .)
    error           reduce using rule 83 (elemento -> INTEIRO .)
    :               reduce using rule 83 (elemento -> INTEIRO .)
    )               reduce using rule 83 (elemento -> INTEIRO .)
    ;               reduce using rule 83 (elemento -> INTEIRO .)
    ,               reduce using rule 83 (elemento -> INTEIRO .)


state 30

    (47) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;
    (48) cmdrepeticao -> WHILE expressao . error [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao . : error listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao . : [ listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao . : [ listacmd ] else error

    :               shift and go to state 61
    error           shift and go to state 60


state 31

    (87) elemento -> + . elemento
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 62

state 32

    (74) termo -> fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 63
    empty                          shift and go to state 67

state 33

    (61) relacional -> aritmetica . relacional1
    (62) relacional1 -> . operador aritmetica
    (63) relacional1 -> . empty
    (64) operador -> . SIM_EQ
    (65) operador -> . SIM_DIF
    (66) operador -> . <
    (67) operador -> . SIM_LE
    (68) operador -> . >
    (69) operador -> . SIM_GE
    (7) empty -> .

    SIM_EQ          shift and go to state 68
    SIM_DIF         shift and go to state 71
    <               shift and go to state 74
    SIM_LE          shift and go to state 76
    >               shift and go to state 73
    SIM_GE          shift and go to state 70
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    relacional1                    shift and go to state 72
    operador                       shift and go to state 69
    empty                          shift and go to state 75

state 34

    (86) elemento -> ( . expressao )
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 77
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 35

    (52) expressao -> valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 80
    empty                          shift and go to state 82

state 36

    (85) elemento -> LITERAL .

    SIM_POT         reduce using rule 85 (elemento -> LITERAL .)
    *               reduce using rule 85 (elemento -> LITERAL .)
    /               reduce using rule 85 (elemento -> LITERAL .)
    %               reduce using rule 85 (elemento -> LITERAL .)
    +               reduce using rule 85 (elemento -> LITERAL .)
    -               reduce using rule 85 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 85 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 85 (elemento -> LITERAL .)
    <               reduce using rule 85 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 85 (elemento -> LITERAL .)
    >               reduce using rule 85 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 85 (elemento -> LITERAL .)
    OR              reduce using rule 85 (elemento -> LITERAL .)
    AND             reduce using rule 85 (elemento -> LITERAL .)
    error           reduce using rule 85 (elemento -> LITERAL .)
    :               reduce using rule 85 (elemento -> LITERAL .)
    )               reduce using rule 85 (elemento -> LITERAL .)
    ;               reduce using rule 85 (elemento -> LITERAL .)
    ,               reduce using rule 85 (elemento -> LITERAL .)


state 37

    (70) aritmetica -> termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 84
    -               shift and go to state 85
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 83
    empty                          shift and go to state 86

state 38

    (57) valor -> relacional .

    OR              reduce using rule 57 (valor -> relacional .)
    AND             reduce using rule 57 (valor -> relacional .)
    error           reduce using rule 57 (valor -> relacional .)
    :               reduce using rule 57 (valor -> relacional .)
    ,               reduce using rule 57 (valor -> relacional .)
    )               reduce using rule 57 (valor -> relacional .)
    ;               reduce using rule 57 (valor -> relacional .)


state 39

    (82) elemento -> ID .

    SIM_POT         reduce using rule 82 (elemento -> ID .)
    *               reduce using rule 82 (elemento -> ID .)
    /               reduce using rule 82 (elemento -> ID .)
    %               reduce using rule 82 (elemento -> ID .)
    +               reduce using rule 82 (elemento -> ID .)
    -               reduce using rule 82 (elemento -> ID .)
    SIM_EQ          reduce using rule 82 (elemento -> ID .)
    SIM_DIF         reduce using rule 82 (elemento -> ID .)
    <               reduce using rule 82 (elemento -> ID .)
    SIM_LE          reduce using rule 82 (elemento -> ID .)
    >               reduce using rule 82 (elemento -> ID .)
    SIM_GE          reduce using rule 82 (elemento -> ID .)
    OR              reduce using rule 82 (elemento -> ID .)
    AND             reduce using rule 82 (elemento -> ID .)
    error           reduce using rule 82 (elemento -> ID .)
    :               reduce using rule 82 (elemento -> ID .)
    )               reduce using rule 82 (elemento -> ID .)
    ;               reduce using rule 82 (elemento -> ID .)
    ,               reduce using rule 82 (elemento -> ID .)


state 40

    (79) fator -> elemento . fator1
    (80) fator1 -> . empty
    (81) fator1 -> . SIM_POT elemento fator1
    (7) empty -> .

    SIM_POT         shift and go to state 88
    *               reduce using rule 7 (empty -> .)
    /               reduce using rule 7 (empty -> .)
    %               reduce using rule 7 (empty -> .)
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    fator1                         shift and go to state 87
    empty                          shift and go to state 89

state 41

    (59) valor -> FALSE .

    OR              reduce using rule 59 (valor -> FALSE .)
    AND             reduce using rule 59 (valor -> FALSE .)
    error           reduce using rule 59 (valor -> FALSE .)
    :               reduce using rule 59 (valor -> FALSE .)
    ,               reduce using rule 59 (valor -> FALSE .)
    )               reduce using rule 59 (valor -> FALSE .)
    ;               reduce using rule 59 (valor -> FALSE .)


state 42

    (60) valor -> NOT . valor
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 90
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 43

    (4) programa -> DEF ID action error [ listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID action error [ listacmd ] .)


state 44

    (23) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 91
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 45

    (24) cmdentrada -> INPUT ( . listaidenti ) ;
    (25) cmdentrada -> INPUT ( . listaidenti error ;
    (27) cmdentrada -> INPUT ( . listaidenti ) error
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 92

state 46

    (26) cmdentrada -> INPUT error . listaidenti ) ;
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 93

state 47

    (16) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 16 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 16 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 16 (listaidenti -> ID listaindenti1 .)


state 48

    (17) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 17 (listaindenti1 -> empty .)
    )               reduce using rule 17 (listaindenti1 -> empty .)
    error           reduce using rule 17 (listaindenti1 -> empty .)


state 49

    (18) listaindenti1 -> , . listaidenti
    (16) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 94

state 50

    (32) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (33) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (34) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (35) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (36) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 96
    error           shift and go to state 95


state 51

    (10) listacmd1 -> listacmd .

    ]               reduce using rule 10 (listacmd1 -> listacmd .)
    error           reduce using rule 10 (listacmd1 -> listacmd .)


state 52

    (8) listacmd -> comando listacmd1 .

    ]               reduce using rule 8 (listacmd -> comando listacmd1 .)
    error           reduce using rule 8 (listacmd -> comando listacmd1 .)


state 53

    (9) listacmd1 -> empty .

    ]               reduce using rule 9 (listacmd1 -> empty .)
    error           reduce using rule 9 (listacmd1 -> empty .)


state 54

    (28) cmdsaida -> OUTPUT ( . listaexp ) ;
    (29) cmdsaida -> OUTPUT ( . listaexp error ;
    (31) cmdsaida -> OUTPUT ( . listaexp ) error
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 98
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 55

    (30) cmdsaida -> OUTPUT error . listaexp ) ;
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 99
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 56

    (5) programa -> DEF ID action : error listacmd ] .

    $end            reduce using rule 5 (programa -> DEF ID action : error listacmd ] .)


state 57

    (6) programa -> DEF ID action : [ listacmd error .

    $end            reduce using rule 6 (programa -> DEF ID action : [ listacmd error .)


state 58

    (1) programa -> DEF ID action : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID action : [ listacmd ] .)


state 59

    (88) elemento -> - elemento .

    SIM_POT         reduce using rule 88 (elemento -> - elemento .)
    *               reduce using rule 88 (elemento -> - elemento .)
    /               reduce using rule 88 (elemento -> - elemento .)
    %               reduce using rule 88 (elemento -> - elemento .)
    +               reduce using rule 88 (elemento -> - elemento .)
    -               reduce using rule 88 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 88 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 88 (elemento -> - elemento .)
    <               reduce using rule 88 (elemento -> - elemento .)
    SIM_LE          reduce using rule 88 (elemento -> - elemento .)
    >               reduce using rule 88 (elemento -> - elemento .)
    SIM_GE          reduce using rule 88 (elemento -> - elemento .)
    OR              reduce using rule 88 (elemento -> - elemento .)
    AND             reduce using rule 88 (elemento -> - elemento .)
    error           reduce using rule 88 (elemento -> - elemento .)
    :               reduce using rule 88 (elemento -> - elemento .)
    )               reduce using rule 88 (elemento -> - elemento .)
    ;               reduce using rule 88 (elemento -> - elemento .)
    ,               reduce using rule 88 (elemento -> - elemento .)


state 60

    (48) cmdrepeticao -> WHILE expressao error . [ listacmd ] else ;

    [               shift and go to state 100


state 61

    (47) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;
    (49) cmdrepeticao -> WHILE expressao : . error listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao : . [ listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao : . [ listacmd ] else error

    [               shift and go to state 102
    error           shift and go to state 101


state 62

    (87) elemento -> + elemento .

    SIM_POT         reduce using rule 87 (elemento -> + elemento .)
    *               reduce using rule 87 (elemento -> + elemento .)
    /               reduce using rule 87 (elemento -> + elemento .)
    %               reduce using rule 87 (elemento -> + elemento .)
    +               reduce using rule 87 (elemento -> + elemento .)
    -               reduce using rule 87 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 87 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 87 (elemento -> + elemento .)
    <               reduce using rule 87 (elemento -> + elemento .)
    SIM_LE          reduce using rule 87 (elemento -> + elemento .)
    >               reduce using rule 87 (elemento -> + elemento .)
    SIM_GE          reduce using rule 87 (elemento -> + elemento .)
    OR              reduce using rule 87 (elemento -> + elemento .)
    AND             reduce using rule 87 (elemento -> + elemento .)
    error           reduce using rule 87 (elemento -> + elemento .)
    :               reduce using rule 87 (elemento -> + elemento .)
    )               reduce using rule 87 (elemento -> + elemento .)
    ;               reduce using rule 87 (elemento -> + elemento .)
    ,               reduce using rule 87 (elemento -> + elemento .)


state 63

    (74) termo -> fator termo1 .

    +               reduce using rule 74 (termo -> fator termo1 .)
    -               reduce using rule 74 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 74 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 74 (termo -> fator termo1 .)
    <               reduce using rule 74 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 74 (termo -> fator termo1 .)
    >               reduce using rule 74 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 74 (termo -> fator termo1 .)
    OR              reduce using rule 74 (termo -> fator termo1 .)
    AND             reduce using rule 74 (termo -> fator termo1 .)
    error           reduce using rule 74 (termo -> fator termo1 .)
    ;               reduce using rule 74 (termo -> fator termo1 .)
    :               reduce using rule 74 (termo -> fator termo1 .)
    ,               reduce using rule 74 (termo -> fator termo1 .)
    )               reduce using rule 74 (termo -> fator termo1 .)


state 64

    (78) termo1 -> % . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 40
    fator                          shift and go to state 103

state 65

    (76) termo1 -> * . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 40
    fator                          shift and go to state 104

state 66

    (77) termo1 -> / . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 40
    fator                          shift and go to state 105

state 67

    (75) termo1 -> empty .

    +               reduce using rule 75 (termo1 -> empty .)
    -               reduce using rule 75 (termo1 -> empty .)
    SIM_EQ          reduce using rule 75 (termo1 -> empty .)
    SIM_DIF         reduce using rule 75 (termo1 -> empty .)
    <               reduce using rule 75 (termo1 -> empty .)
    SIM_LE          reduce using rule 75 (termo1 -> empty .)
    >               reduce using rule 75 (termo1 -> empty .)
    SIM_GE          reduce using rule 75 (termo1 -> empty .)
    OR              reduce using rule 75 (termo1 -> empty .)
    AND             reduce using rule 75 (termo1 -> empty .)
    error           reduce using rule 75 (termo1 -> empty .)
    :               reduce using rule 75 (termo1 -> empty .)
    )               reduce using rule 75 (termo1 -> empty .)
    ;               reduce using rule 75 (termo1 -> empty .)
    ,               reduce using rule 75 (termo1 -> empty .)


state 68

    (64) operador -> SIM_EQ .

    ID              reduce using rule 64 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 64 (operador -> SIM_EQ .)
    REAL            reduce using rule 64 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 64 (operador -> SIM_EQ .)
    (               reduce using rule 64 (operador -> SIM_EQ .)
    +               reduce using rule 64 (operador -> SIM_EQ .)
    -               reduce using rule 64 (operador -> SIM_EQ .)


state 69

    (62) relacional1 -> operador . aritmetica
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    aritmetica                     shift and go to state 106
    termo                          shift and go to state 37
    elemento                       shift and go to state 40

state 70

    (69) operador -> SIM_GE .

    ID              reduce using rule 69 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 69 (operador -> SIM_GE .)
    REAL            reduce using rule 69 (operador -> SIM_GE .)
    LITERAL         reduce using rule 69 (operador -> SIM_GE .)
    (               reduce using rule 69 (operador -> SIM_GE .)
    +               reduce using rule 69 (operador -> SIM_GE .)
    -               reduce using rule 69 (operador -> SIM_GE .)


state 71

    (65) operador -> SIM_DIF .

    ID              reduce using rule 65 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 65 (operador -> SIM_DIF .)
    REAL            reduce using rule 65 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 65 (operador -> SIM_DIF .)
    (               reduce using rule 65 (operador -> SIM_DIF .)
    +               reduce using rule 65 (operador -> SIM_DIF .)
    -               reduce using rule 65 (operador -> SIM_DIF .)


state 72

    (61) relacional -> aritmetica relacional1 .

    OR              reduce using rule 61 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 61 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 61 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 61 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 61 (relacional -> aritmetica relacional1 .)


state 73

    (68) operador -> > .

    ID              reduce using rule 68 (operador -> > .)
    INTEIRO         reduce using rule 68 (operador -> > .)
    REAL            reduce using rule 68 (operador -> > .)
    LITERAL         reduce using rule 68 (operador -> > .)
    (               reduce using rule 68 (operador -> > .)
    +               reduce using rule 68 (operador -> > .)
    -               reduce using rule 68 (operador -> > .)


state 74

    (66) operador -> < .

    ID              reduce using rule 66 (operador -> < .)
    INTEIRO         reduce using rule 66 (operador -> < .)
    REAL            reduce using rule 66 (operador -> < .)
    LITERAL         reduce using rule 66 (operador -> < .)
    (               reduce using rule 66 (operador -> < .)
    +               reduce using rule 66 (operador -> < .)
    -               reduce using rule 66 (operador -> < .)


state 75

    (63) relacional1 -> empty .

    OR              reduce using rule 63 (relacional1 -> empty .)
    AND             reduce using rule 63 (relacional1 -> empty .)
    error           reduce using rule 63 (relacional1 -> empty .)
    :               reduce using rule 63 (relacional1 -> empty .)
    )               reduce using rule 63 (relacional1 -> empty .)
    ;               reduce using rule 63 (relacional1 -> empty .)
    ,               reduce using rule 63 (relacional1 -> empty .)


state 76

    (67) operador -> SIM_LE .

    ID              reduce using rule 67 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 67 (operador -> SIM_LE .)
    REAL            reduce using rule 67 (operador -> SIM_LE .)
    LITERAL         reduce using rule 67 (operador -> SIM_LE .)
    (               reduce using rule 67 (operador -> SIM_LE .)
    +               reduce using rule 67 (operador -> SIM_LE .)
    -               reduce using rule 67 (operador -> SIM_LE .)


state 77

    (86) elemento -> ( expressao . )

    )               shift and go to state 107


state 78

    (55) expressao1 -> AND . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 108
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 79

    (56) expressao1 -> error . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 109
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 80

    (52) expressao -> valor expressao1 .

    ,               reduce using rule 52 (expressao -> valor expressao1 .)
    error           reduce using rule 52 (expressao -> valor expressao1 .)
    )               reduce using rule 52 (expressao -> valor expressao1 .)
    :               reduce using rule 52 (expressao -> valor expressao1 .)
    ;               reduce using rule 52 (expressao -> valor expressao1 .)


state 81

    (54) expressao1 -> OR . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 110
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 82

    (53) expressao1 -> empty .

    :               reduce using rule 53 (expressao1 -> empty .)
    error           reduce using rule 53 (expressao1 -> empty .)
    )               reduce using rule 53 (expressao1 -> empty .)
    ;               reduce using rule 53 (expressao1 -> empty .)
    ,               reduce using rule 53 (expressao1 -> empty .)


state 83

    (70) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 70 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 70 (aritmetica -> termo aritmetica1 .)


state 84

    (72) aritmetica1 -> + . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 111
    elemento                       shift and go to state 40

state 85

    (73) aritmetica1 -> - . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 112
    elemento                       shift and go to state 40

state 86

    (71) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 71 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 71 (aritmetica1 -> empty .)
    <               reduce using rule 71 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 71 (aritmetica1 -> empty .)
    >               reduce using rule 71 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 71 (aritmetica1 -> empty .)
    OR              reduce using rule 71 (aritmetica1 -> empty .)
    AND             reduce using rule 71 (aritmetica1 -> empty .)
    error           reduce using rule 71 (aritmetica1 -> empty .)
    :               reduce using rule 71 (aritmetica1 -> empty .)
    )               reduce using rule 71 (aritmetica1 -> empty .)
    ;               reduce using rule 71 (aritmetica1 -> empty .)
    ,               reduce using rule 71 (aritmetica1 -> empty .)


state 87

    (79) fator -> elemento fator1 .

    *               reduce using rule 79 (fator -> elemento fator1 .)
    /               reduce using rule 79 (fator -> elemento fator1 .)
    %               reduce using rule 79 (fator -> elemento fator1 .)
    +               reduce using rule 79 (fator -> elemento fator1 .)
    -               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 79 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 79 (fator -> elemento fator1 .)
    <               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 79 (fator -> elemento fator1 .)
    >               reduce using rule 79 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 79 (fator -> elemento fator1 .)
    OR              reduce using rule 79 (fator -> elemento fator1 .)
    AND             reduce using rule 79 (fator -> elemento fator1 .)
    error           reduce using rule 79 (fator -> elemento fator1 .)
    ,               reduce using rule 79 (fator -> elemento fator1 .)
    )               reduce using rule 79 (fator -> elemento fator1 .)
    :               reduce using rule 79 (fator -> elemento fator1 .)
    ;               reduce using rule 79 (fator -> elemento fator1 .)


state 88

    (81) fator1 -> SIM_POT . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 113

state 89

    (80) fator1 -> empty .

    *               reduce using rule 80 (fator1 -> empty .)
    /               reduce using rule 80 (fator1 -> empty .)
    %               reduce using rule 80 (fator1 -> empty .)
    +               reduce using rule 80 (fator1 -> empty .)
    -               reduce using rule 80 (fator1 -> empty .)
    SIM_EQ          reduce using rule 80 (fator1 -> empty .)
    SIM_DIF         reduce using rule 80 (fator1 -> empty .)
    <               reduce using rule 80 (fator1 -> empty .)
    SIM_LE          reduce using rule 80 (fator1 -> empty .)
    >               reduce using rule 80 (fator1 -> empty .)
    SIM_GE          reduce using rule 80 (fator1 -> empty .)
    OR              reduce using rule 80 (fator1 -> empty .)
    AND             reduce using rule 80 (fator1 -> empty .)
    error           reduce using rule 80 (fator1 -> empty .)
    :               reduce using rule 80 (fator1 -> empty .)
    )               reduce using rule 80 (fator1 -> empty .)
    ;               reduce using rule 80 (fator1 -> empty .)
    ,               reduce using rule 80 (fator1 -> empty .)


state 90

    (60) valor -> NOT valor .

    OR              reduce using rule 60 (valor -> NOT valor .)
    AND             reduce using rule 60 (valor -> NOT valor .)
    error           reduce using rule 60 (valor -> NOT valor .)
    :               reduce using rule 60 (valor -> NOT valor .)
    ,               reduce using rule 60 (valor -> NOT valor .)
    )               reduce using rule 60 (valor -> NOT valor .)
    ;               reduce using rule 60 (valor -> NOT valor .)


state 91

    (23) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 114


state 92

    (24) cmdentrada -> INPUT ( listaidenti . ) ;
    (25) cmdentrada -> INPUT ( listaidenti . error ;
    (27) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 115
    error           shift and go to state 116


state 93

    (26) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 117


state 94

    (18) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 18 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 18 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 18 (listaindenti1 -> , listaidenti .)


state 95

    (33) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 118


state 96

    (32) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (34) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (35) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (36) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 120
    error           shift and go to state 119


state 97

    (19) listaexp -> expressao . listaexp1
    (20) listaexp1 -> . , listaexp
    (21) listaexp1 -> . empty
    (22) listaexp1 -> . error listaexp
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 122
    error           shift and go to state 123
    )               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    listaexp1                      shift and go to state 121
    empty                          shift and go to state 124

state 98

    (28) cmdsaida -> OUTPUT ( listaexp . ) ;
    (29) cmdsaida -> OUTPUT ( listaexp . error ;
    (31) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 125
    error           shift and go to state 126


state 99

    (30) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 127


state 100

    (48) cmdrepeticao -> WHILE expressao error [ . listacmd ] else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 128
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 101

    (49) cmdrepeticao -> WHILE expressao : error . listacmd ] else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 129
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 102

    (47) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (50) cmdrepeticao -> WHILE expressao : [ . listacmd error else ;
    (51) cmdrepeticao -> WHILE expressao : [ . listacmd ] else error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 130
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 103

    (78) termo1 -> % fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 131
    empty                          shift and go to state 67

state 104

    (76) termo1 -> * fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 132
    empty                          shift and go to state 67

state 105

    (77) termo1 -> / fator . termo1
    (75) termo1 -> . empty
    (76) termo1 -> . * fator termo1
    (77) termo1 -> . / fator termo1
    (78) termo1 -> . % fator termo1
    (7) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    termo1                         shift and go to state 133
    empty                          shift and go to state 67

state 106

    (62) relacional1 -> operador aritmetica .

    OR              reduce using rule 62 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 62 (relacional1 -> operador aritmetica .)
    error           reduce using rule 62 (relacional1 -> operador aritmetica .)
    :               reduce using rule 62 (relacional1 -> operador aritmetica .)
    )               reduce using rule 62 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 62 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 62 (relacional1 -> operador aritmetica .)


state 107

    (86) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 86 (elemento -> ( expressao ) .)
    *               reduce using rule 86 (elemento -> ( expressao ) .)
    /               reduce using rule 86 (elemento -> ( expressao ) .)
    %               reduce using rule 86 (elemento -> ( expressao ) .)
    +               reduce using rule 86 (elemento -> ( expressao ) .)
    -               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 86 (elemento -> ( expressao ) .)
    <               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 86 (elemento -> ( expressao ) .)
    >               reduce using rule 86 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 86 (elemento -> ( expressao ) .)
    OR              reduce using rule 86 (elemento -> ( expressao ) .)
    AND             reduce using rule 86 (elemento -> ( expressao ) .)
    error           reduce using rule 86 (elemento -> ( expressao ) .)
    :               reduce using rule 86 (elemento -> ( expressao ) .)
    )               reduce using rule 86 (elemento -> ( expressao ) .)
    ;               reduce using rule 86 (elemento -> ( expressao ) .)
    ,               reduce using rule 86 (elemento -> ( expressao ) .)


state 108

    (55) expressao1 -> AND valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 134
    empty                          shift and go to state 82

state 109

    (56) expressao1 -> error valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 135
    empty                          shift and go to state 82

state 110

    (54) expressao1 -> OR valor . expressao1
    (53) expressao1 -> . empty
    (54) expressao1 -> . OR valor expressao1
    (55) expressao1 -> . AND valor expressao1
    (56) expressao1 -> . error valor expressao1
    (7) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

  ! error           [ reduce using rule 7 (empty -> .) ]

    expressao1                     shift and go to state 136
    empty                          shift and go to state 82

state 111

    (72) aritmetica1 -> + termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 84
    -               shift and go to state 85
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 137
    empty                          shift and go to state 86

state 112

    (73) aritmetica1 -> - termo . aritmetica1
    (71) aritmetica1 -> . empty
    (72) aritmetica1 -> . + termo aritmetica1
    (73) aritmetica1 -> . - termo aritmetica1
    (7) empty -> .

    +               shift and go to state 84
    -               shift and go to state 85
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    aritmetica1                    shift and go to state 138
    empty                          shift and go to state 86

state 113

    (81) fator1 -> SIM_POT elemento . fator1
    (80) fator1 -> . empty
    (81) fator1 -> . SIM_POT elemento fator1
    (7) empty -> .

    SIM_POT         shift and go to state 88
    *               reduce using rule 7 (empty -> .)
    /               reduce using rule 7 (empty -> .)
    %               reduce using rule 7 (empty -> .)
    +               reduce using rule 7 (empty -> .)
    -               reduce using rule 7 (empty -> .)
    SIM_EQ          reduce using rule 7 (empty -> .)
    SIM_DIF         reduce using rule 7 (empty -> .)
    <               reduce using rule 7 (empty -> .)
    SIM_LE          reduce using rule 7 (empty -> .)
    >               reduce using rule 7 (empty -> .)
    SIM_GE          reduce using rule 7 (empty -> .)
    OR              reduce using rule 7 (empty -> .)
    AND             reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)
    :               reduce using rule 7 (empty -> .)
    )               reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    ,               reduce using rule 7 (empty -> .)

    fator1                         shift and go to state 139
    empty                          shift and go to state 89

state 114

    (23) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 23 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 115

    (24) cmdentrada -> INPUT ( listaidenti ) . ;
    (27) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 141
    error           shift and go to state 140


state 116

    (25) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 142


state 117

    (26) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 143


state 118

    (33) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 144
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 119

    (34) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 145
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 120

    (32) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (35) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (36) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 146
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 121

    (19) listaexp -> expressao listaexp1 .

    )               reduce using rule 19 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 19 (listaexp -> expressao listaexp1 .)


state 122

    (20) listaexp1 -> , . listaexp
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 147
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 123

    (22) listaexp1 -> error . listaexp
    (19) listaexp -> . expressao listaexp1
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 148
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 124

    (21) listaexp1 -> empty .

    )               reduce using rule 21 (listaexp1 -> empty .)
    error           reduce using rule 21 (listaexp1 -> empty .)


state 125

    (28) cmdsaida -> OUTPUT ( listaexp ) . ;
    (31) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 150
    error           shift and go to state 149


state 126

    (29) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 151


state 127

    (30) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 152


state 128

    (48) cmdrepeticao -> WHILE expressao error [ listacmd . ] else ;

    ]               shift and go to state 153


state 129

    (49) cmdrepeticao -> WHILE expressao : error listacmd . ] else ;

    ]               shift and go to state 154


state 130

    (47) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;
    (50) cmdrepeticao -> WHILE expressao : [ listacmd . error else ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd . ] else error

    ]               shift and go to state 156
    error           shift and go to state 155


state 131

    (78) termo1 -> % fator termo1 .

    +               reduce using rule 78 (termo1 -> % fator termo1 .)
    -               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 78 (termo1 -> % fator termo1 .)
    <               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 78 (termo1 -> % fator termo1 .)
    >               reduce using rule 78 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 78 (termo1 -> % fator termo1 .)
    OR              reduce using rule 78 (termo1 -> % fator termo1 .)
    AND             reduce using rule 78 (termo1 -> % fator termo1 .)
    error           reduce using rule 78 (termo1 -> % fator termo1 .)
    :               reduce using rule 78 (termo1 -> % fator termo1 .)
    )               reduce using rule 78 (termo1 -> % fator termo1 .)
    ;               reduce using rule 78 (termo1 -> % fator termo1 .)
    ,               reduce using rule 78 (termo1 -> % fator termo1 .)


state 132

    (76) termo1 -> * fator termo1 .

    +               reduce using rule 76 (termo1 -> * fator termo1 .)
    -               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 76 (termo1 -> * fator termo1 .)
    <               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 76 (termo1 -> * fator termo1 .)
    >               reduce using rule 76 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 76 (termo1 -> * fator termo1 .)
    OR              reduce using rule 76 (termo1 -> * fator termo1 .)
    AND             reduce using rule 76 (termo1 -> * fator termo1 .)
    error           reduce using rule 76 (termo1 -> * fator termo1 .)
    :               reduce using rule 76 (termo1 -> * fator termo1 .)
    )               reduce using rule 76 (termo1 -> * fator termo1 .)
    ;               reduce using rule 76 (termo1 -> * fator termo1 .)
    ,               reduce using rule 76 (termo1 -> * fator termo1 .)


state 133

    (77) termo1 -> / fator termo1 .

    +               reduce using rule 77 (termo1 -> / fator termo1 .)
    -               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 77 (termo1 -> / fator termo1 .)
    <               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 77 (termo1 -> / fator termo1 .)
    >               reduce using rule 77 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 77 (termo1 -> / fator termo1 .)
    OR              reduce using rule 77 (termo1 -> / fator termo1 .)
    AND             reduce using rule 77 (termo1 -> / fator termo1 .)
    error           reduce using rule 77 (termo1 -> / fator termo1 .)
    :               reduce using rule 77 (termo1 -> / fator termo1 .)
    )               reduce using rule 77 (termo1 -> / fator termo1 .)
    ;               reduce using rule 77 (termo1 -> / fator termo1 .)
    ,               reduce using rule 77 (termo1 -> / fator termo1 .)


state 134

    (55) expressao1 -> AND valor expressao1 .

    :               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 55 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 55 (expressao1 -> AND valor expressao1 .)


state 135

    (56) expressao1 -> error valor expressao1 .

    :               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 56 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 56 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 56 (expressao1 -> error valor expressao1 .)


state 136

    (54) expressao1 -> OR valor expressao1 .

    :               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 54 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 54 (expressao1 -> OR valor expressao1 .)


state 137

    (72) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    error           reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 72 (aritmetica1 -> + termo aritmetica1 .)


state 138

    (73) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    error           reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 73 (aritmetica1 -> - termo aritmetica1 .)


state 139

    (81) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 81 (fator1 -> SIM_POT elemento fator1 .)


state 140

    (27) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 27 (cmdentrada -> INPUT ( listaidenti ) error .)


state 141

    (24) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 24 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 142

    (25) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 25 (cmdentrada -> INPUT ( listaidenti error ; .)


state 143

    (26) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 26 (cmdentrada -> INPUT error listaidenti ) ; .)


state 144

    (33) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 157


state 145

    (34) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 158


state 146

    (32) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (35) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (36) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 160
    error           shift and go to state 159


state 147

    (20) listaexp1 -> , listaexp .

    )               reduce using rule 20 (listaexp1 -> , listaexp .)
    error           reduce using rule 20 (listaexp1 -> , listaexp .)


state 148

    (22) listaexp1 -> error listaexp .

    )               reduce using rule 22 (listaexp1 -> error listaexp .)
    error           reduce using rule 22 (listaexp1 -> error listaexp .)


state 149

    (31) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 31 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 150

    (28) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 28 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 151

    (29) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 29 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 152

    (30) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 30 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 153

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 161

state 154

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 164

state 155

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 165

state 156

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] . else error
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 166

state 157

    (33) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 167
    empty                          shift and go to state 169

state 158

    (34) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 170
    empty                          shift and go to state 169

state 159

    (35) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)

    elif                           shift and go to state 171
    empty                          shift and go to state 169

state 160

    (32) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (36) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 172
    empty                          shift and go to state 169

state 161

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] else . ;

    ;               shift and go to state 173


state 162

    (43) else -> ELSE . : [ listacmd ]
    (44) else -> ELSE . error [ listacmd ]
    (45) else -> ELSE . : error listacmd ]
    (46) else -> ELSE . : [ listacmd error

    :               shift and go to state 175
    error           shift and go to state 174


state 163

    (42) else -> empty .

    ;               reduce using rule 42 (else -> empty .)
    error           reduce using rule 42 (else -> empty .)


state 164

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] else . ;

    ;               shift and go to state 176


state 165

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error else . ;

    ;               shift and go to state 177


state 166

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;
    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else . error

    ;               shift and go to state 179
    error           shift and go to state 178


state 167

    (33) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 180

state 168

    (38) elif -> ELIF . expressao : [ listacmd ] elif
    (39) elif -> ELIF . expressao error [ listacmd ] elif
    (40) elif -> ELIF . expressao : error listacmd ] elif
    (41) elif -> ELIF . expressao : [ listacmd error elif
    (52) expressao -> . valor expressao1
    (57) valor -> . relacional
    (58) valor -> . TRUE
    (59) valor -> . FALSE
    (60) valor -> . NOT valor
    (61) relacional -> . aritmetica relacional1
    (70) aritmetica -> . termo aritmetica1
    (74) termo -> . fator termo1
    (79) fator -> . elemento fator1
    (82) elemento -> . ID
    (83) elemento -> . INTEIRO
    (84) elemento -> . REAL
    (85) elemento -> . LITERAL
    (86) elemento -> . ( expressao )
    (87) elemento -> . + elemento
    (88) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 181
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 169

    (37) elif -> empty .

    ELSE            reduce using rule 37 (elif -> empty .)
    ;               reduce using rule 37 (elif -> empty .)
    error           reduce using rule 37 (elif -> empty .)


state 170

    (34) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 182

state 171

    (35) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 183

state 172

    (32) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (36) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (42) else -> . empty
    (43) else -> . ELSE : [ listacmd ]
    (44) else -> . ELSE error [ listacmd ]
    (45) else -> . ELSE : error listacmd ]
    (46) else -> . ELSE : [ listacmd error
    (7) empty -> .

    ELSE            shift and go to state 162
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    empty                          shift and go to state 163
    else                           shift and go to state 184

state 173

    (48) cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .

    INPUT           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    OUTPUT          reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    IF              reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    WHILE           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ID              reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ]               reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    error           reduce using rule 48 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)


state 174

    (44) else -> ELSE error . [ listacmd ]

    [               shift and go to state 185


state 175

    (43) else -> ELSE : . [ listacmd ]
    (45) else -> ELSE : . error listacmd ]
    (46) else -> ELSE : . [ listacmd error

    [               shift and go to state 187
    error           shift and go to state 186


state 176

    (49) cmdrepeticao -> WHILE expressao : error listacmd ] else ; .

    INPUT           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    OUTPUT          reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    IF              reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    WHILE           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ID              reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ]               reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    error           reduce using rule 49 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)


state 177

    (50) cmdrepeticao -> WHILE expressao : [ listacmd error else ; .

    INPUT           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    OUTPUT          reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    IF              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    WHILE           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ID              reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ]               reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    error           reduce using rule 50 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)


state 178

    (51) cmdrepeticao -> WHILE expressao : [ listacmd ] else error .

    INPUT           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    OUTPUT          reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    IF              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    WHILE           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ID              reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ]               reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    error           reduce using rule 51 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)


state 179

    (47) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 47 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 180

    (33) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 188


state 181

    (38) elif -> ELIF expressao . : [ listacmd ] elif
    (39) elif -> ELIF expressao . error [ listacmd ] elif
    (40) elif -> ELIF expressao . : error listacmd ] elif
    (41) elif -> ELIF expressao . : [ listacmd error elif

    :               shift and go to state 190
    error           shift and go to state 189


state 182

    (34) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 191


state 183

    (35) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 192


state 184

    (32) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (36) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 194
    error           shift and go to state 193


state 185

    (44) else -> ELSE error [ . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 195
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 186

    (45) else -> ELSE : error . listacmd ]
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 196
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 187

    (43) else -> ELSE : [ . listacmd ]
    (46) else -> ELSE : [ . listacmd error
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 197
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 188

    (33) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 33 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 189

    (39) elif -> ELIF expressao error . [ listacmd ] elif

    [               shift and go to state 198


state 190

    (38) elif -> ELIF expressao : . [ listacmd ] elif
    (40) elif -> ELIF expressao : . error listacmd ] elif
    (41) elif -> ELIF expressao : . [ listacmd error elif

    [               shift and go to state 200
    error           shift and go to state 199


state 191

    (34) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 34 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 192

    (35) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 35 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 193

    (36) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 36 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 194

    (32) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 32 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 195

    (44) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 201


state 196

    (45) else -> ELSE : error listacmd . ]

    ]               shift and go to state 202


state 197

    (43) else -> ELSE : [ listacmd . ]
    (46) else -> ELSE : [ listacmd . error

    ]               shift and go to state 204
    error           shift and go to state 203


state 198

    (39) elif -> ELIF expressao error [ . listacmd ] elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 205
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 199

    (40) elif -> ELIF expressao : error . listacmd ] elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 206
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 200

    (38) elif -> ELIF expressao : [ . listacmd ] elif
    (41) elif -> ELIF expressao : [ . listacmd error elif
    (8) listacmd -> . comando listacmd1
    (11) comando -> . cmdatribui
    (12) comando -> . cmdentrada
    (13) comando -> . cmdsaida
    (14) comando -> . cmdselecao
    (15) comando -> . cmdrepeticao
    (23) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (24) cmdentrada -> . INPUT ( listaidenti ) ;
    (25) cmdentrada -> . INPUT ( listaidenti error ;
    (26) cmdentrada -> . INPUT error listaidenti ) ;
    (27) cmdentrada -> . INPUT ( listaidenti ) error
    (28) cmdsaida -> . OUTPUT ( listaexp ) ;
    (29) cmdsaida -> . OUTPUT ( listaexp error ;
    (30) cmdsaida -> . OUTPUT error listaexp ) ;
    (31) cmdsaida -> . OUTPUT ( listaexp ) error
    (32) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (33) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (34) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (35) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (36) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (47) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (48) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (49) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (50) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (51) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (16) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 207
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 201

    (44) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 44 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 44 (else -> ELSE error [ listacmd ] .)


state 202

    (45) else -> ELSE : error listacmd ] .

    ;               reduce using rule 45 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 45 (else -> ELSE : error listacmd ] .)


state 203

    (46) else -> ELSE : [ listacmd error .

    ;               reduce using rule 46 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 46 (else -> ELSE : [ listacmd error .)


state 204

    (43) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 43 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 43 (else -> ELSE : [ listacmd ] .)


state 205

    (39) elif -> ELIF expressao error [ listacmd . ] elif

    ]               shift and go to state 208


state 206

    (40) elif -> ELIF expressao : error listacmd . ] elif

    ]               shift and go to state 209


state 207

    (38) elif -> ELIF expressao : [ listacmd . ] elif
    (41) elif -> ELIF expressao : [ listacmd . error elif

    ]               shift and go to state 211
    error           shift and go to state 210


state 208

    (39) elif -> ELIF expressao error [ listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 212
    empty                          shift and go to state 169

state 209

    (40) elif -> ELIF expressao : error listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 213
    empty                          shift and go to state 169

state 210

    (41) elif -> ELIF expressao : [ listacmd error . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 214
    empty                          shift and go to state 169

state 211

    (38) elif -> ELIF expressao : [ listacmd ] . elif
    (37) elif -> . empty
    (38) elif -> . ELIF expressao : [ listacmd ] elif
    (39) elif -> . ELIF expressao error [ listacmd ] elif
    (40) elif -> . ELIF expressao : error listacmd ] elif
    (41) elif -> . ELIF expressao : [ listacmd error elif
    (7) empty -> .

    ELIF            shift and go to state 168
    ELSE            reduce using rule 7 (empty -> .)
    ;               reduce using rule 7 (empty -> .)
    error           reduce using rule 7 (empty -> .)

    elif                           shift and go to state 215
    empty                          shift and go to state 169

state 212

    (39) elif -> ELIF expressao error [ listacmd ] elif .

    ELSE            reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)
    ;               reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)
    error           reduce using rule 39 (elif -> ELIF expressao error [ listacmd ] elif .)


state 213

    (40) elif -> ELIF expressao : error listacmd ] elif .

    ELSE            reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)
    ;               reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)
    error           reduce using rule 40 (elif -> ELIF expressao : error listacmd ] elif .)


state 214

    (41) elif -> ELIF expressao : [ listacmd error elif .

    ELSE            reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)
    ;               reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)
    error           reduce using rule 41 (elif -> ELIF expressao : [ listacmd error elif .)


state 215

    (38) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 38 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 35 resolved as shift
WARNING: shift/reduce conflict for error in state 97 resolved as shift
WARNING: shift/reduce conflict for error in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 109 resolved as shift
WARNING: shift/reduce conflict for error in state 110 resolved as shift
