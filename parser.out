Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID : [ listacmd ]
Rule 2     empty -> <empty>
Rule 3     listacmd -> comando listacmd1
Rule 4     listacmd1 -> empty
Rule 5     listacmd1 -> listacmd
Rule 6     comando -> cmdatribui
Rule 7     comando -> cmdentrada
Rule 8     comando -> cmdsaida
Rule 9     comando -> cmdselecao
Rule 10    comando -> cmdrepeticao
Rule 11    listaidenti -> ID listaindenti1
Rule 12    listaindenti1 -> empty
Rule 13    listaindenti1 -> , listaidenti
Rule 14    listaexp -> expressao listaexp1
Rule 15    listaexp1 -> , listaexp
Rule 16    listaexp1 -> empty
Rule 17    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 18    cmdentrada -> INPUT ( listaidenti ) ;
Rule 19    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 20    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 21    elif -> empty
Rule 22    elif -> ELIF expressao : [ listacmd ] elif
Rule 23    else -> empty
Rule 24    else -> ELSE : [ listacmd ]
Rule 25    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 26    expressao -> valor expressao1
Rule 27    expressao1 -> empty
Rule 28    expressao1 -> OR valor expressao1
Rule 29    expressao1 -> AND valor expressao1
Rule 30    valor -> relacional
Rule 31    valor -> TRUE
Rule 32    valor -> FALSE
Rule 33    valor -> NOT valor
Rule 34    relacional -> aritmetica relacional1
Rule 35    relacional1 -> operador aritmetica
Rule 36    relacional1 -> empty
Rule 37    operador -> SIM_EQ
Rule 38    operador -> SIM_DIF
Rule 39    operador -> <
Rule 40    operador -> SIM_LE
Rule 41    operador -> >
Rule 42    operador -> SIM_GE
Rule 43    aritmetica -> termo aritmetica1
Rule 44    aritmetica1 -> empty
Rule 45    aritmetica1 -> + termo aritmetica1
Rule 46    aritmetica1 -> - termo aritmetica1
Rule 47    termo -> fator termo1
Rule 48    termo1 -> empty
Rule 49    termo1 -> * fator termo1
Rule 50    termo1 -> / fator termo1
Rule 51    termo1 -> % fator termo1
Rule 52    fator -> elemento fator1
Rule 53    fator1 -> empty
Rule 54    fator1 -> SIM_POT elemento fator1
Rule 55    elemento -> ID
Rule 56    elemento -> INTEIRO
Rule 57    elemento -> REAL
Rule 58    elemento -> LITERAL
Rule 59    elemento -> ( expressao )
Rule 60    elemento -> + elemento
Rule 61    elemento -> - elemento

Terminals, with rules where they appear

%                    : 51
(                    : 18 19 59
)                    : 18 19 59
*                    : 49
+                    : 45 60
,                    : 13 15
-                    : 46 61
/                    : 50
:                    : 1 20 22 24 25
;                    : 17 18 19 20 25
<                    : 39
>                    : 41
AND                  : 29
BINARIO              : 
DEF                  : 1
ELIF                 : 22
ELSE                 : 24
FALSE                : 32
HEXADECIMAL          : 
ID                   : 1 11 55
IF                   : 20
INPUT                : 18
INTEIRO              : 56
LITERAL              : 58
NOT                  : 33
OCTAL                : 
OR                   : 28
OUTPUT               : 19
REAL                 : 57
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 17
SIM_DIF              : 38
SIM_EQ               : 37
SIM_GE               : 42
SIM_LE               : 40
SIM_POT              : 54
TRUE                 : 31
WHILE                : 25
[                    : 1 20 22 24 25
]                    : 1 20 22 24 25
error                : 

Nonterminals, with rules where they appear

aritmetica           : 34 35
aritmetica1          : 43 45 46
cmdatribui           : 6
cmdentrada           : 7
cmdrepeticao         : 10
cmdsaida             : 8
cmdselecao           : 9
comando              : 3
elemento             : 52 54 60 61
elif                 : 20 22
else                 : 20 25
empty                : 4 12 16 21 23 27 36 44 48 53
expressao            : 14 17 20 22 25 59
expressao1           : 26 28 29
fator                : 47 49 50 51
fator1               : 52 54
listacmd             : 1 5 20 22 24 25
listacmd1            : 3
listaexp             : 15 19
listaexp1            : 14
listaidenti          : 13 17 18
listaindenti1        : 11
operador             : 35
programa             : 0
relacional           : 30
relacional1          : 34
termo                : 43 45 46
termo1               : 47 49 50 51
valor                : 26 28 29 33

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID : [ listacmd ]

    DEF             shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> DEF . ID : [ listacmd ]

    ID              shift and go to state 3


state 3

    (1) programa -> DEF ID . : [ listacmd ]

    :               shift and go to state 4


state 4

    (1) programa -> DEF ID : . [ listacmd ]

    [               shift and go to state 5


state 5

    (1) programa -> DEF ID : [ . listacmd ]
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 9
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 6

    (9) comando -> cmdselecao .

    INPUT           reduce using rule 9 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 9 (comando -> cmdselecao .)
    IF              reduce using rule 9 (comando -> cmdselecao .)
    WHILE           reduce using rule 9 (comando -> cmdselecao .)
    ID              reduce using rule 9 (comando -> cmdselecao .)
    ]               reduce using rule 9 (comando -> cmdselecao .)


state 7

    (7) comando -> cmdentrada .

    INPUT           reduce using rule 7 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 7 (comando -> cmdentrada .)
    IF              reduce using rule 7 (comando -> cmdentrada .)
    WHILE           reduce using rule 7 (comando -> cmdentrada .)
    ID              reduce using rule 7 (comando -> cmdentrada .)
    ]               reduce using rule 7 (comando -> cmdentrada .)


state 8

    (25) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 23
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 9

    (1) programa -> DEF ID : [ listacmd . ]

    ]               shift and go to state 36


state 10

    (6) comando -> cmdatribui .

    INPUT           reduce using rule 6 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 6 (comando -> cmdatribui .)
    IF              reduce using rule 6 (comando -> cmdatribui .)
    WHILE           reduce using rule 6 (comando -> cmdatribui .)
    ID              reduce using rule 6 (comando -> cmdatribui .)
    ]               reduce using rule 6 (comando -> cmdatribui .)


state 11

    (8) comando -> cmdsaida .

    INPUT           reduce using rule 8 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 8 (comando -> cmdsaida .)
    IF              reduce using rule 8 (comando -> cmdsaida .)
    WHILE           reduce using rule 8 (comando -> cmdsaida .)
    ID              reduce using rule 8 (comando -> cmdsaida .)
    ]               reduce using rule 8 (comando -> cmdsaida .)


state 12

    (17) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 37


state 13

    (18) cmdentrada -> INPUT . ( listaidenti ) ;

    (               shift and go to state 38


state 14

    (11) listaidenti -> ID . listaindenti1
    (12) listaindenti1 -> . empty
    (13) listaindenti1 -> . , listaidenti
    (2) empty -> .

    ,               shift and go to state 41
    SIM_ATTR        reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)

    listaindenti1                  shift and go to state 39
    empty                          shift and go to state 40

state 15

    (20) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 42
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 16

    (10) comando -> cmdrepeticao .

    INPUT           reduce using rule 10 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 10 (comando -> cmdrepeticao .)
    IF              reduce using rule 10 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 10 (comando -> cmdrepeticao .)
    ID              reduce using rule 10 (comando -> cmdrepeticao .)
    ]               reduce using rule 10 (comando -> cmdrepeticao .)


state 17

    (3) listacmd -> comando . listacmd1
    (4) listacmd1 -> . empty
    (5) listacmd1 -> . listacmd
    (2) empty -> .
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    ]               reduce using rule 2 (empty -> .)
    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    listacmd1                      shift and go to state 44
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 43
    cmdsaida                       shift and go to state 11
    empty                          shift and go to state 45
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 18

    (19) cmdsaida -> OUTPUT . ( listaexp ) ;

    (               shift and go to state 46


state 19

    (57) elemento -> REAL .

    SIM_POT         reduce using rule 57 (elemento -> REAL .)
    *               reduce using rule 57 (elemento -> REAL .)
    /               reduce using rule 57 (elemento -> REAL .)
    %               reduce using rule 57 (elemento -> REAL .)
    +               reduce using rule 57 (elemento -> REAL .)
    -               reduce using rule 57 (elemento -> REAL .)
    SIM_EQ          reduce using rule 57 (elemento -> REAL .)
    SIM_DIF         reduce using rule 57 (elemento -> REAL .)
    <               reduce using rule 57 (elemento -> REAL .)
    SIM_LE          reduce using rule 57 (elemento -> REAL .)
    >               reduce using rule 57 (elemento -> REAL .)
    SIM_GE          reduce using rule 57 (elemento -> REAL .)
    OR              reduce using rule 57 (elemento -> REAL .)
    AND             reduce using rule 57 (elemento -> REAL .)
    :               reduce using rule 57 (elemento -> REAL .)
    )               reduce using rule 57 (elemento -> REAL .)
    ;               reduce using rule 57 (elemento -> REAL .)
    ,               reduce using rule 57 (elemento -> REAL .)


state 20

    (61) elemento -> - . elemento
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 47

state 21

    (31) valor -> TRUE .

    OR              reduce using rule 31 (valor -> TRUE .)
    AND             reduce using rule 31 (valor -> TRUE .)
    :               reduce using rule 31 (valor -> TRUE .)
    )               reduce using rule 31 (valor -> TRUE .)
    ;               reduce using rule 31 (valor -> TRUE .)
    ,               reduce using rule 31 (valor -> TRUE .)


state 22

    (56) elemento -> INTEIRO .

    SIM_POT         reduce using rule 56 (elemento -> INTEIRO .)
    *               reduce using rule 56 (elemento -> INTEIRO .)
    /               reduce using rule 56 (elemento -> INTEIRO .)
    %               reduce using rule 56 (elemento -> INTEIRO .)
    +               reduce using rule 56 (elemento -> INTEIRO .)
    -               reduce using rule 56 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 56 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 56 (elemento -> INTEIRO .)
    <               reduce using rule 56 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 56 (elemento -> INTEIRO .)
    >               reduce using rule 56 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 56 (elemento -> INTEIRO .)
    OR              reduce using rule 56 (elemento -> INTEIRO .)
    AND             reduce using rule 56 (elemento -> INTEIRO .)
    :               reduce using rule 56 (elemento -> INTEIRO .)
    )               reduce using rule 56 (elemento -> INTEIRO .)
    ;               reduce using rule 56 (elemento -> INTEIRO .)
    ,               reduce using rule 56 (elemento -> INTEIRO .)


state 23

    (25) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;

    :               shift and go to state 48


state 24

    (60) elemento -> + . elemento
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 49

state 25

    (47) termo -> fator . termo1
    (48) termo1 -> . empty
    (49) termo1 -> . * fator termo1
    (50) termo1 -> . / fator termo1
    (51) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 51
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 50
    empty                          shift and go to state 54

state 26

    (34) relacional -> aritmetica . relacional1
    (35) relacional1 -> . operador aritmetica
    (36) relacional1 -> . empty
    (37) operador -> . SIM_EQ
    (38) operador -> . SIM_DIF
    (39) operador -> . <
    (40) operador -> . SIM_LE
    (41) operador -> . >
    (42) operador -> . SIM_GE
    (2) empty -> .

    SIM_EQ          shift and go to state 55
    SIM_DIF         shift and go to state 58
    <               shift and go to state 61
    SIM_LE          shift and go to state 63
    >               shift and go to state 60
    SIM_GE          shift and go to state 57
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    relacional1                    shift and go to state 59
    operador                       shift and go to state 56
    empty                          shift and go to state 62

state 27

    (26) expressao -> valor . expressao1
    (27) expressao1 -> . empty
    (28) expressao1 -> . OR valor expressao1
    (29) expressao1 -> . AND valor expressao1
    (2) empty -> .

    OR              shift and go to state 66
    AND             shift and go to state 64
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    expressao1                     shift and go to state 65
    empty                          shift and go to state 67

state 28

    (58) elemento -> LITERAL .

    SIM_POT         reduce using rule 58 (elemento -> LITERAL .)
    *               reduce using rule 58 (elemento -> LITERAL .)
    /               reduce using rule 58 (elemento -> LITERAL .)
    %               reduce using rule 58 (elemento -> LITERAL .)
    +               reduce using rule 58 (elemento -> LITERAL .)
    -               reduce using rule 58 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 58 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 58 (elemento -> LITERAL .)
    <               reduce using rule 58 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 58 (elemento -> LITERAL .)
    >               reduce using rule 58 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 58 (elemento -> LITERAL .)
    OR              reduce using rule 58 (elemento -> LITERAL .)
    AND             reduce using rule 58 (elemento -> LITERAL .)
    :               reduce using rule 58 (elemento -> LITERAL .)
    )               reduce using rule 58 (elemento -> LITERAL .)
    ;               reduce using rule 58 (elemento -> LITERAL .)
    ,               reduce using rule 58 (elemento -> LITERAL .)


state 29

    (43) aritmetica -> termo . aritmetica1
    (44) aritmetica1 -> . empty
    (45) aritmetica1 -> . + termo aritmetica1
    (46) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 69
    -               shift and go to state 70
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 68
    empty                          shift and go to state 71

state 30

    (30) valor -> relacional .

    OR              reduce using rule 30 (valor -> relacional .)
    AND             reduce using rule 30 (valor -> relacional .)
    :               reduce using rule 30 (valor -> relacional .)
    )               reduce using rule 30 (valor -> relacional .)
    ;               reduce using rule 30 (valor -> relacional .)
    ,               reduce using rule 30 (valor -> relacional .)


state 31

    (55) elemento -> ID .

    SIM_POT         reduce using rule 55 (elemento -> ID .)
    *               reduce using rule 55 (elemento -> ID .)
    /               reduce using rule 55 (elemento -> ID .)
    %               reduce using rule 55 (elemento -> ID .)
    +               reduce using rule 55 (elemento -> ID .)
    -               reduce using rule 55 (elemento -> ID .)
    SIM_EQ          reduce using rule 55 (elemento -> ID .)
    SIM_DIF         reduce using rule 55 (elemento -> ID .)
    <               reduce using rule 55 (elemento -> ID .)
    SIM_LE          reduce using rule 55 (elemento -> ID .)
    >               reduce using rule 55 (elemento -> ID .)
    SIM_GE          reduce using rule 55 (elemento -> ID .)
    OR              reduce using rule 55 (elemento -> ID .)
    AND             reduce using rule 55 (elemento -> ID .)
    :               reduce using rule 55 (elemento -> ID .)
    )               reduce using rule 55 (elemento -> ID .)
    ;               reduce using rule 55 (elemento -> ID .)
    ,               reduce using rule 55 (elemento -> ID .)


state 32

    (52) fator -> elemento . fator1
    (53) fator1 -> . empty
    (54) fator1 -> . SIM_POT elemento fator1
    (2) empty -> .

    SIM_POT         shift and go to state 73
    *               reduce using rule 2 (empty -> .)
    /               reduce using rule 2 (empty -> .)
    %               reduce using rule 2 (empty -> .)
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    fator1                         shift and go to state 72
    empty                          shift and go to state 74

state 33

    (32) valor -> FALSE .

    OR              reduce using rule 32 (valor -> FALSE .)
    AND             reduce using rule 32 (valor -> FALSE .)
    :               reduce using rule 32 (valor -> FALSE .)
    )               reduce using rule 32 (valor -> FALSE .)
    ;               reduce using rule 32 (valor -> FALSE .)
    ,               reduce using rule 32 (valor -> FALSE .)


state 34

    (59) elemento -> ( . expressao )
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 75
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 35

    (33) valor -> NOT . valor
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 76
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 36

    (1) programa -> DEF ID : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID : [ listacmd ] .)


state 37

    (17) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 77
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 38

    (18) cmdentrada -> INPUT ( . listaidenti ) ;
    (11) listaidenti -> . ID listaindenti1

    ID              shift and go to state 14

    listaidenti                    shift and go to state 78

state 39

    (11) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 11 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 11 (listaidenti -> ID listaindenti1 .)


state 40

    (12) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 12 (listaindenti1 -> empty .)
    )               reduce using rule 12 (listaindenti1 -> empty .)


state 41

    (13) listaindenti1 -> , . listaidenti
    (11) listaidenti -> . ID listaindenti1

    ID              shift and go to state 14

    listaidenti                    shift and go to state 79

state 42

    (20) cmdselecao -> IF expressao . : [ listacmd ] elif else ;

    :               shift and go to state 80


state 43

    (5) listacmd1 -> listacmd .

    ]               reduce using rule 5 (listacmd1 -> listacmd .)


state 44

    (3) listacmd -> comando listacmd1 .

    ]               reduce using rule 3 (listacmd -> comando listacmd1 .)


state 45

    (4) listacmd1 -> empty .

    ]               reduce using rule 4 (listacmd1 -> empty .)


state 46

    (19) cmdsaida -> OUTPUT ( . listaexp ) ;
    (14) listaexp -> . expressao listaexp1
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 81
    listaexp                       shift and go to state 82
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 47

    (61) elemento -> - elemento .

    SIM_POT         reduce using rule 61 (elemento -> - elemento .)
    *               reduce using rule 61 (elemento -> - elemento .)
    /               reduce using rule 61 (elemento -> - elemento .)
    %               reduce using rule 61 (elemento -> - elemento .)
    +               reduce using rule 61 (elemento -> - elemento .)
    -               reduce using rule 61 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 61 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 61 (elemento -> - elemento .)
    <               reduce using rule 61 (elemento -> - elemento .)
    SIM_LE          reduce using rule 61 (elemento -> - elemento .)
    >               reduce using rule 61 (elemento -> - elemento .)
    SIM_GE          reduce using rule 61 (elemento -> - elemento .)
    OR              reduce using rule 61 (elemento -> - elemento .)
    AND             reduce using rule 61 (elemento -> - elemento .)
    :               reduce using rule 61 (elemento -> - elemento .)
    )               reduce using rule 61 (elemento -> - elemento .)
    ;               reduce using rule 61 (elemento -> - elemento .)
    ,               reduce using rule 61 (elemento -> - elemento .)


state 48

    (25) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;

    [               shift and go to state 83


state 49

    (60) elemento -> + elemento .

    SIM_POT         reduce using rule 60 (elemento -> + elemento .)
    *               reduce using rule 60 (elemento -> + elemento .)
    /               reduce using rule 60 (elemento -> + elemento .)
    %               reduce using rule 60 (elemento -> + elemento .)
    +               reduce using rule 60 (elemento -> + elemento .)
    -               reduce using rule 60 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 60 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 60 (elemento -> + elemento .)
    <               reduce using rule 60 (elemento -> + elemento .)
    SIM_LE          reduce using rule 60 (elemento -> + elemento .)
    >               reduce using rule 60 (elemento -> + elemento .)
    SIM_GE          reduce using rule 60 (elemento -> + elemento .)
    OR              reduce using rule 60 (elemento -> + elemento .)
    AND             reduce using rule 60 (elemento -> + elemento .)
    :               reduce using rule 60 (elemento -> + elemento .)
    )               reduce using rule 60 (elemento -> + elemento .)
    ;               reduce using rule 60 (elemento -> + elemento .)
    ,               reduce using rule 60 (elemento -> + elemento .)


state 50

    (47) termo -> fator termo1 .

    +               reduce using rule 47 (termo -> fator termo1 .)
    -               reduce using rule 47 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 47 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 47 (termo -> fator termo1 .)
    <               reduce using rule 47 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 47 (termo -> fator termo1 .)
    >               reduce using rule 47 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 47 (termo -> fator termo1 .)
    OR              reduce using rule 47 (termo -> fator termo1 .)
    AND             reduce using rule 47 (termo -> fator termo1 .)
    ;               reduce using rule 47 (termo -> fator termo1 .)
    ,               reduce using rule 47 (termo -> fator termo1 .)
    )               reduce using rule 47 (termo -> fator termo1 .)
    :               reduce using rule 47 (termo -> fator termo1 .)


state 51

    (51) termo1 -> % . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 32
    fator                          shift and go to state 84

state 52

    (49) termo1 -> * . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 32
    fator                          shift and go to state 85

state 53

    (50) termo1 -> / . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 32
    fator                          shift and go to state 86

state 54

    (48) termo1 -> empty .

    +               reduce using rule 48 (termo1 -> empty .)
    -               reduce using rule 48 (termo1 -> empty .)
    SIM_EQ          reduce using rule 48 (termo1 -> empty .)
    SIM_DIF         reduce using rule 48 (termo1 -> empty .)
    <               reduce using rule 48 (termo1 -> empty .)
    SIM_LE          reduce using rule 48 (termo1 -> empty .)
    >               reduce using rule 48 (termo1 -> empty .)
    SIM_GE          reduce using rule 48 (termo1 -> empty .)
    OR              reduce using rule 48 (termo1 -> empty .)
    AND             reduce using rule 48 (termo1 -> empty .)
    :               reduce using rule 48 (termo1 -> empty .)
    )               reduce using rule 48 (termo1 -> empty .)
    ;               reduce using rule 48 (termo1 -> empty .)
    ,               reduce using rule 48 (termo1 -> empty .)


state 55

    (37) operador -> SIM_EQ .

    ID              reduce using rule 37 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 37 (operador -> SIM_EQ .)
    REAL            reduce using rule 37 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 37 (operador -> SIM_EQ .)
    (               reduce using rule 37 (operador -> SIM_EQ .)
    +               reduce using rule 37 (operador -> SIM_EQ .)
    -               reduce using rule 37 (operador -> SIM_EQ .)


state 56

    (35) relacional1 -> operador . aritmetica
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    aritmetica                     shift and go to state 87
    termo                          shift and go to state 29
    elemento                       shift and go to state 32

state 57

    (42) operador -> SIM_GE .

    ID              reduce using rule 42 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 42 (operador -> SIM_GE .)
    REAL            reduce using rule 42 (operador -> SIM_GE .)
    LITERAL         reduce using rule 42 (operador -> SIM_GE .)
    (               reduce using rule 42 (operador -> SIM_GE .)
    +               reduce using rule 42 (operador -> SIM_GE .)
    -               reduce using rule 42 (operador -> SIM_GE .)


state 58

    (38) operador -> SIM_DIF .

    ID              reduce using rule 38 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 38 (operador -> SIM_DIF .)
    REAL            reduce using rule 38 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 38 (operador -> SIM_DIF .)
    (               reduce using rule 38 (operador -> SIM_DIF .)
    +               reduce using rule 38 (operador -> SIM_DIF .)
    -               reduce using rule 38 (operador -> SIM_DIF .)


state 59

    (34) relacional -> aritmetica relacional1 .

    OR              reduce using rule 34 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 34 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 34 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 34 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 34 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 34 (relacional -> aritmetica relacional1 .)


state 60

    (41) operador -> > .

    ID              reduce using rule 41 (operador -> > .)
    INTEIRO         reduce using rule 41 (operador -> > .)
    REAL            reduce using rule 41 (operador -> > .)
    LITERAL         reduce using rule 41 (operador -> > .)
    (               reduce using rule 41 (operador -> > .)
    +               reduce using rule 41 (operador -> > .)
    -               reduce using rule 41 (operador -> > .)


state 61

    (39) operador -> < .

    ID              reduce using rule 39 (operador -> < .)
    INTEIRO         reduce using rule 39 (operador -> < .)
    REAL            reduce using rule 39 (operador -> < .)
    LITERAL         reduce using rule 39 (operador -> < .)
    (               reduce using rule 39 (operador -> < .)
    +               reduce using rule 39 (operador -> < .)
    -               reduce using rule 39 (operador -> < .)


state 62

    (36) relacional1 -> empty .

    OR              reduce using rule 36 (relacional1 -> empty .)
    AND             reduce using rule 36 (relacional1 -> empty .)
    :               reduce using rule 36 (relacional1 -> empty .)
    )               reduce using rule 36 (relacional1 -> empty .)
    ;               reduce using rule 36 (relacional1 -> empty .)
    ,               reduce using rule 36 (relacional1 -> empty .)


state 63

    (40) operador -> SIM_LE .

    ID              reduce using rule 40 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 40 (operador -> SIM_LE .)
    REAL            reduce using rule 40 (operador -> SIM_LE .)
    LITERAL         reduce using rule 40 (operador -> SIM_LE .)
    (               reduce using rule 40 (operador -> SIM_LE .)
    +               reduce using rule 40 (operador -> SIM_LE .)
    -               reduce using rule 40 (operador -> SIM_LE .)


state 64

    (29) expressao1 -> AND . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 88
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 65

    (26) expressao -> valor expressao1 .

    ,               reduce using rule 26 (expressao -> valor expressao1 .)
    )               reduce using rule 26 (expressao -> valor expressao1 .)
    :               reduce using rule 26 (expressao -> valor expressao1 .)
    ;               reduce using rule 26 (expressao -> valor expressao1 .)


state 66

    (28) expressao1 -> OR . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 89
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 67

    (27) expressao1 -> empty .

    :               reduce using rule 27 (expressao1 -> empty .)
    )               reduce using rule 27 (expressao1 -> empty .)
    ;               reduce using rule 27 (expressao1 -> empty .)
    ,               reduce using rule 27 (expressao1 -> empty .)


state 68

    (43) aritmetica -> termo aritmetica1 .

    OR              reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    SIM_EQ          reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 43 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 43 (aritmetica -> termo aritmetica1 .)


state 69

    (45) aritmetica1 -> + . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 90
    elemento                       shift and go to state 32

state 70

    (46) aritmetica1 -> - . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    fator                          shift and go to state 25
    termo                          shift and go to state 91
    elemento                       shift and go to state 32

state 71

    (44) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 44 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 44 (aritmetica1 -> empty .)
    <               reduce using rule 44 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 44 (aritmetica1 -> empty .)
    >               reduce using rule 44 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 44 (aritmetica1 -> empty .)
    OR              reduce using rule 44 (aritmetica1 -> empty .)
    AND             reduce using rule 44 (aritmetica1 -> empty .)
    :               reduce using rule 44 (aritmetica1 -> empty .)
    )               reduce using rule 44 (aritmetica1 -> empty .)
    ;               reduce using rule 44 (aritmetica1 -> empty .)
    ,               reduce using rule 44 (aritmetica1 -> empty .)


state 72

    (52) fator -> elemento fator1 .

    *               reduce using rule 52 (fator -> elemento fator1 .)
    /               reduce using rule 52 (fator -> elemento fator1 .)
    %               reduce using rule 52 (fator -> elemento fator1 .)
    +               reduce using rule 52 (fator -> elemento fator1 .)
    -               reduce using rule 52 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 52 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 52 (fator -> elemento fator1 .)
    <               reduce using rule 52 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 52 (fator -> elemento fator1 .)
    >               reduce using rule 52 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 52 (fator -> elemento fator1 .)
    OR              reduce using rule 52 (fator -> elemento fator1 .)
    AND             reduce using rule 52 (fator -> elemento fator1 .)
    )               reduce using rule 52 (fator -> elemento fator1 .)
    :               reduce using rule 52 (fator -> elemento fator1 .)
    ;               reduce using rule 52 (fator -> elemento fator1 .)
    ,               reduce using rule 52 (fator -> elemento fator1 .)


state 73

    (54) fator1 -> SIM_POT . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    elemento                       shift and go to state 92

state 74

    (53) fator1 -> empty .

    *               reduce using rule 53 (fator1 -> empty .)
    /               reduce using rule 53 (fator1 -> empty .)
    %               reduce using rule 53 (fator1 -> empty .)
    +               reduce using rule 53 (fator1 -> empty .)
    -               reduce using rule 53 (fator1 -> empty .)
    SIM_EQ          reduce using rule 53 (fator1 -> empty .)
    SIM_DIF         reduce using rule 53 (fator1 -> empty .)
    <               reduce using rule 53 (fator1 -> empty .)
    SIM_LE          reduce using rule 53 (fator1 -> empty .)
    >               reduce using rule 53 (fator1 -> empty .)
    SIM_GE          reduce using rule 53 (fator1 -> empty .)
    OR              reduce using rule 53 (fator1 -> empty .)
    AND             reduce using rule 53 (fator1 -> empty .)
    :               reduce using rule 53 (fator1 -> empty .)
    )               reduce using rule 53 (fator1 -> empty .)
    ;               reduce using rule 53 (fator1 -> empty .)
    ,               reduce using rule 53 (fator1 -> empty .)


state 75

    (59) elemento -> ( expressao . )

    )               shift and go to state 93


state 76

    (33) valor -> NOT valor .

    OR              reduce using rule 33 (valor -> NOT valor .)
    AND             reduce using rule 33 (valor -> NOT valor .)
    :               reduce using rule 33 (valor -> NOT valor .)
    )               reduce using rule 33 (valor -> NOT valor .)
    ;               reduce using rule 33 (valor -> NOT valor .)
    ,               reduce using rule 33 (valor -> NOT valor .)


state 77

    (17) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 94


state 78

    (18) cmdentrada -> INPUT ( listaidenti . ) ;

    )               shift and go to state 95


state 79

    (13) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 13 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 13 (listaindenti1 -> , listaidenti .)


state 80

    (20) cmdselecao -> IF expressao : . [ listacmd ] elif else ;

    [               shift and go to state 96


state 81

    (14) listaexp -> expressao . listaexp1
    (15) listaexp1 -> . , listaexp
    (16) listaexp1 -> . empty
    (2) empty -> .

    ,               shift and go to state 99
    )               reduce using rule 2 (empty -> .)

    listaexp1                      shift and go to state 97
    empty                          shift and go to state 98

state 82

    (19) cmdsaida -> OUTPUT ( listaexp . ) ;

    )               shift and go to state 100


state 83

    (25) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 101
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 84

    (51) termo1 -> % fator . termo1
    (48) termo1 -> . empty
    (49) termo1 -> . * fator termo1
    (50) termo1 -> . / fator termo1
    (51) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 51
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 102
    empty                          shift and go to state 54

state 85

    (49) termo1 -> * fator . termo1
    (48) termo1 -> . empty
    (49) termo1 -> . * fator termo1
    (50) termo1 -> . / fator termo1
    (51) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 51
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 103
    empty                          shift and go to state 54

state 86

    (50) termo1 -> / fator . termo1
    (48) termo1 -> . empty
    (49) termo1 -> . * fator termo1
    (50) termo1 -> . / fator termo1
    (51) termo1 -> . % fator termo1
    (2) empty -> .

    *               shift and go to state 52
    /               shift and go to state 53
    %               shift and go to state 51
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    termo1                         shift and go to state 104
    empty                          shift and go to state 54

state 87

    (35) relacional1 -> operador aritmetica .

    OR              reduce using rule 35 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 35 (relacional1 -> operador aritmetica .)
    :               reduce using rule 35 (relacional1 -> operador aritmetica .)
    )               reduce using rule 35 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 35 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 35 (relacional1 -> operador aritmetica .)


state 88

    (29) expressao1 -> AND valor . expressao1
    (27) expressao1 -> . empty
    (28) expressao1 -> . OR valor expressao1
    (29) expressao1 -> . AND valor expressao1
    (2) empty -> .

    OR              shift and go to state 66
    AND             shift and go to state 64
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    expressao1                     shift and go to state 105
    empty                          shift and go to state 67

state 89

    (28) expressao1 -> OR valor . expressao1
    (27) expressao1 -> . empty
    (28) expressao1 -> . OR valor expressao1
    (29) expressao1 -> . AND valor expressao1
    (2) empty -> .

    OR              shift and go to state 66
    AND             shift and go to state 64
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    expressao1                     shift and go to state 106
    empty                          shift and go to state 67

state 90

    (45) aritmetica1 -> + termo . aritmetica1
    (44) aritmetica1 -> . empty
    (45) aritmetica1 -> . + termo aritmetica1
    (46) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 69
    -               shift and go to state 70
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 107
    empty                          shift and go to state 71

state 91

    (46) aritmetica1 -> - termo . aritmetica1
    (44) aritmetica1 -> . empty
    (45) aritmetica1 -> . + termo aritmetica1
    (46) aritmetica1 -> . - termo aritmetica1
    (2) empty -> .

    +               shift and go to state 69
    -               shift and go to state 70
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    aritmetica1                    shift and go to state 108
    empty                          shift and go to state 71

state 92

    (54) fator1 -> SIM_POT elemento . fator1
    (53) fator1 -> . empty
    (54) fator1 -> . SIM_POT elemento fator1
    (2) empty -> .

    SIM_POT         shift and go to state 73
    *               reduce using rule 2 (empty -> .)
    /               reduce using rule 2 (empty -> .)
    %               reduce using rule 2 (empty -> .)
    +               reduce using rule 2 (empty -> .)
    -               reduce using rule 2 (empty -> .)
    SIM_EQ          reduce using rule 2 (empty -> .)
    SIM_DIF         reduce using rule 2 (empty -> .)
    <               reduce using rule 2 (empty -> .)
    SIM_LE          reduce using rule 2 (empty -> .)
    >               reduce using rule 2 (empty -> .)
    SIM_GE          reduce using rule 2 (empty -> .)
    OR              reduce using rule 2 (empty -> .)
    AND             reduce using rule 2 (empty -> .)
    :               reduce using rule 2 (empty -> .)
    )               reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)
    ,               reduce using rule 2 (empty -> .)

    fator1                         shift and go to state 109
    empty                          shift and go to state 74

state 93

    (59) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 59 (elemento -> ( expressao ) .)
    *               reduce using rule 59 (elemento -> ( expressao ) .)
    /               reduce using rule 59 (elemento -> ( expressao ) .)
    %               reduce using rule 59 (elemento -> ( expressao ) .)
    +               reduce using rule 59 (elemento -> ( expressao ) .)
    -               reduce using rule 59 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 59 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 59 (elemento -> ( expressao ) .)
    <               reduce using rule 59 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 59 (elemento -> ( expressao ) .)
    >               reduce using rule 59 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 59 (elemento -> ( expressao ) .)
    OR              reduce using rule 59 (elemento -> ( expressao ) .)
    AND             reduce using rule 59 (elemento -> ( expressao ) .)
    :               reduce using rule 59 (elemento -> ( expressao ) .)
    )               reduce using rule 59 (elemento -> ( expressao ) .)
    ;               reduce using rule 59 (elemento -> ( expressao ) .)
    ,               reduce using rule 59 (elemento -> ( expressao ) .)


state 94

    (17) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 17 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 95

    (18) cmdentrada -> INPUT ( listaidenti ) . ;

    ;               shift and go to state 110


state 96

    (20) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 111
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 97

    (14) listaexp -> expressao listaexp1 .

    )               reduce using rule 14 (listaexp -> expressao listaexp1 .)


state 98

    (16) listaexp1 -> empty .

    )               reduce using rule 16 (listaexp1 -> empty .)


state 99

    (15) listaexp1 -> , . listaexp
    (14) listaexp -> . expressao listaexp1
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    expressao                      shift and go to state 81
    listaexp                       shift and go to state 112
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    aritmetica                     shift and go to state 26
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 100

    (19) cmdsaida -> OUTPUT ( listaexp ) . ;

    ;               shift and go to state 113


state 101

    (25) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;

    ]               shift and go to state 114


state 102

    (51) termo1 -> % fator termo1 .

    +               reduce using rule 51 (termo1 -> % fator termo1 .)
    -               reduce using rule 51 (termo1 -> % fator termo1 .)
    SIM_EQ          reduce using rule 51 (termo1 -> % fator termo1 .)
    SIM_DIF         reduce using rule 51 (termo1 -> % fator termo1 .)
    <               reduce using rule 51 (termo1 -> % fator termo1 .)
    SIM_LE          reduce using rule 51 (termo1 -> % fator termo1 .)
    >               reduce using rule 51 (termo1 -> % fator termo1 .)
    SIM_GE          reduce using rule 51 (termo1 -> % fator termo1 .)
    OR              reduce using rule 51 (termo1 -> % fator termo1 .)
    AND             reduce using rule 51 (termo1 -> % fator termo1 .)
    :               reduce using rule 51 (termo1 -> % fator termo1 .)
    )               reduce using rule 51 (termo1 -> % fator termo1 .)
    ;               reduce using rule 51 (termo1 -> % fator termo1 .)
    ,               reduce using rule 51 (termo1 -> % fator termo1 .)


state 103

    (49) termo1 -> * fator termo1 .

    +               reduce using rule 49 (termo1 -> * fator termo1 .)
    -               reduce using rule 49 (termo1 -> * fator termo1 .)
    SIM_EQ          reduce using rule 49 (termo1 -> * fator termo1 .)
    SIM_DIF         reduce using rule 49 (termo1 -> * fator termo1 .)
    <               reduce using rule 49 (termo1 -> * fator termo1 .)
    SIM_LE          reduce using rule 49 (termo1 -> * fator termo1 .)
    >               reduce using rule 49 (termo1 -> * fator termo1 .)
    SIM_GE          reduce using rule 49 (termo1 -> * fator termo1 .)
    OR              reduce using rule 49 (termo1 -> * fator termo1 .)
    AND             reduce using rule 49 (termo1 -> * fator termo1 .)
    :               reduce using rule 49 (termo1 -> * fator termo1 .)
    )               reduce using rule 49 (termo1 -> * fator termo1 .)
    ;               reduce using rule 49 (termo1 -> * fator termo1 .)
    ,               reduce using rule 49 (termo1 -> * fator termo1 .)


state 104

    (50) termo1 -> / fator termo1 .

    +               reduce using rule 50 (termo1 -> / fator termo1 .)
    -               reduce using rule 50 (termo1 -> / fator termo1 .)
    SIM_EQ          reduce using rule 50 (termo1 -> / fator termo1 .)
    SIM_DIF         reduce using rule 50 (termo1 -> / fator termo1 .)
    <               reduce using rule 50 (termo1 -> / fator termo1 .)
    SIM_LE          reduce using rule 50 (termo1 -> / fator termo1 .)
    >               reduce using rule 50 (termo1 -> / fator termo1 .)
    SIM_GE          reduce using rule 50 (termo1 -> / fator termo1 .)
    OR              reduce using rule 50 (termo1 -> / fator termo1 .)
    AND             reduce using rule 50 (termo1 -> / fator termo1 .)
    :               reduce using rule 50 (termo1 -> / fator termo1 .)
    )               reduce using rule 50 (termo1 -> / fator termo1 .)
    ;               reduce using rule 50 (termo1 -> / fator termo1 .)
    ,               reduce using rule 50 (termo1 -> / fator termo1 .)


state 105

    (29) expressao1 -> AND valor expressao1 .

    :               reduce using rule 29 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 29 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 29 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 29 (expressao1 -> AND valor expressao1 .)


state 106

    (28) expressao1 -> OR valor expressao1 .

    :               reduce using rule 28 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 28 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 28 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 28 (expressao1 -> OR valor expressao1 .)


state 107

    (45) aritmetica1 -> + termo aritmetica1 .

    SIM_EQ          reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    SIM_DIF         reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    <               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    SIM_LE          reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    >               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    SIM_GE          reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    OR              reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    AND             reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    :               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    )               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    ;               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)
    ,               reduce using rule 45 (aritmetica1 -> + termo aritmetica1 .)


state 108

    (46) aritmetica1 -> - termo aritmetica1 .

    SIM_EQ          reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    SIM_DIF         reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    <               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    SIM_LE          reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    >               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    SIM_GE          reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    OR              reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    AND             reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    :               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    )               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    ;               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)
    ,               reduce using rule 46 (aritmetica1 -> - termo aritmetica1 .)


state 109

    (54) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 54 (fator1 -> SIM_POT elemento fator1 .)


state 110

    (18) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 18 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 111

    (20) cmdselecao -> IF expressao : [ listacmd . ] elif else ;

    ]               shift and go to state 115


state 112

    (15) listaexp1 -> , listaexp .

    )               reduce using rule 15 (listaexp1 -> , listaexp .)


state 113

    (19) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 19 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 114

    (25) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (23) else -> . empty
    (24) else -> . ELSE : [ listacmd ]
    (2) empty -> .

    ELSE            shift and go to state 116
    ;               reduce using rule 2 (empty -> .)

    empty                          shift and go to state 118
    else                           shift and go to state 117

state 115

    (20) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (21) elif -> . empty
    (22) elif -> . ELIF expressao : [ listacmd ] elif
    (2) empty -> .

    ELIF            shift and go to state 120
    ELSE            reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)

    elif                           shift and go to state 119
    empty                          shift and go to state 121

state 116

    (24) else -> ELSE . : [ listacmd ]

    :               shift and go to state 122


state 117

    (25) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;

    ;               shift and go to state 123


state 118

    (23) else -> empty .

    ;               reduce using rule 23 (else -> empty .)


state 119

    (20) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (23) else -> . empty
    (24) else -> . ELSE : [ listacmd ]
    (2) empty -> .

    ELSE            shift and go to state 116
    ;               reduce using rule 2 (empty -> .)

    empty                          shift and go to state 118
    else                           shift and go to state 124

state 120

    (22) elif -> ELIF . expressao : [ listacmd ] elif
    (26) expressao -> . valor expressao1
    (30) valor -> . relacional
    (31) valor -> . TRUE
    (32) valor -> . FALSE
    (33) valor -> . NOT valor
    (34) relacional -> . aritmetica relacional1
    (43) aritmetica -> . termo aritmetica1
    (47) termo -> . fator termo1
    (52) fator -> . elemento fator1
    (55) elemento -> . ID
    (56) elemento -> . INTEIRO
    (57) elemento -> . REAL
    (58) elemento -> . LITERAL
    (59) elemento -> . ( expressao )
    (60) elemento -> . + elemento
    (61) elemento -> . - elemento

    TRUE            shift and go to state 21
    FALSE           shift and go to state 33
    NOT             shift and go to state 35
    ID              shift and go to state 31
    INTEIRO         shift and go to state 22
    REAL            shift and go to state 19
    LITERAL         shift and go to state 28
    (               shift and go to state 34
    +               shift and go to state 24
    -               shift and go to state 20

    aritmetica                     shift and go to state 26
    expressao                      shift and go to state 125
    fator                          shift and go to state 25
    termo                          shift and go to state 29
    valor                          shift and go to state 27
    relacional                     shift and go to state 30
    elemento                       shift and go to state 32

state 121

    (21) elif -> empty .

    ELSE            reduce using rule 21 (elif -> empty .)
    ;               reduce using rule 21 (elif -> empty .)


state 122

    (24) else -> ELSE : . [ listacmd ]

    [               shift and go to state 126


state 123

    (25) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 25 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 124

    (20) cmdselecao -> IF expressao : [ listacmd ] elif else . ;

    ;               shift and go to state 127


state 125

    (22) elif -> ELIF expressao . : [ listacmd ] elif

    :               shift and go to state 128


state 126

    (24) else -> ELSE : [ . listacmd ]
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 129
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 127

    (20) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 20 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 128

    (22) elif -> ELIF expressao : . [ listacmd ] elif

    [               shift and go to state 130


state 129

    (24) else -> ELSE : [ listacmd . ]

    ]               shift and go to state 131


state 130

    (22) elif -> ELIF expressao : [ . listacmd ] elif
    (3) listacmd -> . comando listacmd1
    (6) comando -> . cmdatribui
    (7) comando -> . cmdentrada
    (8) comando -> . cmdsaida
    (9) comando -> . cmdselecao
    (10) comando -> . cmdrepeticao
    (17) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (18) cmdentrada -> . INPUT ( listaidenti ) ;
    (19) cmdsaida -> . OUTPUT ( listaexp ) ;
    (20) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (25) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (11) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 13
    OUTPUT          shift and go to state 18
    IF              shift and go to state 15
    WHILE           shift and go to state 8
    ID              shift and go to state 14

    listaidenti                    shift and go to state 12
    cmdrepeticao                   shift and go to state 16
    cmdselecao                     shift and go to state 6
    cmdentrada                     shift and go to state 7
    listacmd                       shift and go to state 132
    cmdsaida                       shift and go to state 11
    comando                        shift and go to state 17
    cmdatribui                     shift and go to state 10

state 131

    (24) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 24 (else -> ELSE : [ listacmd ] .)


state 132

    (22) elif -> ELIF expressao : [ listacmd . ] elif

    ]               shift and go to state 133


state 133

    (22) elif -> ELIF expressao : [ listacmd ] . elif
    (21) elif -> . empty
    (22) elif -> . ELIF expressao : [ listacmd ] elif
    (2) empty -> .

    ELIF            shift and go to state 120
    ELSE            reduce using rule 2 (empty -> .)
    ;               reduce using rule 2 (empty -> .)

    elif                           shift and go to state 134
    empty                          shift and go to state 121

state 134

    (22) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 22 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 22 (elif -> ELIF expressao : [ listacmd ] elif .)

