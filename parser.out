Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Unused terminals:

    HEXADECIMAL
    SIMBOLO
    RESERVADO
    OCTAL
    BINARIO

Grammar

Rule 0     S' -> programa
Rule 1     programa -> DEF ID action2 : [ listacmd ]
Rule 2     programa -> empty
Rule 3     action2 -> <empty>
Rule 4     programa -> DEF ID action2 error [ listacmd ]
Rule 5     programa -> DEF ID action2 : error listacmd ]
Rule 6     programa -> DEF ID action2 : [ listacmd error
Rule 7     programa -> DEF
Rule 8     programa -> DEF ID
Rule 9     programa -> DEF ID action2 :
Rule 10    programa -> DEF ID action2 : [
Rule 11    programa -> DEF ID action2 : [ listacmd
Rule 12    empty -> <empty>
Rule 13    listacmd -> comando listacmd1
Rule 14    listacmd1 -> empty
Rule 15    listacmd1 -> listacmd
Rule 16    comando -> cmdatribui
Rule 17    comando -> cmdentrada
Rule 18    comando -> cmdsaida
Rule 19    comando -> cmdselecao
Rule 20    comando -> cmdrepeticao
Rule 21    listaidenti -> ID listaindenti1
Rule 22    listaindenti1 -> empty
Rule 23    listaindenti1 -> , listaidenti
Rule 24    listaexp -> expressao listaexp1
Rule 25    listaexp1 -> , listaexp
Rule 26    listaexp1 -> empty
Rule 27    listaexp1 -> error listaexp
Rule 28    cmdatribui -> listaidenti SIM_ATTR expressao ;
Rule 29    cmdentrada -> INPUT ( listaidenti ) ;
Rule 30    cmdentrada -> INPUT ( listaidenti error ;
Rule 31    cmdentrada -> INPUT error listaidenti ) ;
Rule 32    cmdentrada -> INPUT ( listaidenti ) error
Rule 33    cmdsaida -> OUTPUT ( listaexp ) ;
Rule 34    cmdsaida -> OUTPUT ( listaexp error ;
Rule 35    cmdsaida -> OUTPUT error listaexp ) ;
Rule 36    cmdsaida -> OUTPUT ( listaexp ) error
Rule 37    cmdselecao -> IF expressao : [ listacmd ] elif else ;
Rule 38    cmdselecao -> IF expressao error [ listacmd ] elif else ;
Rule 39    cmdselecao -> IF expressao : error listacmd ] elif else ;
Rule 40    cmdselecao -> IF expressao : [ listacmd error elif else ;
Rule 41    cmdselecao -> IF expressao : [ listacmd ] elif else error
Rule 42    elif -> empty
Rule 43    elif -> ELIF expressao : [ listacmd ] elif
Rule 44    elif -> ELIF expressao error [ listacmd ] elif
Rule 45    elif -> ELIF expressao : error listacmd ] elif
Rule 46    elif -> ELIF expressao : [ listacmd error elif
Rule 47    else -> empty
Rule 48    else -> ELSE : [ listacmd ]
Rule 49    else -> ELSE error [ listacmd ]
Rule 50    else -> ELSE : error listacmd ]
Rule 51    else -> ELSE : [ listacmd error
Rule 52    cmdrepeticao -> WHILE expressao : [ listacmd ] else ;
Rule 53    cmdrepeticao -> WHILE expressao error [ listacmd ] else ;
Rule 54    cmdrepeticao -> WHILE expressao : error listacmd ] else ;
Rule 55    cmdrepeticao -> WHILE expressao : [ listacmd error else ;
Rule 56    cmdrepeticao -> WHILE expressao : [ listacmd ] else error
Rule 57    expressao -> valor expressao1
Rule 58    expressao1 -> empty
Rule 59    expressao1 -> OR valor expressao1
Rule 60    expressao1 -> AND valor expressao1
Rule 61    expressao1 -> error valor expressao1
Rule 62    valor -> relacional
Rule 63    valor -> TRUE
Rule 64    valor -> FALSE
Rule 65    valor -> NOT valor
Rule 66    relacional -> aritmetica relacional1
Rule 67    relacional1 -> operador aritmetica
Rule 68    relacional1 -> empty
Rule 69    operador -> SIM_EQ
Rule 70    operador -> SIM_DIF
Rule 71    operador -> <
Rule 72    operador -> SIM_LE
Rule 73    operador -> >
Rule 74    operador -> SIM_GE
Rule 75    aritmetica -> termo aritmetica1
Rule 76    aritmetica1 -> empty
Rule 77    aritmetica1 -> + termo aritmetica1 p_action23
Rule 78    aritmetica1 -> - termo aritmetica1 p_action24
Rule 79    termo -> fator termo1
Rule 80    termo1 -> empty
Rule 81    termo1 -> * fator termo1 p_action25
Rule 82    termo1 -> / fator termo1 p_action26
Rule 83    termo1 -> % fator termo1 p_action27
Rule 84    fator -> elemento fator1
Rule 85    fator1 -> empty
Rule 86    fator1 -> SIM_POT elemento fator1
Rule 87    elemento -> ID
Rule 88    elemento -> INTEIRO
Rule 89    elemento -> REAL
Rule 90    elemento -> LITERAL
Rule 91    elemento -> ( expressao )
Rule 92    elemento -> + elemento
Rule 93    elemento -> - elemento
Rule 94    p_action23 -> <empty>
Rule 95    p_action24 -> <empty>
Rule 96    p_action25 -> <empty>
Rule 97    p_action26 -> <empty>
Rule 98    p_action27 -> <empty>

Terminals, with rules where they appear

%                    : 83
(                    : 29 30 32 33 34 36 91
)                    : 29 31 32 33 35 36 91
*                    : 81
+                    : 77 92
,                    : 23 25
-                    : 78 93
/                    : 82
:                    : 1 5 6 9 10 11 37 39 40 41 43 45 46 48 50 51 52 54 55 56
;                    : 28 29 30 31 33 34 35 37 38 39 40 52 53 54 55
<                    : 71
>                    : 73
AND                  : 60
BINARIO              : 
DEF                  : 1 4 5 6 7 8 9 10 11
ELIF                 : 43 44 45 46
ELSE                 : 48 49 50 51
FALSE                : 64
HEXADECIMAL          : 
ID                   : 1 4 5 6 8 9 10 11 21 87
IF                   : 37 38 39 40 41
INPUT                : 29 30 31 32
INTEIRO              : 88
LITERAL              : 90
NOT                  : 65
OCTAL                : 
OR                   : 59
OUTPUT               : 33 34 35 36
REAL                 : 89
RESERVADO            : 
SIMBOLO              : 
SIM_ATTR             : 28
SIM_DIF              : 70
SIM_EQ               : 69
SIM_GE               : 74
SIM_LE               : 72
SIM_POT              : 86
TRUE                 : 63
WHILE                : 52 53 54 55 56
[                    : 1 4 6 10 11 37 38 40 41 43 44 46 48 49 51 52 53 55 56
]                    : 1 4 5 37 38 39 41 43 44 45 48 49 50 52 53 54 56
error                : 4 5 6 27 30 31 32 34 35 36 38 39 40 41 44 45 46 49 50 51 53 54 55 56 61

Nonterminals, with rules where they appear

action2              : 1 4 5 6 9 10 11
aritmetica           : 66 67
aritmetica1          : 75 77 78
cmdatribui           : 16
cmdentrada           : 17
cmdrepeticao         : 20
cmdsaida             : 18
cmdselecao           : 19
comando              : 13
elemento             : 84 86 92 93
elif                 : 37 38 39 40 41 43 44 45 46
else                 : 37 38 39 40 41 52 53 54 55 56
empty                : 2 14 22 26 42 47 58 68 76 80 85
expressao            : 24 28 37 38 39 40 41 43 44 45 46 52 53 54 55 56 91
expressao1           : 57 59 60 61
fator                : 79 81 82 83
fator1               : 84 86
listacmd             : 1 4 5 6 11 15 37 38 39 40 41 43 44 45 46 48 49 50 51 52 53 54 55 56
listacmd1            : 13
listaexp             : 25 27 33 34 35 36
listaexp1            : 24
listaidenti          : 23 28 29 30 31 32
listaindenti1        : 21
operador             : 67
p_action23           : 77
p_action24           : 78
p_action25           : 81
p_action26           : 82
p_action27           : 83
programa             : 0
relacional           : 62
relacional1          : 66
termo                : 75 77 78
termo1               : 79 81 82 83
valor                : 57 59 60 61 65

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . DEF ID action2 : [ listacmd ]
    (2) programa -> . empty
    (4) programa -> . DEF ID action2 error [ listacmd ]
    (5) programa -> . DEF ID action2 : error listacmd ]
    (6) programa -> . DEF ID action2 : [ listacmd error
    (7) programa -> . DEF
    (8) programa -> . DEF ID
    (9) programa -> . DEF ID action2 :
    (10) programa -> . DEF ID action2 : [
    (11) programa -> . DEF ID action2 : [ listacmd
    (12) empty -> .

    DEF             shift and go to state 3
    $end            reduce using rule 12 (empty -> .)

    programa                       shift and go to state 2
    empty                          shift and go to state 1

state 1

    (2) programa -> empty .

    $end            reduce using rule 2 (programa -> empty .)


state 2

    (0) S' -> programa .



state 3

    (1) programa -> DEF . ID action2 : [ listacmd ]
    (4) programa -> DEF . ID action2 error [ listacmd ]
    (5) programa -> DEF . ID action2 : error listacmd ]
    (6) programa -> DEF . ID action2 : [ listacmd error
    (7) programa -> DEF .
    (8) programa -> DEF . ID
    (9) programa -> DEF . ID action2 :
    (10) programa -> DEF . ID action2 : [
    (11) programa -> DEF . ID action2 : [ listacmd

    ID              shift and go to state 4
    $end            reduce using rule 7 (programa -> DEF .)


state 4

    (1) programa -> DEF ID . action2 : [ listacmd ]
    (4) programa -> DEF ID . action2 error [ listacmd ]
    (5) programa -> DEF ID . action2 : error listacmd ]
    (6) programa -> DEF ID . action2 : [ listacmd error
    (8) programa -> DEF ID .
    (9) programa -> DEF ID . action2 :
    (10) programa -> DEF ID . action2 : [
    (11) programa -> DEF ID . action2 : [ listacmd
    (3) action2 -> .

    $end            reduce using rule 8 (programa -> DEF ID .)
    :               reduce using rule 3 (action2 -> .)
    error           reduce using rule 3 (action2 -> .)

    action2                        shift and go to state 5

state 5

    (1) programa -> DEF ID action2 . : [ listacmd ]
    (4) programa -> DEF ID action2 . error [ listacmd ]
    (5) programa -> DEF ID action2 . : error listacmd ]
    (6) programa -> DEF ID action2 . : [ listacmd error
    (9) programa -> DEF ID action2 . :
    (10) programa -> DEF ID action2 . : [
    (11) programa -> DEF ID action2 . : [ listacmd

    :               shift and go to state 7
    error           shift and go to state 6


state 6

    (4) programa -> DEF ID action2 error . [ listacmd ]

    [               shift and go to state 8


state 7

    (1) programa -> DEF ID action2 : . [ listacmd ]
    (5) programa -> DEF ID action2 : . error listacmd ]
    (6) programa -> DEF ID action2 : . [ listacmd error
    (9) programa -> DEF ID action2 : .
    (10) programa -> DEF ID action2 : . [
    (11) programa -> DEF ID action2 : . [ listacmd

    [               shift and go to state 10
    error           shift and go to state 9
    $end            reduce using rule 9 (programa -> DEF ID action2 : .)


state 8

    (4) programa -> DEF ID action2 error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 14
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 9

    (5) programa -> DEF ID action2 : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 24
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 10

    (1) programa -> DEF ID action2 : [ . listacmd ]
    (6) programa -> DEF ID action2 : [ . listacmd error
    (10) programa -> DEF ID action2 : [ .
    (11) programa -> DEF ID action2 : [ . listacmd
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    $end            reduce using rule 10 (programa -> DEF ID action2 : [ .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 25
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 11

    (19) comando -> cmdselecao .

    INPUT           reduce using rule 19 (comando -> cmdselecao .)
    OUTPUT          reduce using rule 19 (comando -> cmdselecao .)
    IF              reduce using rule 19 (comando -> cmdselecao .)
    WHILE           reduce using rule 19 (comando -> cmdselecao .)
    ID              reduce using rule 19 (comando -> cmdselecao .)
    ]               reduce using rule 19 (comando -> cmdselecao .)
    error           reduce using rule 19 (comando -> cmdselecao .)
    $end            reduce using rule 19 (comando -> cmdselecao .)


state 12

    (17) comando -> cmdentrada .

    INPUT           reduce using rule 17 (comando -> cmdentrada .)
    OUTPUT          reduce using rule 17 (comando -> cmdentrada .)
    IF              reduce using rule 17 (comando -> cmdentrada .)
    WHILE           reduce using rule 17 (comando -> cmdentrada .)
    ID              reduce using rule 17 (comando -> cmdentrada .)
    ]               reduce using rule 17 (comando -> cmdentrada .)
    error           reduce using rule 17 (comando -> cmdentrada .)
    $end            reduce using rule 17 (comando -> cmdentrada .)


state 13

    (52) cmdrepeticao -> WHILE . expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> WHILE . expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE . expressao : error listacmd ] else ;
    (55) cmdrepeticao -> WHILE . expressao : [ listacmd error else ;
    (56) cmdrepeticao -> WHILE . expressao : [ listacmd ] else error
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 30
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 14

    (4) programa -> DEF ID action2 error [ listacmd . ]

    ]               shift and go to state 43


state 15

    (16) comando -> cmdatribui .

    INPUT           reduce using rule 16 (comando -> cmdatribui .)
    OUTPUT          reduce using rule 16 (comando -> cmdatribui .)
    IF              reduce using rule 16 (comando -> cmdatribui .)
    WHILE           reduce using rule 16 (comando -> cmdatribui .)
    ID              reduce using rule 16 (comando -> cmdatribui .)
    ]               reduce using rule 16 (comando -> cmdatribui .)
    error           reduce using rule 16 (comando -> cmdatribui .)
    $end            reduce using rule 16 (comando -> cmdatribui .)


state 16

    (18) comando -> cmdsaida .

    INPUT           reduce using rule 18 (comando -> cmdsaida .)
    OUTPUT          reduce using rule 18 (comando -> cmdsaida .)
    IF              reduce using rule 18 (comando -> cmdsaida .)
    WHILE           reduce using rule 18 (comando -> cmdsaida .)
    ID              reduce using rule 18 (comando -> cmdsaida .)
    ]               reduce using rule 18 (comando -> cmdsaida .)
    error           reduce using rule 18 (comando -> cmdsaida .)
    $end            reduce using rule 18 (comando -> cmdsaida .)


state 17

    (28) cmdatribui -> listaidenti . SIM_ATTR expressao ;

    SIM_ATTR        shift and go to state 44


state 18

    (29) cmdentrada -> INPUT . ( listaidenti ) ;
    (30) cmdentrada -> INPUT . ( listaidenti error ;
    (31) cmdentrada -> INPUT . error listaidenti ) ;
    (32) cmdentrada -> INPUT . ( listaidenti ) error

    (               shift and go to state 45
    error           shift and go to state 46


state 19

    (21) listaidenti -> ID . listaindenti1
    (22) listaindenti1 -> . empty
    (23) listaindenti1 -> . , listaidenti
    (12) empty -> .

    ,               shift and go to state 49
    SIM_ATTR        reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    listaindenti1                  shift and go to state 47
    empty                          shift and go to state 48

state 20

    (37) cmdselecao -> IF . expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> IF . expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> IF . expressao : error listacmd ] elif else ;
    (40) cmdselecao -> IF . expressao : [ listacmd error elif else ;
    (41) cmdselecao -> IF . expressao : [ listacmd ] elif else error
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 50
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 21

    (20) comando -> cmdrepeticao .

    INPUT           reduce using rule 20 (comando -> cmdrepeticao .)
    OUTPUT          reduce using rule 20 (comando -> cmdrepeticao .)
    IF              reduce using rule 20 (comando -> cmdrepeticao .)
    WHILE           reduce using rule 20 (comando -> cmdrepeticao .)
    ID              reduce using rule 20 (comando -> cmdrepeticao .)
    ]               reduce using rule 20 (comando -> cmdrepeticao .)
    error           reduce using rule 20 (comando -> cmdrepeticao .)
    $end            reduce using rule 20 (comando -> cmdrepeticao .)


state 22

    (13) listacmd -> comando . listacmd1
    (14) listacmd1 -> . empty
    (15) listacmd1 -> . listacmd
    (12) empty -> .
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    ]               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    $end            reduce using rule 12 (empty -> .)
    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    listacmd1                      shift and go to state 52
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 51
    cmdsaida                       shift and go to state 16
    empty                          shift and go to state 53
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 23

    (33) cmdsaida -> OUTPUT . ( listaexp ) ;
    (34) cmdsaida -> OUTPUT . ( listaexp error ;
    (35) cmdsaida -> OUTPUT . error listaexp ) ;
    (36) cmdsaida -> OUTPUT . ( listaexp ) error

    (               shift and go to state 54
    error           shift and go to state 55


state 24

    (5) programa -> DEF ID action2 : error listacmd . ]

    ]               shift and go to state 56


state 25

    (1) programa -> DEF ID action2 : [ listacmd . ]
    (6) programa -> DEF ID action2 : [ listacmd . error
    (11) programa -> DEF ID action2 : [ listacmd .

    ]               shift and go to state 58
    error           shift and go to state 57
    $end            reduce using rule 11 (programa -> DEF ID action2 : [ listacmd .)


state 26

    (89) elemento -> REAL .

    SIM_POT         reduce using rule 89 (elemento -> REAL .)
    *               reduce using rule 89 (elemento -> REAL .)
    /               reduce using rule 89 (elemento -> REAL .)
    %               reduce using rule 89 (elemento -> REAL .)
    +               reduce using rule 89 (elemento -> REAL .)
    -               reduce using rule 89 (elemento -> REAL .)
    SIM_EQ          reduce using rule 89 (elemento -> REAL .)
    SIM_DIF         reduce using rule 89 (elemento -> REAL .)
    <               reduce using rule 89 (elemento -> REAL .)
    SIM_LE          reduce using rule 89 (elemento -> REAL .)
    >               reduce using rule 89 (elemento -> REAL .)
    SIM_GE          reduce using rule 89 (elemento -> REAL .)
    OR              reduce using rule 89 (elemento -> REAL .)
    AND             reduce using rule 89 (elemento -> REAL .)
    error           reduce using rule 89 (elemento -> REAL .)
    :               reduce using rule 89 (elemento -> REAL .)
    )               reduce using rule 89 (elemento -> REAL .)
    ;               reduce using rule 89 (elemento -> REAL .)
    ,               reduce using rule 89 (elemento -> REAL .)


state 27

    (93) elemento -> - . elemento
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 59

state 28

    (63) valor -> TRUE .

    OR              reduce using rule 63 (valor -> TRUE .)
    AND             reduce using rule 63 (valor -> TRUE .)
    error           reduce using rule 63 (valor -> TRUE .)
    :               reduce using rule 63 (valor -> TRUE .)
    ,               reduce using rule 63 (valor -> TRUE .)
    )               reduce using rule 63 (valor -> TRUE .)
    ;               reduce using rule 63 (valor -> TRUE .)


state 29

    (88) elemento -> INTEIRO .

    SIM_POT         reduce using rule 88 (elemento -> INTEIRO .)
    *               reduce using rule 88 (elemento -> INTEIRO .)
    /               reduce using rule 88 (elemento -> INTEIRO .)
    %               reduce using rule 88 (elemento -> INTEIRO .)
    +               reduce using rule 88 (elemento -> INTEIRO .)
    -               reduce using rule 88 (elemento -> INTEIRO .)
    SIM_EQ          reduce using rule 88 (elemento -> INTEIRO .)
    SIM_DIF         reduce using rule 88 (elemento -> INTEIRO .)
    <               reduce using rule 88 (elemento -> INTEIRO .)
    SIM_LE          reduce using rule 88 (elemento -> INTEIRO .)
    >               reduce using rule 88 (elemento -> INTEIRO .)
    SIM_GE          reduce using rule 88 (elemento -> INTEIRO .)
    OR              reduce using rule 88 (elemento -> INTEIRO .)
    AND             reduce using rule 88 (elemento -> INTEIRO .)
    error           reduce using rule 88 (elemento -> INTEIRO .)
    :               reduce using rule 88 (elemento -> INTEIRO .)
    )               reduce using rule 88 (elemento -> INTEIRO .)
    ;               reduce using rule 88 (elemento -> INTEIRO .)
    ,               reduce using rule 88 (elemento -> INTEIRO .)


state 30

    (52) cmdrepeticao -> WHILE expressao . : [ listacmd ] else ;
    (53) cmdrepeticao -> WHILE expressao . error [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE expressao . : error listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao . : [ listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao . : [ listacmd ] else error

    :               shift and go to state 61
    error           shift and go to state 60


state 31

    (92) elemento -> + . elemento
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 62

state 32

    (79) termo -> fator . termo1
    (80) termo1 -> . empty
    (81) termo1 -> . * fator termo1 p_action25
    (82) termo1 -> . / fator termo1 p_action26
    (83) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 63
    empty                          shift and go to state 67

state 33

    (66) relacional -> aritmetica . relacional1
    (67) relacional1 -> . operador aritmetica
    (68) relacional1 -> . empty
    (69) operador -> . SIM_EQ
    (70) operador -> . SIM_DIF
    (71) operador -> . <
    (72) operador -> . SIM_LE
    (73) operador -> . >
    (74) operador -> . SIM_GE
    (12) empty -> .

    SIM_EQ          shift and go to state 68
    SIM_DIF         shift and go to state 71
    <               shift and go to state 74
    SIM_LE          shift and go to state 76
    >               shift and go to state 73
    SIM_GE          shift and go to state 70
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    relacional1                    shift and go to state 72
    operador                       shift and go to state 69
    empty                          shift and go to state 75

state 34

    (91) elemento -> ( . expressao )
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 77
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 35

    (57) expressao -> valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 80
    empty                          shift and go to state 82

state 36

    (90) elemento -> LITERAL .

    SIM_POT         reduce using rule 90 (elemento -> LITERAL .)
    *               reduce using rule 90 (elemento -> LITERAL .)
    /               reduce using rule 90 (elemento -> LITERAL .)
    %               reduce using rule 90 (elemento -> LITERAL .)
    +               reduce using rule 90 (elemento -> LITERAL .)
    -               reduce using rule 90 (elemento -> LITERAL .)
    SIM_EQ          reduce using rule 90 (elemento -> LITERAL .)
    SIM_DIF         reduce using rule 90 (elemento -> LITERAL .)
    <               reduce using rule 90 (elemento -> LITERAL .)
    SIM_LE          reduce using rule 90 (elemento -> LITERAL .)
    >               reduce using rule 90 (elemento -> LITERAL .)
    SIM_GE          reduce using rule 90 (elemento -> LITERAL .)
    OR              reduce using rule 90 (elemento -> LITERAL .)
    AND             reduce using rule 90 (elemento -> LITERAL .)
    error           reduce using rule 90 (elemento -> LITERAL .)
    :               reduce using rule 90 (elemento -> LITERAL .)
    )               reduce using rule 90 (elemento -> LITERAL .)
    ;               reduce using rule 90 (elemento -> LITERAL .)
    ,               reduce using rule 90 (elemento -> LITERAL .)


state 37

    (75) aritmetica -> termo . aritmetica1
    (76) aritmetica1 -> . empty
    (77) aritmetica1 -> . + termo aritmetica1 p_action23
    (78) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 85
    empty                          shift and go to state 86

state 38

    (62) valor -> relacional .

    OR              reduce using rule 62 (valor -> relacional .)
    AND             reduce using rule 62 (valor -> relacional .)
    error           reduce using rule 62 (valor -> relacional .)
    :               reduce using rule 62 (valor -> relacional .)
    ,               reduce using rule 62 (valor -> relacional .)
    )               reduce using rule 62 (valor -> relacional .)
    ;               reduce using rule 62 (valor -> relacional .)


state 39

    (87) elemento -> ID .

    SIM_POT         reduce using rule 87 (elemento -> ID .)
    *               reduce using rule 87 (elemento -> ID .)
    /               reduce using rule 87 (elemento -> ID .)
    %               reduce using rule 87 (elemento -> ID .)
    +               reduce using rule 87 (elemento -> ID .)
    -               reduce using rule 87 (elemento -> ID .)
    SIM_EQ          reduce using rule 87 (elemento -> ID .)
    SIM_DIF         reduce using rule 87 (elemento -> ID .)
    <               reduce using rule 87 (elemento -> ID .)
    SIM_LE          reduce using rule 87 (elemento -> ID .)
    >               reduce using rule 87 (elemento -> ID .)
    SIM_GE          reduce using rule 87 (elemento -> ID .)
    OR              reduce using rule 87 (elemento -> ID .)
    AND             reduce using rule 87 (elemento -> ID .)
    error           reduce using rule 87 (elemento -> ID .)
    :               reduce using rule 87 (elemento -> ID .)
    )               reduce using rule 87 (elemento -> ID .)
    ;               reduce using rule 87 (elemento -> ID .)
    ,               reduce using rule 87 (elemento -> ID .)


state 40

    (84) fator -> elemento . fator1
    (85) fator1 -> . empty
    (86) fator1 -> . SIM_POT elemento fator1
    (12) empty -> .

    SIM_POT         shift and go to state 88
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 87
    empty                          shift and go to state 89

state 41

    (64) valor -> FALSE .

    OR              reduce using rule 64 (valor -> FALSE .)
    AND             reduce using rule 64 (valor -> FALSE .)
    error           reduce using rule 64 (valor -> FALSE .)
    :               reduce using rule 64 (valor -> FALSE .)
    ,               reduce using rule 64 (valor -> FALSE .)
    )               reduce using rule 64 (valor -> FALSE .)
    ;               reduce using rule 64 (valor -> FALSE .)


state 42

    (65) valor -> NOT . valor
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 90
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 43

    (4) programa -> DEF ID action2 error [ listacmd ] .

    $end            reduce using rule 4 (programa -> DEF ID action2 error [ listacmd ] .)


state 44

    (28) cmdatribui -> listaidenti SIM_ATTR . expressao ;
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 91
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 45

    (29) cmdentrada -> INPUT ( . listaidenti ) ;
    (30) cmdentrada -> INPUT ( . listaidenti error ;
    (32) cmdentrada -> INPUT ( . listaidenti ) error
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 92

state 46

    (31) cmdentrada -> INPUT error . listaidenti ) ;
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 93

state 47

    (21) listaidenti -> ID listaindenti1 .

    SIM_ATTR        reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    )               reduce using rule 21 (listaidenti -> ID listaindenti1 .)
    error           reduce using rule 21 (listaidenti -> ID listaindenti1 .)


state 48

    (22) listaindenti1 -> empty .

    SIM_ATTR        reduce using rule 22 (listaindenti1 -> empty .)
    )               reduce using rule 22 (listaindenti1 -> empty .)
    error           reduce using rule 22 (listaindenti1 -> empty .)


state 49

    (23) listaindenti1 -> , . listaidenti
    (21) listaidenti -> . ID listaindenti1

    ID              shift and go to state 19

    listaidenti                    shift and go to state 94

state 50

    (37) cmdselecao -> IF expressao . : [ listacmd ] elif else ;
    (38) cmdselecao -> IF expressao . error [ listacmd ] elif else ;
    (39) cmdselecao -> IF expressao . : error listacmd ] elif else ;
    (40) cmdselecao -> IF expressao . : [ listacmd error elif else ;
    (41) cmdselecao -> IF expressao . : [ listacmd ] elif else error

    :               shift and go to state 96
    error           shift and go to state 95


state 51

    (15) listacmd1 -> listacmd .

    ]               reduce using rule 15 (listacmd1 -> listacmd .)
    error           reduce using rule 15 (listacmd1 -> listacmd .)
    $end            reduce using rule 15 (listacmd1 -> listacmd .)


state 52

    (13) listacmd -> comando listacmd1 .

    ]               reduce using rule 13 (listacmd -> comando listacmd1 .)
    error           reduce using rule 13 (listacmd -> comando listacmd1 .)
    $end            reduce using rule 13 (listacmd -> comando listacmd1 .)


state 53

    (14) listacmd1 -> empty .

    ]               reduce using rule 14 (listacmd1 -> empty .)
    error           reduce using rule 14 (listacmd1 -> empty .)
    $end            reduce using rule 14 (listacmd1 -> empty .)


state 54

    (33) cmdsaida -> OUTPUT ( . listaexp ) ;
    (34) cmdsaida -> OUTPUT ( . listaexp error ;
    (36) cmdsaida -> OUTPUT ( . listaexp ) error
    (24) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 98
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 55

    (35) cmdsaida -> OUTPUT error . listaexp ) ;
    (24) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 99
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 56

    (5) programa -> DEF ID action2 : error listacmd ] .

    $end            reduce using rule 5 (programa -> DEF ID action2 : error listacmd ] .)


state 57

    (6) programa -> DEF ID action2 : [ listacmd error .

    $end            reduce using rule 6 (programa -> DEF ID action2 : [ listacmd error .)


state 58

    (1) programa -> DEF ID action2 : [ listacmd ] .

    $end            reduce using rule 1 (programa -> DEF ID action2 : [ listacmd ] .)


state 59

    (93) elemento -> - elemento .

    SIM_POT         reduce using rule 93 (elemento -> - elemento .)
    *               reduce using rule 93 (elemento -> - elemento .)
    /               reduce using rule 93 (elemento -> - elemento .)
    %               reduce using rule 93 (elemento -> - elemento .)
    +               reduce using rule 93 (elemento -> - elemento .)
    -               reduce using rule 93 (elemento -> - elemento .)
    SIM_EQ          reduce using rule 93 (elemento -> - elemento .)
    SIM_DIF         reduce using rule 93 (elemento -> - elemento .)
    <               reduce using rule 93 (elemento -> - elemento .)
    SIM_LE          reduce using rule 93 (elemento -> - elemento .)
    >               reduce using rule 93 (elemento -> - elemento .)
    SIM_GE          reduce using rule 93 (elemento -> - elemento .)
    OR              reduce using rule 93 (elemento -> - elemento .)
    AND             reduce using rule 93 (elemento -> - elemento .)
    error           reduce using rule 93 (elemento -> - elemento .)
    :               reduce using rule 93 (elemento -> - elemento .)
    )               reduce using rule 93 (elemento -> - elemento .)
    ;               reduce using rule 93 (elemento -> - elemento .)
    ,               reduce using rule 93 (elemento -> - elemento .)


state 60

    (53) cmdrepeticao -> WHILE expressao error . [ listacmd ] else ;

    [               shift and go to state 100


state 61

    (52) cmdrepeticao -> WHILE expressao : . [ listacmd ] else ;
    (54) cmdrepeticao -> WHILE expressao : . error listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao : . [ listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao : . [ listacmd ] else error

    [               shift and go to state 102
    error           shift and go to state 101


state 62

    (92) elemento -> + elemento .

    SIM_POT         reduce using rule 92 (elemento -> + elemento .)
    *               reduce using rule 92 (elemento -> + elemento .)
    /               reduce using rule 92 (elemento -> + elemento .)
    %               reduce using rule 92 (elemento -> + elemento .)
    +               reduce using rule 92 (elemento -> + elemento .)
    -               reduce using rule 92 (elemento -> + elemento .)
    SIM_EQ          reduce using rule 92 (elemento -> + elemento .)
    SIM_DIF         reduce using rule 92 (elemento -> + elemento .)
    <               reduce using rule 92 (elemento -> + elemento .)
    SIM_LE          reduce using rule 92 (elemento -> + elemento .)
    >               reduce using rule 92 (elemento -> + elemento .)
    SIM_GE          reduce using rule 92 (elemento -> + elemento .)
    OR              reduce using rule 92 (elemento -> + elemento .)
    AND             reduce using rule 92 (elemento -> + elemento .)
    error           reduce using rule 92 (elemento -> + elemento .)
    :               reduce using rule 92 (elemento -> + elemento .)
    )               reduce using rule 92 (elemento -> + elemento .)
    ;               reduce using rule 92 (elemento -> + elemento .)
    ,               reduce using rule 92 (elemento -> + elemento .)


state 63

    (79) termo -> fator termo1 .

    +               reduce using rule 79 (termo -> fator termo1 .)
    -               reduce using rule 79 (termo -> fator termo1 .)
    SIM_EQ          reduce using rule 79 (termo -> fator termo1 .)
    SIM_DIF         reduce using rule 79 (termo -> fator termo1 .)
    <               reduce using rule 79 (termo -> fator termo1 .)
    SIM_LE          reduce using rule 79 (termo -> fator termo1 .)
    >               reduce using rule 79 (termo -> fator termo1 .)
    SIM_GE          reduce using rule 79 (termo -> fator termo1 .)
    OR              reduce using rule 79 (termo -> fator termo1 .)
    AND             reduce using rule 79 (termo -> fator termo1 .)
    error           reduce using rule 79 (termo -> fator termo1 .)
    ;               reduce using rule 79 (termo -> fator termo1 .)
    ,               reduce using rule 79 (termo -> fator termo1 .)
    )               reduce using rule 79 (termo -> fator termo1 .)
    :               reduce using rule 79 (termo -> fator termo1 .)


state 64

    (83) termo1 -> % . fator termo1 p_action27
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 103
    elemento                       shift and go to state 40

state 65

    (81) termo1 -> * . fator termo1 p_action25
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 104
    elemento                       shift and go to state 40

state 66

    (82) termo1 -> / . fator termo1 p_action26
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 105
    elemento                       shift and go to state 40

state 67

    (80) termo1 -> empty .

    +               reduce using rule 80 (termo1 -> empty .)
    -               reduce using rule 80 (termo1 -> empty .)
    SIM_EQ          reduce using rule 80 (termo1 -> empty .)
    SIM_DIF         reduce using rule 80 (termo1 -> empty .)
    <               reduce using rule 80 (termo1 -> empty .)
    SIM_LE          reduce using rule 80 (termo1 -> empty .)
    >               reduce using rule 80 (termo1 -> empty .)
    SIM_GE          reduce using rule 80 (termo1 -> empty .)
    OR              reduce using rule 80 (termo1 -> empty .)
    AND             reduce using rule 80 (termo1 -> empty .)
    error           reduce using rule 80 (termo1 -> empty .)
    :               reduce using rule 80 (termo1 -> empty .)
    )               reduce using rule 80 (termo1 -> empty .)
    ;               reduce using rule 80 (termo1 -> empty .)
    ,               reduce using rule 80 (termo1 -> empty .)


state 68

    (69) operador -> SIM_EQ .

    ID              reduce using rule 69 (operador -> SIM_EQ .)
    INTEIRO         reduce using rule 69 (operador -> SIM_EQ .)
    REAL            reduce using rule 69 (operador -> SIM_EQ .)
    LITERAL         reduce using rule 69 (operador -> SIM_EQ .)
    (               reduce using rule 69 (operador -> SIM_EQ .)
    +               reduce using rule 69 (operador -> SIM_EQ .)
    -               reduce using rule 69 (operador -> SIM_EQ .)


state 69

    (67) relacional1 -> operador . aritmetica
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    aritmetica                     shift and go to state 106
    termo                          shift and go to state 37
    elemento                       shift and go to state 40

state 70

    (74) operador -> SIM_GE .

    ID              reduce using rule 74 (operador -> SIM_GE .)
    INTEIRO         reduce using rule 74 (operador -> SIM_GE .)
    REAL            reduce using rule 74 (operador -> SIM_GE .)
    LITERAL         reduce using rule 74 (operador -> SIM_GE .)
    (               reduce using rule 74 (operador -> SIM_GE .)
    +               reduce using rule 74 (operador -> SIM_GE .)
    -               reduce using rule 74 (operador -> SIM_GE .)


state 71

    (70) operador -> SIM_DIF .

    ID              reduce using rule 70 (operador -> SIM_DIF .)
    INTEIRO         reduce using rule 70 (operador -> SIM_DIF .)
    REAL            reduce using rule 70 (operador -> SIM_DIF .)
    LITERAL         reduce using rule 70 (operador -> SIM_DIF .)
    (               reduce using rule 70 (operador -> SIM_DIF .)
    +               reduce using rule 70 (operador -> SIM_DIF .)
    -               reduce using rule 70 (operador -> SIM_DIF .)


state 72

    (66) relacional -> aritmetica relacional1 .

    OR              reduce using rule 66 (relacional -> aritmetica relacional1 .)
    AND             reduce using rule 66 (relacional -> aritmetica relacional1 .)
    error           reduce using rule 66 (relacional -> aritmetica relacional1 .)
    ;               reduce using rule 66 (relacional -> aritmetica relacional1 .)
    :               reduce using rule 66 (relacional -> aritmetica relacional1 .)
    )               reduce using rule 66 (relacional -> aritmetica relacional1 .)
    ,               reduce using rule 66 (relacional -> aritmetica relacional1 .)


state 73

    (73) operador -> > .

    ID              reduce using rule 73 (operador -> > .)
    INTEIRO         reduce using rule 73 (operador -> > .)
    REAL            reduce using rule 73 (operador -> > .)
    LITERAL         reduce using rule 73 (operador -> > .)
    (               reduce using rule 73 (operador -> > .)
    +               reduce using rule 73 (operador -> > .)
    -               reduce using rule 73 (operador -> > .)


state 74

    (71) operador -> < .

    ID              reduce using rule 71 (operador -> < .)
    INTEIRO         reduce using rule 71 (operador -> < .)
    REAL            reduce using rule 71 (operador -> < .)
    LITERAL         reduce using rule 71 (operador -> < .)
    (               reduce using rule 71 (operador -> < .)
    +               reduce using rule 71 (operador -> < .)
    -               reduce using rule 71 (operador -> < .)


state 75

    (68) relacional1 -> empty .

    OR              reduce using rule 68 (relacional1 -> empty .)
    AND             reduce using rule 68 (relacional1 -> empty .)
    error           reduce using rule 68 (relacional1 -> empty .)
    :               reduce using rule 68 (relacional1 -> empty .)
    )               reduce using rule 68 (relacional1 -> empty .)
    ;               reduce using rule 68 (relacional1 -> empty .)
    ,               reduce using rule 68 (relacional1 -> empty .)


state 76

    (72) operador -> SIM_LE .

    ID              reduce using rule 72 (operador -> SIM_LE .)
    INTEIRO         reduce using rule 72 (operador -> SIM_LE .)
    REAL            reduce using rule 72 (operador -> SIM_LE .)
    LITERAL         reduce using rule 72 (operador -> SIM_LE .)
    (               reduce using rule 72 (operador -> SIM_LE .)
    +               reduce using rule 72 (operador -> SIM_LE .)
    -               reduce using rule 72 (operador -> SIM_LE .)


state 77

    (91) elemento -> ( expressao . )

    )               shift and go to state 107


state 78

    (60) expressao1 -> AND . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 108
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 79

    (61) expressao1 -> error . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 109
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 80

    (57) expressao -> valor expressao1 .

    :               reduce using rule 57 (expressao -> valor expressao1 .)
    error           reduce using rule 57 (expressao -> valor expressao1 .)
    ,               reduce using rule 57 (expressao -> valor expressao1 .)
    )               reduce using rule 57 (expressao -> valor expressao1 .)
    ;               reduce using rule 57 (expressao -> valor expressao1 .)


state 81

    (59) expressao1 -> OR . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 110
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 82

    (58) expressao1 -> empty .

    :               reduce using rule 58 (expressao1 -> empty .)
    error           reduce using rule 58 (expressao1 -> empty .)
    )               reduce using rule 58 (expressao1 -> empty .)
    ;               reduce using rule 58 (expressao1 -> empty .)
    ,               reduce using rule 58 (expressao1 -> empty .)


state 83

    (77) aritmetica1 -> + . termo aritmetica1 p_action23
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 111
    elemento                       shift and go to state 40

state 84

    (78) aritmetica1 -> - . termo aritmetica1 p_action24
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    fator                          shift and go to state 32
    termo                          shift and go to state 112
    elemento                       shift and go to state 40

state 85

    (75) aritmetica -> termo aritmetica1 .

    SIM_EQ          reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    SIM_DIF         reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    <               reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    SIM_LE          reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    >               reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    SIM_GE          reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    OR              reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    AND             reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    error           reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    :               reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    )               reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    ;               reduce using rule 75 (aritmetica -> termo aritmetica1 .)
    ,               reduce using rule 75 (aritmetica -> termo aritmetica1 .)


state 86

    (76) aritmetica1 -> empty .

    SIM_EQ          reduce using rule 76 (aritmetica1 -> empty .)
    SIM_DIF         reduce using rule 76 (aritmetica1 -> empty .)
    <               reduce using rule 76 (aritmetica1 -> empty .)
    SIM_LE          reduce using rule 76 (aritmetica1 -> empty .)
    >               reduce using rule 76 (aritmetica1 -> empty .)
    SIM_GE          reduce using rule 76 (aritmetica1 -> empty .)
    OR              reduce using rule 76 (aritmetica1 -> empty .)
    AND             reduce using rule 76 (aritmetica1 -> empty .)
    error           reduce using rule 76 (aritmetica1 -> empty .)
    :               reduce using rule 76 (aritmetica1 -> empty .)
    )               reduce using rule 76 (aritmetica1 -> empty .)
    ;               reduce using rule 76 (aritmetica1 -> empty .)
    ,               reduce using rule 76 (aritmetica1 -> empty .)


state 87

    (84) fator -> elemento fator1 .

    *               reduce using rule 84 (fator -> elemento fator1 .)
    /               reduce using rule 84 (fator -> elemento fator1 .)
    %               reduce using rule 84 (fator -> elemento fator1 .)
    +               reduce using rule 84 (fator -> elemento fator1 .)
    -               reduce using rule 84 (fator -> elemento fator1 .)
    SIM_EQ          reduce using rule 84 (fator -> elemento fator1 .)
    SIM_DIF         reduce using rule 84 (fator -> elemento fator1 .)
    <               reduce using rule 84 (fator -> elemento fator1 .)
    SIM_LE          reduce using rule 84 (fator -> elemento fator1 .)
    >               reduce using rule 84 (fator -> elemento fator1 .)
    SIM_GE          reduce using rule 84 (fator -> elemento fator1 .)
    OR              reduce using rule 84 (fator -> elemento fator1 .)
    AND             reduce using rule 84 (fator -> elemento fator1 .)
    error           reduce using rule 84 (fator -> elemento fator1 .)
    ,               reduce using rule 84 (fator -> elemento fator1 .)
    )               reduce using rule 84 (fator -> elemento fator1 .)
    :               reduce using rule 84 (fator -> elemento fator1 .)
    ;               reduce using rule 84 (fator -> elemento fator1 .)


state 88

    (86) fator1 -> SIM_POT . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    elemento                       shift and go to state 113

state 89

    (85) fator1 -> empty .

    *               reduce using rule 85 (fator1 -> empty .)
    /               reduce using rule 85 (fator1 -> empty .)
    %               reduce using rule 85 (fator1 -> empty .)
    +               reduce using rule 85 (fator1 -> empty .)
    -               reduce using rule 85 (fator1 -> empty .)
    SIM_EQ          reduce using rule 85 (fator1 -> empty .)
    SIM_DIF         reduce using rule 85 (fator1 -> empty .)
    <               reduce using rule 85 (fator1 -> empty .)
    SIM_LE          reduce using rule 85 (fator1 -> empty .)
    >               reduce using rule 85 (fator1 -> empty .)
    SIM_GE          reduce using rule 85 (fator1 -> empty .)
    OR              reduce using rule 85 (fator1 -> empty .)
    AND             reduce using rule 85 (fator1 -> empty .)
    error           reduce using rule 85 (fator1 -> empty .)
    :               reduce using rule 85 (fator1 -> empty .)
    )               reduce using rule 85 (fator1 -> empty .)
    ;               reduce using rule 85 (fator1 -> empty .)
    ,               reduce using rule 85 (fator1 -> empty .)


state 90

    (65) valor -> NOT valor .

    OR              reduce using rule 65 (valor -> NOT valor .)
    AND             reduce using rule 65 (valor -> NOT valor .)
    error           reduce using rule 65 (valor -> NOT valor .)
    :               reduce using rule 65 (valor -> NOT valor .)
    ,               reduce using rule 65 (valor -> NOT valor .)
    )               reduce using rule 65 (valor -> NOT valor .)
    ;               reduce using rule 65 (valor -> NOT valor .)


state 91

    (28) cmdatribui -> listaidenti SIM_ATTR expressao . ;

    ;               shift and go to state 114


state 92

    (29) cmdentrada -> INPUT ( listaidenti . ) ;
    (30) cmdentrada -> INPUT ( listaidenti . error ;
    (32) cmdentrada -> INPUT ( listaidenti . ) error

    )               shift and go to state 115
    error           shift and go to state 116


state 93

    (31) cmdentrada -> INPUT error listaidenti . ) ;

    )               shift and go to state 117


state 94

    (23) listaindenti1 -> , listaidenti .

    SIM_ATTR        reduce using rule 23 (listaindenti1 -> , listaidenti .)
    )               reduce using rule 23 (listaindenti1 -> , listaidenti .)
    error           reduce using rule 23 (listaindenti1 -> , listaidenti .)


state 95

    (38) cmdselecao -> IF expressao error . [ listacmd ] elif else ;

    [               shift and go to state 118


state 96

    (37) cmdselecao -> IF expressao : . [ listacmd ] elif else ;
    (39) cmdselecao -> IF expressao : . error listacmd ] elif else ;
    (40) cmdselecao -> IF expressao : . [ listacmd error elif else ;
    (41) cmdselecao -> IF expressao : . [ listacmd ] elif else error

    [               shift and go to state 120
    error           shift and go to state 119


state 97

    (24) listaexp -> expressao . listaexp1
    (25) listaexp1 -> . , listaexp
    (26) listaexp1 -> . empty
    (27) listaexp1 -> . error listaexp
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 122
    error           shift and go to state 123
    )               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    listaexp1                      shift and go to state 121
    empty                          shift and go to state 124

state 98

    (33) cmdsaida -> OUTPUT ( listaexp . ) ;
    (34) cmdsaida -> OUTPUT ( listaexp . error ;
    (36) cmdsaida -> OUTPUT ( listaexp . ) error

    )               shift and go to state 125
    error           shift and go to state 126


state 99

    (35) cmdsaida -> OUTPUT error listaexp . ) ;

    )               shift and go to state 127


state 100

    (53) cmdrepeticao -> WHILE expressao error [ . listacmd ] else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 128
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 101

    (54) cmdrepeticao -> WHILE expressao : error . listacmd ] else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 129
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 102

    (52) cmdrepeticao -> WHILE expressao : [ . listacmd ] else ;
    (55) cmdrepeticao -> WHILE expressao : [ . listacmd error else ;
    (56) cmdrepeticao -> WHILE expressao : [ . listacmd ] else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 130
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 103

    (83) termo1 -> % fator . termo1 p_action27
    (80) termo1 -> . empty
    (81) termo1 -> . * fator termo1 p_action25
    (82) termo1 -> . / fator termo1 p_action26
    (83) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 131
    empty                          shift and go to state 67

state 104

    (81) termo1 -> * fator . termo1 p_action25
    (80) termo1 -> . empty
    (81) termo1 -> . * fator termo1 p_action25
    (82) termo1 -> . / fator termo1 p_action26
    (83) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 132
    empty                          shift and go to state 67

state 105

    (82) termo1 -> / fator . termo1 p_action26
    (80) termo1 -> . empty
    (81) termo1 -> . * fator termo1 p_action25
    (82) termo1 -> . / fator termo1 p_action26
    (83) termo1 -> . % fator termo1 p_action27
    (12) empty -> .

    *               shift and go to state 65
    /               shift and go to state 66
    %               shift and go to state 64
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    termo1                         shift and go to state 133
    empty                          shift and go to state 67

state 106

    (67) relacional1 -> operador aritmetica .

    OR              reduce using rule 67 (relacional1 -> operador aritmetica .)
    AND             reduce using rule 67 (relacional1 -> operador aritmetica .)
    error           reduce using rule 67 (relacional1 -> operador aritmetica .)
    :               reduce using rule 67 (relacional1 -> operador aritmetica .)
    )               reduce using rule 67 (relacional1 -> operador aritmetica .)
    ;               reduce using rule 67 (relacional1 -> operador aritmetica .)
    ,               reduce using rule 67 (relacional1 -> operador aritmetica .)


state 107

    (91) elemento -> ( expressao ) .

    SIM_POT         reduce using rule 91 (elemento -> ( expressao ) .)
    *               reduce using rule 91 (elemento -> ( expressao ) .)
    /               reduce using rule 91 (elemento -> ( expressao ) .)
    %               reduce using rule 91 (elemento -> ( expressao ) .)
    +               reduce using rule 91 (elemento -> ( expressao ) .)
    -               reduce using rule 91 (elemento -> ( expressao ) .)
    SIM_EQ          reduce using rule 91 (elemento -> ( expressao ) .)
    SIM_DIF         reduce using rule 91 (elemento -> ( expressao ) .)
    <               reduce using rule 91 (elemento -> ( expressao ) .)
    SIM_LE          reduce using rule 91 (elemento -> ( expressao ) .)
    >               reduce using rule 91 (elemento -> ( expressao ) .)
    SIM_GE          reduce using rule 91 (elemento -> ( expressao ) .)
    OR              reduce using rule 91 (elemento -> ( expressao ) .)
    AND             reduce using rule 91 (elemento -> ( expressao ) .)
    error           reduce using rule 91 (elemento -> ( expressao ) .)
    :               reduce using rule 91 (elemento -> ( expressao ) .)
    )               reduce using rule 91 (elemento -> ( expressao ) .)
    ;               reduce using rule 91 (elemento -> ( expressao ) .)
    ,               reduce using rule 91 (elemento -> ( expressao ) .)


state 108

    (60) expressao1 -> AND valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 134
    empty                          shift and go to state 82

state 109

    (61) expressao1 -> error valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 135
    empty                          shift and go to state 82

state 110

    (59) expressao1 -> OR valor . expressao1
    (58) expressao1 -> . empty
    (59) expressao1 -> . OR valor expressao1
    (60) expressao1 -> . AND valor expressao1
    (61) expressao1 -> . error valor expressao1
    (12) empty -> .

  ! shift/reduce conflict for error resolved as shift
    OR              shift and go to state 81
    AND             shift and go to state 78
    error           shift and go to state 79
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

  ! error           [ reduce using rule 12 (empty -> .) ]

    expressao1                     shift and go to state 136
    empty                          shift and go to state 82

state 111

    (77) aritmetica1 -> + termo . aritmetica1 p_action23
    (76) aritmetica1 -> . empty
    (77) aritmetica1 -> . + termo aritmetica1 p_action23
    (78) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 137
    empty                          shift and go to state 86

state 112

    (78) aritmetica1 -> - termo . aritmetica1 p_action24
    (76) aritmetica1 -> . empty
    (77) aritmetica1 -> . + termo aritmetica1 p_action23
    (78) aritmetica1 -> . - termo aritmetica1 p_action24
    (12) empty -> .

    +               shift and go to state 83
    -               shift and go to state 84
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    aritmetica1                    shift and go to state 138
    empty                          shift and go to state 86

state 113

    (86) fator1 -> SIM_POT elemento . fator1
    (85) fator1 -> . empty
    (86) fator1 -> . SIM_POT elemento fator1
    (12) empty -> .

    SIM_POT         shift and go to state 88
    *               reduce using rule 12 (empty -> .)
    /               reduce using rule 12 (empty -> .)
    %               reduce using rule 12 (empty -> .)
    +               reduce using rule 12 (empty -> .)
    -               reduce using rule 12 (empty -> .)
    SIM_EQ          reduce using rule 12 (empty -> .)
    SIM_DIF         reduce using rule 12 (empty -> .)
    <               reduce using rule 12 (empty -> .)
    SIM_LE          reduce using rule 12 (empty -> .)
    >               reduce using rule 12 (empty -> .)
    SIM_GE          reduce using rule 12 (empty -> .)
    OR              reduce using rule 12 (empty -> .)
    AND             reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)
    :               reduce using rule 12 (empty -> .)
    )               reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    ,               reduce using rule 12 (empty -> .)

    fator1                         shift and go to state 139
    empty                          shift and go to state 89

state 114

    (28) cmdatribui -> listaidenti SIM_ATTR expressao ; .

    INPUT           reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    OUTPUT          reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    IF              reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    WHILE           reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ID              reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    ]               reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    error           reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)
    $end            reduce using rule 28 (cmdatribui -> listaidenti SIM_ATTR expressao ; .)


state 115

    (29) cmdentrada -> INPUT ( listaidenti ) . ;
    (32) cmdentrada -> INPUT ( listaidenti ) . error

    ;               shift and go to state 141
    error           shift and go to state 140


state 116

    (30) cmdentrada -> INPUT ( listaidenti error . ;

    ;               shift and go to state 142


state 117

    (31) cmdentrada -> INPUT error listaidenti ) . ;

    ;               shift and go to state 143


state 118

    (38) cmdselecao -> IF expressao error [ . listacmd ] elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 144
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 119

    (39) cmdselecao -> IF expressao : error . listacmd ] elif else ;
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 145
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 120

    (37) cmdselecao -> IF expressao : [ . listacmd ] elif else ;
    (40) cmdselecao -> IF expressao : [ . listacmd error elif else ;
    (41) cmdselecao -> IF expressao : [ . listacmd ] elif else error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 146
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 121

    (24) listaexp -> expressao listaexp1 .

    )               reduce using rule 24 (listaexp -> expressao listaexp1 .)
    error           reduce using rule 24 (listaexp -> expressao listaexp1 .)


state 122

    (25) listaexp1 -> , . listaexp
    (24) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 147
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 123

    (27) listaexp1 -> error . listaexp
    (24) listaexp -> . expressao listaexp1
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    expressao                      shift and go to state 97
    listaexp                       shift and go to state 148
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    aritmetica                     shift and go to state 33
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 124

    (26) listaexp1 -> empty .

    )               reduce using rule 26 (listaexp1 -> empty .)
    error           reduce using rule 26 (listaexp1 -> empty .)


state 125

    (33) cmdsaida -> OUTPUT ( listaexp ) . ;
    (36) cmdsaida -> OUTPUT ( listaexp ) . error

    ;               shift and go to state 150
    error           shift and go to state 149


state 126

    (34) cmdsaida -> OUTPUT ( listaexp error . ;

    ;               shift and go to state 151


state 127

    (35) cmdsaida -> OUTPUT error listaexp ) . ;

    ;               shift and go to state 152


state 128

    (53) cmdrepeticao -> WHILE expressao error [ listacmd . ] else ;

    ]               shift and go to state 153


state 129

    (54) cmdrepeticao -> WHILE expressao : error listacmd . ] else ;

    ]               shift and go to state 154


state 130

    (52) cmdrepeticao -> WHILE expressao : [ listacmd . ] else ;
    (55) cmdrepeticao -> WHILE expressao : [ listacmd . error else ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd . ] else error

    ]               shift and go to state 156
    error           shift and go to state 155


state 131

    (83) termo1 -> % fator termo1 . p_action27
    (98) p_action27 -> .

    +               reduce using rule 98 (p_action27 -> .)
    -               reduce using rule 98 (p_action27 -> .)
    SIM_EQ          reduce using rule 98 (p_action27 -> .)
    SIM_DIF         reduce using rule 98 (p_action27 -> .)
    <               reduce using rule 98 (p_action27 -> .)
    SIM_LE          reduce using rule 98 (p_action27 -> .)
    >               reduce using rule 98 (p_action27 -> .)
    SIM_GE          reduce using rule 98 (p_action27 -> .)
    OR              reduce using rule 98 (p_action27 -> .)
    AND             reduce using rule 98 (p_action27 -> .)
    error           reduce using rule 98 (p_action27 -> .)
    :               reduce using rule 98 (p_action27 -> .)
    )               reduce using rule 98 (p_action27 -> .)
    ;               reduce using rule 98 (p_action27 -> .)
    ,               reduce using rule 98 (p_action27 -> .)

    p_action27                     shift and go to state 157

state 132

    (81) termo1 -> * fator termo1 . p_action25
    (96) p_action25 -> .

    +               reduce using rule 96 (p_action25 -> .)
    -               reduce using rule 96 (p_action25 -> .)
    SIM_EQ          reduce using rule 96 (p_action25 -> .)
    SIM_DIF         reduce using rule 96 (p_action25 -> .)
    <               reduce using rule 96 (p_action25 -> .)
    SIM_LE          reduce using rule 96 (p_action25 -> .)
    >               reduce using rule 96 (p_action25 -> .)
    SIM_GE          reduce using rule 96 (p_action25 -> .)
    OR              reduce using rule 96 (p_action25 -> .)
    AND             reduce using rule 96 (p_action25 -> .)
    error           reduce using rule 96 (p_action25 -> .)
    :               reduce using rule 96 (p_action25 -> .)
    )               reduce using rule 96 (p_action25 -> .)
    ;               reduce using rule 96 (p_action25 -> .)
    ,               reduce using rule 96 (p_action25 -> .)

    p_action25                     shift and go to state 158

state 133

    (82) termo1 -> / fator termo1 . p_action26
    (97) p_action26 -> .

    +               reduce using rule 97 (p_action26 -> .)
    -               reduce using rule 97 (p_action26 -> .)
    SIM_EQ          reduce using rule 97 (p_action26 -> .)
    SIM_DIF         reduce using rule 97 (p_action26 -> .)
    <               reduce using rule 97 (p_action26 -> .)
    SIM_LE          reduce using rule 97 (p_action26 -> .)
    >               reduce using rule 97 (p_action26 -> .)
    SIM_GE          reduce using rule 97 (p_action26 -> .)
    OR              reduce using rule 97 (p_action26 -> .)
    AND             reduce using rule 97 (p_action26 -> .)
    error           reduce using rule 97 (p_action26 -> .)
    :               reduce using rule 97 (p_action26 -> .)
    )               reduce using rule 97 (p_action26 -> .)
    ;               reduce using rule 97 (p_action26 -> .)
    ,               reduce using rule 97 (p_action26 -> .)

    p_action26                     shift and go to state 159

state 134

    (60) expressao1 -> AND valor expressao1 .

    :               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    error           reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    )               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    ;               reduce using rule 60 (expressao1 -> AND valor expressao1 .)
    ,               reduce using rule 60 (expressao1 -> AND valor expressao1 .)


state 135

    (61) expressao1 -> error valor expressao1 .

    :               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    error           reduce using rule 61 (expressao1 -> error valor expressao1 .)
    )               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    ;               reduce using rule 61 (expressao1 -> error valor expressao1 .)
    ,               reduce using rule 61 (expressao1 -> error valor expressao1 .)


state 136

    (59) expressao1 -> OR valor expressao1 .

    :               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    error           reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    )               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    ;               reduce using rule 59 (expressao1 -> OR valor expressao1 .)
    ,               reduce using rule 59 (expressao1 -> OR valor expressao1 .)


state 137

    (77) aritmetica1 -> + termo aritmetica1 . p_action23
    (94) p_action23 -> .

    SIM_EQ          reduce using rule 94 (p_action23 -> .)
    SIM_DIF         reduce using rule 94 (p_action23 -> .)
    <               reduce using rule 94 (p_action23 -> .)
    SIM_LE          reduce using rule 94 (p_action23 -> .)
    >               reduce using rule 94 (p_action23 -> .)
    SIM_GE          reduce using rule 94 (p_action23 -> .)
    OR              reduce using rule 94 (p_action23 -> .)
    AND             reduce using rule 94 (p_action23 -> .)
    error           reduce using rule 94 (p_action23 -> .)
    :               reduce using rule 94 (p_action23 -> .)
    )               reduce using rule 94 (p_action23 -> .)
    ;               reduce using rule 94 (p_action23 -> .)
    ,               reduce using rule 94 (p_action23 -> .)

    p_action23                     shift and go to state 160

state 138

    (78) aritmetica1 -> - termo aritmetica1 . p_action24
    (95) p_action24 -> .

    SIM_EQ          reduce using rule 95 (p_action24 -> .)
    SIM_DIF         reduce using rule 95 (p_action24 -> .)
    <               reduce using rule 95 (p_action24 -> .)
    SIM_LE          reduce using rule 95 (p_action24 -> .)
    >               reduce using rule 95 (p_action24 -> .)
    SIM_GE          reduce using rule 95 (p_action24 -> .)
    OR              reduce using rule 95 (p_action24 -> .)
    AND             reduce using rule 95 (p_action24 -> .)
    error           reduce using rule 95 (p_action24 -> .)
    :               reduce using rule 95 (p_action24 -> .)
    )               reduce using rule 95 (p_action24 -> .)
    ;               reduce using rule 95 (p_action24 -> .)
    ,               reduce using rule 95 (p_action24 -> .)

    p_action24                     shift and go to state 161

state 139

    (86) fator1 -> SIM_POT elemento fator1 .

    *               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    /               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    %               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    +               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    -               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    SIM_EQ          reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    SIM_DIF         reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    <               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    SIM_LE          reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    >               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    SIM_GE          reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    OR              reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    AND             reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    error           reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    :               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    )               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    ;               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)
    ,               reduce using rule 86 (fator1 -> SIM_POT elemento fator1 .)


state 140

    (32) cmdentrada -> INPUT ( listaidenti ) error .

    INPUT           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    OUTPUT          reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    IF              reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    WHILE           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    ID              reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    ]               reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    error           reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)
    $end            reduce using rule 32 (cmdentrada -> INPUT ( listaidenti ) error .)


state 141

    (29) cmdentrada -> INPUT ( listaidenti ) ; .

    INPUT           reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    OUTPUT          reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    IF              reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    WHILE           reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ID              reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    ]               reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    error           reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)
    $end            reduce using rule 29 (cmdentrada -> INPUT ( listaidenti ) ; .)


state 142

    (30) cmdentrada -> INPUT ( listaidenti error ; .

    INPUT           reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    OUTPUT          reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    IF              reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    WHILE           reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    ID              reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    ]               reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    error           reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)
    $end            reduce using rule 30 (cmdentrada -> INPUT ( listaidenti error ; .)


state 143

    (31) cmdentrada -> INPUT error listaidenti ) ; .

    INPUT           reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    OUTPUT          reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    IF              reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    WHILE           reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    ID              reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    ]               reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    error           reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)
    $end            reduce using rule 31 (cmdentrada -> INPUT error listaidenti ) ; .)


state 144

    (38) cmdselecao -> IF expressao error [ listacmd . ] elif else ;

    ]               shift and go to state 162


state 145

    (39) cmdselecao -> IF expressao : error listacmd . ] elif else ;

    ]               shift and go to state 163


state 146

    (37) cmdselecao -> IF expressao : [ listacmd . ] elif else ;
    (40) cmdselecao -> IF expressao : [ listacmd . error elif else ;
    (41) cmdselecao -> IF expressao : [ listacmd . ] elif else error

    ]               shift and go to state 165
    error           shift and go to state 164


state 147

    (25) listaexp1 -> , listaexp .

    )               reduce using rule 25 (listaexp1 -> , listaexp .)
    error           reduce using rule 25 (listaexp1 -> , listaexp .)


state 148

    (27) listaexp1 -> error listaexp .

    )               reduce using rule 27 (listaexp1 -> error listaexp .)
    error           reduce using rule 27 (listaexp1 -> error listaexp .)


state 149

    (36) cmdsaida -> OUTPUT ( listaexp ) error .

    INPUT           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    OUTPUT          reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    IF              reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    WHILE           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ID              reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    ]               reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    error           reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)
    $end            reduce using rule 36 (cmdsaida -> OUTPUT ( listaexp ) error .)


state 150

    (33) cmdsaida -> OUTPUT ( listaexp ) ; .

    INPUT           reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    OUTPUT          reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    IF              reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    WHILE           reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ID              reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    ]               reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    error           reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)
    $end            reduce using rule 33 (cmdsaida -> OUTPUT ( listaexp ) ; .)


state 151

    (34) cmdsaida -> OUTPUT ( listaexp error ; .

    INPUT           reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    OUTPUT          reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    IF              reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    WHILE           reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ID              reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    ]               reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    error           reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)
    $end            reduce using rule 34 (cmdsaida -> OUTPUT ( listaexp error ; .)


state 152

    (35) cmdsaida -> OUTPUT error listaexp ) ; .

    INPUT           reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    OUTPUT          reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    IF              reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    WHILE           reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ID              reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    ]               reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    error           reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)
    $end            reduce using rule 35 (cmdsaida -> OUTPUT error listaexp ) ; .)


state 153

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 166

state 154

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 169

state 155

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 170

state 156

    (52) cmdrepeticao -> WHILE expressao : [ listacmd ] . else ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] . else error
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 171

state 157

    (83) termo1 -> % fator termo1 p_action27 .

    +               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    -               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    SIM_EQ          reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    SIM_DIF         reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    <               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    SIM_LE          reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    >               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    SIM_GE          reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    OR              reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    AND             reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    error           reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    :               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    )               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    ;               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)
    ,               reduce using rule 83 (termo1 -> % fator termo1 p_action27 .)


state 158

    (81) termo1 -> * fator termo1 p_action25 .

    +               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    -               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    SIM_EQ          reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    SIM_DIF         reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    <               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    SIM_LE          reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    >               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    SIM_GE          reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    OR              reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    AND             reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    error           reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    :               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    )               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    ;               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)
    ,               reduce using rule 81 (termo1 -> * fator termo1 p_action25 .)


state 159

    (82) termo1 -> / fator termo1 p_action26 .

    +               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    -               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    SIM_EQ          reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    SIM_DIF         reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    <               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    SIM_LE          reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    >               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    SIM_GE          reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    OR              reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    AND             reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    error           reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    :               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    )               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    ;               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)
    ,               reduce using rule 82 (termo1 -> / fator termo1 p_action26 .)


state 160

    (77) aritmetica1 -> + termo aritmetica1 p_action23 .

    SIM_EQ          reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_DIF         reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    <               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_LE          reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    >               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    SIM_GE          reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    OR              reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    AND             reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    error           reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    :               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    )               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ;               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)
    ,               reduce using rule 77 (aritmetica1 -> + termo aritmetica1 p_action23 .)


state 161

    (78) aritmetica1 -> - termo aritmetica1 p_action24 .

    SIM_EQ          reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_DIF         reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    <               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_LE          reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    >               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    SIM_GE          reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    OR              reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    AND             reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    error           reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    :               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    )               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ;               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)
    ,               reduce using rule 78 (aritmetica1 -> - termo aritmetica1 p_action24 .)


state 162

    (38) cmdselecao -> IF expressao error [ listacmd ] . elif else ;
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)

    elif                           shift and go to state 172
    empty                          shift and go to state 174

state 163

    (39) cmdselecao -> IF expressao : error listacmd ] . elif else ;
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)

    elif                           shift and go to state 175
    empty                          shift and go to state 174

state 164

    (40) cmdselecao -> IF expressao : [ listacmd error . elif else ;
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)

    elif                           shift and go to state 176
    empty                          shift and go to state 174

state 165

    (37) cmdselecao -> IF expressao : [ listacmd ] . elif else ;
    (41) cmdselecao -> IF expressao : [ listacmd ] . elif else error
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    elif                           shift and go to state 177
    empty                          shift and go to state 174

state 166

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] else . ;

    ;               shift and go to state 178


state 167

    (48) else -> ELSE . : [ listacmd ]
    (49) else -> ELSE . error [ listacmd ]
    (50) else -> ELSE . : error listacmd ]
    (51) else -> ELSE . : [ listacmd error

    :               shift and go to state 180
    error           shift and go to state 179


state 168

    (47) else -> empty .

    ;               reduce using rule 47 (else -> empty .)
    error           reduce using rule 47 (else -> empty .)


state 169

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] else . ;

    ;               shift and go to state 181


state 170

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error else . ;

    ;               shift and go to state 182


state 171

    (52) cmdrepeticao -> WHILE expressao : [ listacmd ] else . ;
    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] else . error

    ;               shift and go to state 184
    error           shift and go to state 183


state 172

    (38) cmdselecao -> IF expressao error [ listacmd ] elif . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 185

state 173

    (43) elif -> ELIF . expressao : [ listacmd ] elif
    (44) elif -> ELIF . expressao error [ listacmd ] elif
    (45) elif -> ELIF . expressao : error listacmd ] elif
    (46) elif -> ELIF . expressao : [ listacmd error elif
    (57) expressao -> . valor expressao1
    (62) valor -> . relacional
    (63) valor -> . TRUE
    (64) valor -> . FALSE
    (65) valor -> . NOT valor
    (66) relacional -> . aritmetica relacional1
    (75) aritmetica -> . termo aritmetica1
    (79) termo -> . fator termo1
    (84) fator -> . elemento fator1
    (87) elemento -> . ID
    (88) elemento -> . INTEIRO
    (89) elemento -> . REAL
    (90) elemento -> . LITERAL
    (91) elemento -> . ( expressao )
    (92) elemento -> . + elemento
    (93) elemento -> . - elemento

    TRUE            shift and go to state 28
    FALSE           shift and go to state 41
    NOT             shift and go to state 42
    ID              shift and go to state 39
    INTEIRO         shift and go to state 29
    REAL            shift and go to state 26
    LITERAL         shift and go to state 36
    (               shift and go to state 34
    +               shift and go to state 31
    -               shift and go to state 27

    aritmetica                     shift and go to state 33
    expressao                      shift and go to state 186
    fator                          shift and go to state 32
    termo                          shift and go to state 37
    valor                          shift and go to state 35
    relacional                     shift and go to state 38
    elemento                       shift and go to state 40

state 174

    (42) elif -> empty .

    ELSE            reduce using rule 42 (elif -> empty .)
    ;               reduce using rule 42 (elif -> empty .)
    error           reduce using rule 42 (elif -> empty .)


state 175

    (39) cmdselecao -> IF expressao : error listacmd ] elif . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 187

state 176

    (40) cmdselecao -> IF expressao : [ listacmd error elif . else ;
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 188

state 177

    (37) cmdselecao -> IF expressao : [ listacmd ] elif . else ;
    (41) cmdselecao -> IF expressao : [ listacmd ] elif . else error
    (47) else -> . empty
    (48) else -> . ELSE : [ listacmd ]
    (49) else -> . ELSE error [ listacmd ]
    (50) else -> . ELSE : error listacmd ]
    (51) else -> . ELSE : [ listacmd error
    (12) empty -> .

    ELSE            shift and go to state 167
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    empty                          shift and go to state 168
    else                           shift and go to state 189

state 178

    (53) cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .

    INPUT           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    OUTPUT          reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    IF              reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    WHILE           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ID              reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    ]               reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    error           reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)
    $end            reduce using rule 53 (cmdrepeticao -> WHILE expressao error [ listacmd ] else ; .)


state 179

    (49) else -> ELSE error . [ listacmd ]

    [               shift and go to state 190


state 180

    (48) else -> ELSE : . [ listacmd ]
    (50) else -> ELSE : . error listacmd ]
    (51) else -> ELSE : . [ listacmd error

    [               shift and go to state 192
    error           shift and go to state 191


state 181

    (54) cmdrepeticao -> WHILE expressao : error listacmd ] else ; .

    INPUT           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    OUTPUT          reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    IF              reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    WHILE           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ID              reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    ]               reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    error           reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)
    $end            reduce using rule 54 (cmdrepeticao -> WHILE expressao : error listacmd ] else ; .)


state 182

    (55) cmdrepeticao -> WHILE expressao : [ listacmd error else ; .

    INPUT           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    OUTPUT          reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    IF              reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    WHILE           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ID              reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    ]               reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    error           reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)
    $end            reduce using rule 55 (cmdrepeticao -> WHILE expressao : [ listacmd error else ; .)


state 183

    (56) cmdrepeticao -> WHILE expressao : [ listacmd ] else error .

    INPUT           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    OUTPUT          reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    IF              reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    WHILE           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ID              reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    ]               reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    error           reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)
    $end            reduce using rule 56 (cmdrepeticao -> WHILE expressao : [ listacmd ] else error .)


state 184

    (52) cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .

    INPUT           reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    OUTPUT          reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    IF              reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    WHILE           reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ID              reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    ]               reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    error           reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)
    $end            reduce using rule 52 (cmdrepeticao -> WHILE expressao : [ listacmd ] else ; .)


state 185

    (38) cmdselecao -> IF expressao error [ listacmd ] elif else . ;

    ;               shift and go to state 193


state 186

    (43) elif -> ELIF expressao . : [ listacmd ] elif
    (44) elif -> ELIF expressao . error [ listacmd ] elif
    (45) elif -> ELIF expressao . : error listacmd ] elif
    (46) elif -> ELIF expressao . : [ listacmd error elif

    :               shift and go to state 195
    error           shift and go to state 194


state 187

    (39) cmdselecao -> IF expressao : error listacmd ] elif else . ;

    ;               shift and go to state 196


state 188

    (40) cmdselecao -> IF expressao : [ listacmd error elif else . ;

    ;               shift and go to state 197


state 189

    (37) cmdselecao -> IF expressao : [ listacmd ] elif else . ;
    (41) cmdselecao -> IF expressao : [ listacmd ] elif else . error

    ;               shift and go to state 199
    error           shift and go to state 198


state 190

    (49) else -> ELSE error [ . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 200
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 191

    (50) else -> ELSE : error . listacmd ]
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 201
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 192

    (48) else -> ELSE : [ . listacmd ]
    (51) else -> ELSE : [ . listacmd error
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 202
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 193

    (38) cmdselecao -> IF expressao error [ listacmd ] elif else ; .

    INPUT           reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    IF              reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    WHILE           reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ID              reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    ]               reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    error           reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)
    $end            reduce using rule 38 (cmdselecao -> IF expressao error [ listacmd ] elif else ; .)


state 194

    (44) elif -> ELIF expressao error . [ listacmd ] elif

    [               shift and go to state 203


state 195

    (43) elif -> ELIF expressao : . [ listacmd ] elif
    (45) elif -> ELIF expressao : . error listacmd ] elif
    (46) elif -> ELIF expressao : . [ listacmd error elif

    [               shift and go to state 205
    error           shift and go to state 204


state 196

    (39) cmdselecao -> IF expressao : error listacmd ] elif else ; .

    INPUT           reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    OUTPUT          reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    IF              reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    WHILE           reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ID              reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    ]               reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    error           reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)
    $end            reduce using rule 39 (cmdselecao -> IF expressao : error listacmd ] elif else ; .)


state 197

    (40) cmdselecao -> IF expressao : [ listacmd error elif else ; .

    INPUT           reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    OUTPUT          reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    IF              reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    WHILE           reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ID              reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    ]               reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    error           reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)
    $end            reduce using rule 40 (cmdselecao -> IF expressao : [ listacmd error elif else ; .)


state 198

    (41) cmdselecao -> IF expressao : [ listacmd ] elif else error .

    INPUT           reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    OUTPUT          reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    IF              reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    WHILE           reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ID              reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    ]               reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    error           reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)
    $end            reduce using rule 41 (cmdselecao -> IF expressao : [ listacmd ] elif else error .)


state 199

    (37) cmdselecao -> IF expressao : [ listacmd ] elif else ; .

    INPUT           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    OUTPUT          reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    IF              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    WHILE           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ID              reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    ]               reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    error           reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)
    $end            reduce using rule 37 (cmdselecao -> IF expressao : [ listacmd ] elif else ; .)


state 200

    (49) else -> ELSE error [ listacmd . ]

    ]               shift and go to state 206


state 201

    (50) else -> ELSE : error listacmd . ]

    ]               shift and go to state 207


state 202

    (48) else -> ELSE : [ listacmd . ]
    (51) else -> ELSE : [ listacmd . error

    ]               shift and go to state 209
    error           shift and go to state 208


state 203

    (44) elif -> ELIF expressao error [ . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 210
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 204

    (45) elif -> ELIF expressao : error . listacmd ] elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 211
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 205

    (43) elif -> ELIF expressao : [ . listacmd ] elif
    (46) elif -> ELIF expressao : [ . listacmd error elif
    (13) listacmd -> . comando listacmd1
    (16) comando -> . cmdatribui
    (17) comando -> . cmdentrada
    (18) comando -> . cmdsaida
    (19) comando -> . cmdselecao
    (20) comando -> . cmdrepeticao
    (28) cmdatribui -> . listaidenti SIM_ATTR expressao ;
    (29) cmdentrada -> . INPUT ( listaidenti ) ;
    (30) cmdentrada -> . INPUT ( listaidenti error ;
    (31) cmdentrada -> . INPUT error listaidenti ) ;
    (32) cmdentrada -> . INPUT ( listaidenti ) error
    (33) cmdsaida -> . OUTPUT ( listaexp ) ;
    (34) cmdsaida -> . OUTPUT ( listaexp error ;
    (35) cmdsaida -> . OUTPUT error listaexp ) ;
    (36) cmdsaida -> . OUTPUT ( listaexp ) error
    (37) cmdselecao -> . IF expressao : [ listacmd ] elif else ;
    (38) cmdselecao -> . IF expressao error [ listacmd ] elif else ;
    (39) cmdselecao -> . IF expressao : error listacmd ] elif else ;
    (40) cmdselecao -> . IF expressao : [ listacmd error elif else ;
    (41) cmdselecao -> . IF expressao : [ listacmd ] elif else error
    (52) cmdrepeticao -> . WHILE expressao : [ listacmd ] else ;
    (53) cmdrepeticao -> . WHILE expressao error [ listacmd ] else ;
    (54) cmdrepeticao -> . WHILE expressao : error listacmd ] else ;
    (55) cmdrepeticao -> . WHILE expressao : [ listacmd error else ;
    (56) cmdrepeticao -> . WHILE expressao : [ listacmd ] else error
    (21) listaidenti -> . ID listaindenti1

    INPUT           shift and go to state 18
    OUTPUT          shift and go to state 23
    IF              shift and go to state 20
    WHILE           shift and go to state 13
    ID              shift and go to state 19

    listaidenti                    shift and go to state 17
    cmdrepeticao                   shift and go to state 21
    cmdselecao                     shift and go to state 11
    cmdentrada                     shift and go to state 12
    listacmd                       shift and go to state 212
    cmdsaida                       shift and go to state 16
    comando                        shift and go to state 22
    cmdatribui                     shift and go to state 15

state 206

    (49) else -> ELSE error [ listacmd ] .

    ;               reduce using rule 49 (else -> ELSE error [ listacmd ] .)
    error           reduce using rule 49 (else -> ELSE error [ listacmd ] .)


state 207

    (50) else -> ELSE : error listacmd ] .

    ;               reduce using rule 50 (else -> ELSE : error listacmd ] .)
    error           reduce using rule 50 (else -> ELSE : error listacmd ] .)


state 208

    (51) else -> ELSE : [ listacmd error .

    ;               reduce using rule 51 (else -> ELSE : [ listacmd error .)
    error           reduce using rule 51 (else -> ELSE : [ listacmd error .)


state 209

    (48) else -> ELSE : [ listacmd ] .

    ;               reduce using rule 48 (else -> ELSE : [ listacmd ] .)
    error           reduce using rule 48 (else -> ELSE : [ listacmd ] .)


state 210

    (44) elif -> ELIF expressao error [ listacmd . ] elif

    ]               shift and go to state 213


state 211

    (45) elif -> ELIF expressao : error listacmd . ] elif

    ]               shift and go to state 214


state 212

    (43) elif -> ELIF expressao : [ listacmd . ] elif
    (46) elif -> ELIF expressao : [ listacmd . error elif

    ]               shift and go to state 216
    error           shift and go to state 215


state 213

    (44) elif -> ELIF expressao error [ listacmd ] . elif
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    elif                           shift and go to state 217
    empty                          shift and go to state 174

state 214

    (45) elif -> ELIF expressao : error listacmd ] . elif
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    elif                           shift and go to state 218
    empty                          shift and go to state 174

state 215

    (46) elif -> ELIF expressao : [ listacmd error . elif
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    elif                           shift and go to state 219
    empty                          shift and go to state 174

state 216

    (43) elif -> ELIF expressao : [ listacmd ] . elif
    (42) elif -> . empty
    (43) elif -> . ELIF expressao : [ listacmd ] elif
    (44) elif -> . ELIF expressao error [ listacmd ] elif
    (45) elif -> . ELIF expressao : error listacmd ] elif
    (46) elif -> . ELIF expressao : [ listacmd error elif
    (12) empty -> .

    ELIF            shift and go to state 173
    ELSE            reduce using rule 12 (empty -> .)
    ;               reduce using rule 12 (empty -> .)
    error           reduce using rule 12 (empty -> .)

    elif                           shift and go to state 220
    empty                          shift and go to state 174

state 217

    (44) elif -> ELIF expressao error [ listacmd ] elif .

    ELSE            reduce using rule 44 (elif -> ELIF expressao error [ listacmd ] elif .)
    ;               reduce using rule 44 (elif -> ELIF expressao error [ listacmd ] elif .)
    error           reduce using rule 44 (elif -> ELIF expressao error [ listacmd ] elif .)


state 218

    (45) elif -> ELIF expressao : error listacmd ] elif .

    ELSE            reduce using rule 45 (elif -> ELIF expressao : error listacmd ] elif .)
    ;               reduce using rule 45 (elif -> ELIF expressao : error listacmd ] elif .)
    error           reduce using rule 45 (elif -> ELIF expressao : error listacmd ] elif .)


state 219

    (46) elif -> ELIF expressao : [ listacmd error elif .

    ELSE            reduce using rule 46 (elif -> ELIF expressao : [ listacmd error elif .)
    ;               reduce using rule 46 (elif -> ELIF expressao : [ listacmd error elif .)
    error           reduce using rule 46 (elif -> ELIF expressao : [ listacmd error elif .)


state 220

    (43) elif -> ELIF expressao : [ listacmd ] elif .

    ELSE            reduce using rule 43 (elif -> ELIF expressao : [ listacmd ] elif .)
    ;               reduce using rule 43 (elif -> ELIF expressao : [ listacmd ] elif .)
    error           reduce using rule 43 (elif -> ELIF expressao : [ listacmd ] elif .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for error in state 35 resolved as shift
WARNING: shift/reduce conflict for error in state 97 resolved as shift
WARNING: shift/reduce conflict for error in state 108 resolved as shift
WARNING: shift/reduce conflict for error in state 109 resolved as shift
WARNING: shift/reduce conflict for error in state 110 resolved as shift
